load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "error.go",
        "http.go",
        "init.go",
        "predict.go",
        "registry.go",
    ],
    importpath = "github.com/rai-project/dlframework/http",
    visibility = ["//visibility:public"],
    deps = [
        "//:go_default_library",
        "//httpapi/models:go_default_library",
        "//httpapi/restapi/operations:go_default_library",
        "//httpapi/restapi/operations/predict:go_default_library",
        "//httpapi/restapi/operations/registry:go_default_library",
        "//registryquery:go_default_library",
        "//vendor/github.com/Masterminds/semver:go_default_library",
        "//vendor/github.com/go-openapi/errors:go_default_library",
        "//vendor/github.com/go-openapi/runtime:go_default_library",
        "//vendor/github.com/go-openapi/runtime/middleware:go_default_library",
        "//vendor/github.com/pkg/errors:go_default_library",
        "//vendor/github.com/rai-project/config:go_default_library",
        "//vendor/github.com/rai-project/grpc:go_default_library",
        "//vendor/github.com/rai-project/logger:go_default_library",
        "//vendor/github.com/rai-project/tracer:go_default_library",
        "//vendor/github.com/rai-project/uuid:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/golang.org/x/sync/syncmap:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["http_test.go"],
    embed = [":go_default_library"],
    deps = ["//vendor/github.com/rai-project/config:go_default_library"],
)
