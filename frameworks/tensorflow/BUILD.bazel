load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "allocation_description.pb.go",
        "attr_value.pb.go",
        "builtin_models_static.go",
        "cluster.pb.go",
        "config.pb.go",
        "control_flow.pb.go",
        "cost_graph.pb.go",
        "debug.pb.go",
        "device_attributes.pb.go",
        "device_properties.pb.go",
        "error_codes.pb.go",
        "function.pb.go",
        "graph.pb.go",
        "graph_transfer_info.pb.go",
        "init.go",
        "kernel_def.pb.go",
        "log_memory.pb.go",
        "master.pb.go",
        "master_service.pb.go",
        "meta_graph.pb.go",
        "named_tensor.pb.go",
        "node_def.pb.go",
        "op_def.pb.go",
        "op_gen_overrides.pb.go",
        "queue_runner.pb.go",
        "reader_base.pb.go",
        "register.go",
        "remote_fused_graph_execute_info.pb.go",
        "resource_handle.pb.go",
        "rewriter_config.pb.go",
        "saved_model.pb.go",
        "saver.pb.go",
        "step_stats.pb.go",
        "summary.pb.go",
        "tensor.pb.go",
        "tensor_bundle.pb.go",
        "tensor_description.pb.go",
        "tensor_shape.pb.go",
        "tensor_slice.pb.go",
        "tensorflow_server.pb.go",
        "types.pb.go",
        "variable.pb.go",
        "versions.pb.go",
        "worker.pb.go",
        "worker_service.pb.go",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//:go_default_library",
        "//frameworks/common:go_default_library",
        "@com_github_elazarl_go_bindata_assetfs//:go_default_library",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_gogo_protobuf//types:go_default_library",
        "@com_github_rai_project_config//:go_default_library",
        "@com_github_rai_project_logger//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_x_net//context:go_default_library",
    ],
)
