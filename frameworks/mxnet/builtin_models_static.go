// Code generated by go-bindata.
// sources:
// frameworks/mxnet/builtin_models/README.md
// frameworks/mxnet/builtin_models/ResNeXt101.yml
// frameworks/mxnet/builtin_models/ResNeXt50.yml
// frameworks/mxnet/builtin_models/ResidualNet101.yml
// frameworks/mxnet/builtin_models/ResidualNet18.yml
// frameworks/mxnet/builtin_models/ResidualNet200.yml
// frameworks/mxnet/builtin_models/ResidualNet34.yml
// frameworks/mxnet/builtin_models/ResidualNet50.yml
// frameworks/mxnet/builtin_models/Resnet152_11k.yml
// frameworks/mxnet/builtin_models/caffenet.yml
// frameworks/mxnet/builtin_models/inceptionv3.yml
// frameworks/mxnet/builtin_models/locationnet.yml
// frameworks/mxnet/builtin_models/nin.yml
// frameworks/mxnet/builtin_models/residualNet152.yml
// frameworks/mxnet/builtin_models/squeeznet.yml
// frameworks/mxnet/builtin_models/vgg16.yml
// frameworks/mxnet/builtin_models/vgg19.yml
// DO NOT EDIT!

package mxnet

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xcc\xc1\x0d\xc2\x30\x0c\x05\xd0\x7b\xa7\xf8\x12\x17\x38\x10\x76\x61\x01\x1c\xc8\x6f\xb1\x9a\x38\x95\xe3\x08\xc6\x47\x62\x81\x77\xc2\x73\x6a\x0d\xb5\x47\xeb\x85\x75\x2c\xcb\x7d\x1a\xa4\xe5\x9d\xd8\x68\xf4\x1c\xbc\xb6\xaf\x31\x04\x6a\x88\x37\xe1\xbd\x07\xa4\xd4\xd5\x73\xe3\xa7\xfb\x2e\x38\x4b\x4a\xb7\x94\xe4\x82\xbc\x06\x1d\xf3\x28\x39\xd4\x36\xfc\x51\x14\x8e\x97\xeb\x11\xda\x6d\xa4\xe5\x17\x00\x00\xff\xff\xb2\xa5\x3c\x95\x73\x00\x00\x00"

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 115, mode: os.FileMode(420), modTime: time.Unix(1497483925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnext101Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\x1b\x37\x10\xbd\xf3\x57\x0c\x20\x04\x68\x01\x8b\xab\x75\x6c\x1f\xf6\xd0\x4b\x4e\x41\x11\x1d\x82\x1c\x02\x14\x85\x41\x71\x67\xb5\x93\x70\x49\x82\x33\x6b\x5b\x3d\xf4\xb7\x17\x24\x57\x5a\x19\x71\x1b\xa0\x3a\x08\xe4\xf0\x0d\xe7\xed\x9b\x0f\x7a\x33\x61\x07\x9f\x91\xf7\xf8\x55\xda\x5d\x0b\x1b\xc8\x26\x08\x03\x9c\xc2\x9c\x60\x0a\x3d\x3a\x35\x24\x33\xe1\x73\x48\xdf\x3b\x05\x50\x5d\x3e\x7d\xdd\xa3\xc0\x06\x2e\x47\x30\x84\x04\x32\xe2\xe2\x02\xf0\x84\x89\x29\xf8\x0e\xfe\xde\xe9\xf6\x15\x72\x39\x01\x1b\xbc\x24\x43\x5e\xd4\x05\xdb\xea\x1d\x6c\x2e\x00\xf2\x43\x48\x93\x91\xba\x06\xc6\xc9\x78\x21\x7b\x39\xaf\xa7\x2a\xdf\x63\xc8\x63\xea\x60\x03\x97\x0d\xc3\xcc\xd8\x83\x04\x88\x98\x32\xb2\x32\x83\x98\xb0\x27\x9b\xef\x54\xb0\xfe\x36\x30\xcd\x4e\x28\x3a\x84\xe8\x8c\x64\x3c\x83\x35\x1e\x0e\x08\x1c\xd1\xd2\x40\xd8\x2b\x00\x33\xf5\x0f\x77\x5d\xf1\x3c\xc6\xb9\x83\x64\x28\xa6\xf0\x0d\xad\x34\xd6\xa4\xc9\x6d\xa7\x17\x8f\xd2\x15\xd8\xd6\xc6\xb9\x20\xed\x4f\x91\xc7\x82\x8c\xd1\x3e\xdc\x39\xec\x7e\xea\xb4\x00\x17\xb7\xff\xa6\x72\x8d\xed\x91\x6d\xa2\x28\x45\xeb\xdf\x14\x9c\x33\x0f\xc4\x60\x80\x69\x8a\x0e\x6f\x60\xa4\xe3\xe8\x4e\x59\xae\xd9\x99\x44\x7f\x61\x0f\x1e\xa5\xa4\xce\x24\x3b\x92\xa0\x95\x39\x61\xc9\x38\x4d\xe6\x88\x60\x9d\x61\xa6\x81\x6c\xc9\x95\x56\x00\x5f\x46\xe2\x8b\x97\x0d\x9e\x89\x85\x73\x59\xe5\x22\x73\xe6\x84\x89\xf5\x1a\x3f\x1b\x8d\x1d\x09\x9f\x90\xe1\xb6\xd5\xb7\xef\xc0\xf8\x1e\xee\xf5\xc3\x3b\x90\x10\xb7\x6d\xd9\xe6\xd5\x3d\x60\x4a\x21\x41\xf0\xf0\x31\x87\xde\xa3\xb4\xbf\x6b\x95\x70\xc0\x84\xde\x22\xe7\x1a\x58\x77\x25\xfd\x26\xe6\x6a\x68\xe0\x19\x0f\x4c\x82\x79\x89\x62\xb5\x86\x2a\xc7\x81\xfc\xf1\x55\xe5\x6e\x61\x14\x89\xdc\x35\x8d\x49\x2f\xf4\xa4\x43\x3a\x36\xb1\x1f\x9a\xf6\xa1\x6d\xf5\xee\xfe\xee\x7d\xab\x63\x3f\xa8\x0d\x38\xb2\xe8\xb9\x74\xcb\xea\xbf\x18\x3b\xf8\xf4\xf1\x8b\xda\x00\xf9\x38\x4b\xe1\xb1\x42\xaa\x2d\xa7\x79\x03\x03\x25\x96\x8a\x02\x39\x45\xfc\xa1\x8f\xb6\xc5\xdc\x55\xa5\x55\xad\xd5\xab\x3c\x9e\x83\x5f\xdd\x53\x40\xaf\x52\x9d\x01\x35\xc4\x7a\x4b\x34\xb9\x21\x05\x53\x91\xac\x84\x5e\x4d\x4b\x6b\xf4\x34\xa1\xcf\xad\xc6\x1d\xfc\xd1\xde\xc0\xfb\x1b\xb8\xbd\xbd\x2b\x7f\x7f\xaa\x30\x4b\x9c\xa5\x7e\x45\x0e\x50\xae\x58\xd8\xd4\x33\x05\x0b\xf7\x01\x4d\xae\x98\x02\x35\x6f\xb1\xaf\xf8\x95\x80\x7a\xe3\x03\x16\x8c\x33\x87\xa2\xcb\x15\xff\x45\x95\xb7\xbe\x61\x89\xcc\x8f\x73\x72\x5d\xc9\x6b\xd7\x34\xbd\x11\xa3\xfb\xc9\x59\x3d\xb9\xa6\x74\x49\x53\xd4\xe6\xa6\xc8\x93\xf7\x09\xd9\xe3\x8b\x34\x7c\xf2\x8c\xa2\xe5\x45\x54\x81\x64\xad\xce\xf3\x80\x97\x89\x72\x4c\x26\x8e\xa5\x42\x9f\x91\x8e\xa3\x30\x24\xe4\x30\x27\x8b\x99\xc3\xc1\x30\xfe\xdf\xe8\xed\xae\xdd\xd6\x66\x69\x14\xd4\x38\x8f\xd1\xc8\xd8\xc1\x82\xd8\x66\x04\x9f\xa6\x43\x70\xfa\x1b\x97\x91\xb6\x70\x78\x03\xb7\xdb\xed\x76\xba\xe8\x93\x79\x11\x3f\x96\x6e\x7e\xca\xf9\x31\x8e\x11\x36\x40\x03\x30\xca\x4d\x96\xdb\x17\xcd\xcf\xe4\xeb\x80\xc8\x0b\x09\x60\x3c\x2c\x9e\xd7\x13\xf4\x6a\x94\x66\xcf\x95\xec\xb5\x32\xd5\x50\xae\xef\xd1\x07\xc1\xbc\xfe\x97\x5b\x06\x72\x58\x5e\x1b\x3e\x57\xc9\x8f\x42\x3f\x93\x8c\x54\xa9\x9e\x29\x19\x91\x44\x87\x59\xea\x28\xc0\x17\x49\x66\x1d\x5f\x97\x33\x05\xf0\x9d\x7c\xdf\xc1\x87\xfd\x7e\x61\x9c\xf7\x39\x92\xc7\x39\x19\x77\xf1\xf9\xe5\xc3\x7e\x7f\x03\x9f\xf3\x9f\xd6\xfa\xd7\x5c\xd3\xf9\xd1\x22\x7f\x7c\xcc\x99\x64\x94\xee\x32\x8a\x72\x6b\x56\xdb\xe5\xf1\x29\xed\xbc\x38\x28\x80\xc9\x78\x1a\x90\xe5\xd1\xcc\x32\x86\xd4\x81\x39\xf4\xb3\xeb\xd5\x3f\x01\x00\x00\xff\xff\x45\x60\xb4\xfb\x89\x07\x00\x00"

func resnext101YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnext101Yml,
		"ResNeXt101.yml",
	)
}

func resnext101Yml() (*asset, error) {
	bytes, err := resnext101YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResNeXt101.yml", size: 1929, mode: os.FileMode(420), modTime: time.Unix(1497484490, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnext50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x8f\xdb\x36\x10\xbd\xf3\x57\x0c\x60\x04\x68\x81\x35\x25\x6f\xd6\x7b\xd0\xa1\x97\x9c\x82\x22\x3e\x04\x39\x04\x28\x8a\x05\x4d\x8d\xac\x49\x28\x92\xe0\x8c\x76\xed\x1e\xfa\xdb\x0b\x92\xf2\x47\xb0\xdb\x06\xa8\x0f\x86\x38\x7c\x33\xf3\xf4\xe6\x43\xde\x4c\xd8\xc1\x67\xe4\x1d\x7e\x95\x6d\x0b\x2b\xc8\x16\x08\x03\x9c\xc2\x9c\x60\x0a\x3d\x3a\x35\x24\x33\xe1\x4b\x48\xdf\x3b\x05\x50\x3d\x3e\x7d\xdd\xa1\xc0\x0a\x2e\x57\x30\x84\x04\x32\xe2\xe2\x02\xf0\x8c\x89\x29\xf8\x0e\xfe\x6e\xf5\xe6\x07\xe4\x72\x03\x36\x78\x49\x86\xbc\xa8\x0b\x76\xa3\x33\x85\x33\x80\xfc\x10\xd2\x64\xa4\x3e\x03\xe3\x64\xbc\x90\xbd\xdc\xd7\x5b\x95\xe3\x18\xf2\x98\x3a\x58\xc1\xe5\xc0\x30\x33\xf6\x20\x01\x22\xa6\x8c\xac\xcc\x20\x26\xec\xc9\xe6\x98\x0a\xae\xbf\x15\x4c\xb3\x13\x8a\x0e\x21\x3a\x23\x19\xcf\x60\x8d\x87\x3d\x02\x47\xb4\x34\x10\xf6\x0a\xc0\x4c\xfd\xe3\x43\x57\x3c\x0f\x71\xee\x20\x19\x8a\x29\x7c\x43\x2b\x8d\x35\x69\x72\xeb\xe9\xe8\x51\xba\x02\x5b\xdb\x38\x17\xa4\xfd\x29\xf2\x50\x90\x31\xda\xc7\x07\x87\xdd\x4f\x9d\x16\xe0\xe2\xf6\xdf\x54\x6e\xb1\x3d\xb2\x4d\x14\xa5\x68\xfd\x9b\x82\x73\xe1\x81\x18\x0c\x30\x4d\xd1\xe1\x1d\x8c\x74\x18\xdd\x29\xcb\x35\x3b\x93\xe8\x2f\xec\xc1\xa3\x94\xd2\x99\x64\x47\x12\xb4\x32\x27\x2c\x15\xa7\xc9\x1c\x10\xac\x33\xcc\x34\x90\x2d\xb5\xd2\x0a\xe0\xcb\x48\x7c\xf1\xb2\xc1\x33\xb1\x70\x6e\xab\x6d\x0b\xce\x9c\x30\xb1\xbe\xa6\xdf\xb6\x60\xec\x48\xf8\x8c\x0c\xf7\xf7\xfa\xfe\x1d\x18\xdf\xc3\x56\x3f\xbe\x03\x09\x71\xbd\x01\x4c\x29\x24\x08\x1e\x3e\xe6\x74\x3b\x94\xcd\xef\x5a\x25\x1c\x30\xa1\xb7\xc8\xb9\xee\xd7\x53\x29\xb9\x89\xb9\x03\x1a\x78\xc1\x3d\x93\x60\x7e\x44\xb1\x5a\x43\x95\x60\x4f\xfe\xf0\x43\xb7\xae\x61\x14\x89\xdc\x35\x8d\x49\x47\x7a\xd6\x21\x1d\x9a\xd8\x0f\xcd\xe6\x71\xb3\xd1\xed\xf6\xe1\xfd\x46\xc7\x7e\x50\x2b\x70\x64\xd1\x73\x99\x90\xab\xff\x62\xec\xe0\xd3\xc7\x2f\x6a\x05\xe4\xe3\x2c\x85\xc7\x15\x52\x6d\xb9\xb4\x2b\x18\x28\xb1\x54\x14\xc8\x29\xe2\xab\xd9\x59\x17\x73\x57\xd5\x55\xb5\x3f\x6f\x6a\x77\x4e\x7e\x13\xa7\x80\x7e\x28\x6f\x06\xd4\x14\xd7\x28\xd1\xe4\x21\x14\x4c\x45\xb2\x92\xfa\x6a\x5a\xc6\xa1\xa7\x09\x7d\x1e\x2f\xee\xe0\x8f\xcd\x1d\xbc\xbf\x83\xfb\xfb\x87\xf2\xf7\xa7\x0a\xb3\xc4\x59\xea\x5b\xe4\x04\x25\xc4\xc2\xa6\xde\x29\x58\xb8\x0f\x68\x72\x97\x14\xa8\x79\x8b\x7d\xc5\x5f\x09\xa8\x37\x5e\x60\xc1\x38\xb3\x2f\xba\xdc\xf0\x5f\x54\x79\xeb\x1d\x96\xcc\xfc\x34\x27\xd7\x95\xba\x76\x4d\xd3\x1b\x31\xba\x9f\x9c\xd5\x93\x6b\xca\x64\x34\x45\x6d\x6e\x8a\x3c\xf9\x9c\x90\x3d\x1e\xa5\xe1\x93\x67\x14\x2d\x47\x51\x05\x92\xb5\x3a\xef\x00\x5e\xb6\xc8\x21\x99\x38\x96\x36\x7d\x41\x3a\x8c\xc2\x90\x90\xc3\x9c\x2c\x66\x0e\x7b\xc3\xf8\x7f\xb3\x6f\xdb\x75\x1d\x90\x46\x41\x4d\xf3\x14\x8d\x8c\x1d\x2c\x80\xf5\xb6\x5d\xf3\x69\xda\x07\xa7\xbf\x71\x59\x62\x0b\x83\xd7\xb0\xb6\x6d\x5b\x5d\xc4\xc9\xa4\x88\x9f\xca\xf8\x3e\xe7\xe2\x18\xc7\x08\x2b\xa0\x01\x18\xe5\x2e\x6b\xed\x8b\xe0\x67\xe6\x75\x23\xe4\x07\x09\x60\x3c\x2c\x9e\xb7\x2b\xf3\x66\x77\x66\xcf\x2b\xd5\x5b\x59\xaa\xa1\x84\xef\xd1\x07\xc1\xfc\xfc\x2f\x51\x06\x72\x58\x3e\x2f\x7c\x6e\x91\xd7\x2a\xbf\x90\x8c\x54\xa9\x9e\x29\x19\x91\x44\xfb\x59\xea\x1e\xc0\xa3\x24\x73\xdd\x57\x97\x3b\x05\xf0\x9d\x7c\xdf\xc1\x87\xdd\x6e\x61\x9c\xcf\x39\x93\xc7\x39\x19\x77\xf1\xf9\xe5\xc3\x6e\x77\x07\x9f\xf3\x9f\xd6\xfa\xd7\xdc\xd0\xf9\x2b\x45\xfe\xf0\x94\xcb\xc8\x28\xdd\x65\x0f\xe5\xb9\xac\xb6\xcb\xd7\xa6\xcc\xf2\xe2\xa0\x00\x26\xe3\x69\x40\x96\x27\x33\xcb\x18\x52\x07\x66\xdf\xcf\xae\x57\xff\x04\x00\x00\xff\xff\x1a\x37\xf6\xea\x79\x07\x00\x00"

func resnext50YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnext50Yml,
		"ResNeXt50.yml",
	)
}

func resnext50Yml() (*asset, error) {
	bytes, err := resnext50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResNeXt50.yml", size: 1913, mode: os.FileMode(420), modTime: time.Unix(1497484484, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet101Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x6b\x24\x37\x10\xbe\xf7\xaf\x28\x18\x02\x09\x78\xd4\xd3\xf6\x7a\x13\xfa\x10\x08\x3e\x19\xb2\x73\x70\x96\x10\x08\xc1\xd4\xa8\xab\xa7\xb5\xab\x96\x84\xaa\xda\xf6\x5c\xf2\xdb\x83\x1e\xf3\x30\x76\x76\xe7\xd0\xa3\xc7\x57\x55\x9f\xbe\xaa\x92\x1c\xce\xd4\xc3\x03\xb1\x19\x16\xb4\x5b\x92\x6e\xd3\xc1\x0a\xd2\x32\xf8\x11\x0e\x7e\x89\x30\xfb\x81\x6c\x33\x46\x9c\xe9\xd9\xc7\xaf\x7d\x03\x50\xcc\x3e\xfd\xb5\x25\x81\x15\x9c\xb6\x60\xf4\x11\x64\xa2\x6a\x02\xf0\x44\x91\x8d\x77\x3d\xfc\xbb\x51\xdd\x2b\x64\xdd\x01\xed\x9d\x44\x34\x4e\x9a\x13\xb6\x53\x1b\x58\x9d\x00\xc6\x8d\x3e\xce\x28\x65\x0c\x4c\x33\x3a\x31\xfa\xb4\x5f\x76\x9b\xe4\x07\x8d\xa3\xd8\xc3\x0a\x4e\x13\x86\x85\x69\x00\xf1\x10\x28\x26\x64\x61\x06\x21\xd2\x60\x74\xf2\xd9\xc0\xf9\xb7\x82\x79\xb1\x62\x82\x25\x08\x16\x25\xe1\x19\x34\x3a\xd8\x11\x70\x20\x6d\x46\x43\x43\x03\x80\xf3\xf0\xf1\x43\x9f\x2d\xf7\x61\xe9\x21\xa2\x09\xd1\x7f\x21\x2d\xad\xc6\x38\xdb\xf5\xfc\xe2\x48\xfa\x0c\x5b\xeb\xb0\x64\xa4\xfe\x2e\x72\x9f\x91\x21\xe8\x8f\x1f\x2c\xf5\xdf\x35\xaa\xc0\x6a\xf6\x6d\x2a\x97\xd8\x81\x58\x47\x13\x24\x6b\xfd\x6b\x03\xf0\x9b\x03\x33\xe3\x9e\xd6\xda\x22\xb3\x19\x8d\x2e\x6a\x3b\x92\x9c\xaa\xdd\x62\xac\xa4\x6a\xb0\x78\x48\x92\xca\x84\x02\x96\x30\x3a\x88\xb5\x70\x60\x5c\x5c\x96\x93\xe1\x59\x45\x25\x05\x0a\xc6\x85\x45\x58\x35\x00\x9f\x27\xc3\x27\x87\xda\x3b\x36\x2c\x9c\x7c\xa6\x7a\x2b\x7e\x55\xa1\x42\x8e\x69\xde\xd9\x5c\x7e\x32\x11\xd3\xd1\x8c\x01\xf5\x64\xe8\x89\x18\x6e\xd4\xed\xcf\x3f\x00\xc5\xe8\x23\x44\x14\x02\xef\xe0\xfe\xf7\x3f\xfe\x7c\xb8\x5b\x5f\x6f\xba\x5b\xd5\x44\x1a\x29\x92\xd3\xc4\xa9\x1c\xce\xb3\x5c\x09\x18\xd2\x29\x5a\x78\xa6\x1d\x1b\xa1\x34\x24\xd1\x4a\x41\x51\x66\x67\xdc\xfe\x55\x11\xaf\x61\x12\x09\xdc\xb7\x2d\xc6\x17\xf3\xa4\x7c\xdc\xb7\x61\x18\xdb\xee\xb6\xbb\x56\x9b\x9b\x9b\x5f\x6e\x9f\x3a\x15\x86\xb1\x59\x81\x35\x3a\xf1\xaf\xdc\xab\x87\xba\xd8\xc3\xa7\xfb\xcf\xcd\xaa\x8a\x92\x98\x9c\x21\x65\x2d\xe5\x7c\x05\xa3\x89\x2c\x05\x05\x72\x08\xf4\xa6\xa9\xd6\x79\xb9\x2f\x49\x6b\x4a\xe1\x5e\x24\xf5\x18\xfc\xc2\x4f\x06\xbd\xca\x7b\x02\x94\x10\x67\x2f\x01\x53\x77\x0a\xc5\x2c\x5a\x0e\x7d\x5e\xaa\x7d\x32\x98\x99\x5c\xea\x3b\xee\xe1\xef\xee\x0a\x6e\xae\xe0\xfa\xfa\x43\xfe\xfc\xd3\xf8\x45\xc2\x22\xe5\x14\x29\x40\x76\x51\xd9\x94\xbd\x06\x2a\xf7\x91\x50\x96\x48\x19\x8a\xef\xb1\x2f\xf8\x33\x81\xe6\x9d\x03\x54\x8c\xc5\x5d\xd6\xe5\x82\x7f\x55\xe5\xbd\x33\xd4\xc8\xfc\xb8\x44\xdb\xe7\xcc\xf6\x6d\x3b\xa0\xa0\x1a\x66\xab\xd5\x6c\xdb\xdc\x32\x6d\x56\x9b\xdb\x2c\x4f\x9a\x47\xe2\xf4\xc7\x07\xc7\x24\x4a\x5e\xa4\xc9\x88\x24\xd5\xf1\x6e\xe0\x7a\xbb\xec\x23\x86\x09\xd0\x0d\xf0\x4c\x66\x3f\x09\xa7\x3e\xf1\x4b\xd4\x94\x28\xec\x90\xe9\x1b\xc1\xdf\x0f\xdb\x6d\xba\x75\x69\x93\xb6\x81\x12\xe0\x31\xa0\x4c\x3d\x14\xc0\x3a\x01\xf8\x30\xef\xbc\x55\x5f\x38\x5f\x6b\x35\xf6\x5b\xd8\x66\xb3\xd9\xa8\xac\x4a\xa2\x63\xf8\x11\xa3\x9e\xcc\x53\xca\x0a\x5a\x26\x58\x81\x19\x81\x49\xae\x92\xc8\x2e\x2b\x7d\xe4\x0c\x86\x01\x21\x0d\xc4\x03\x3a\xa8\x96\x97\x97\xe8\xc5\x6d\x9a\x2c\xcf\x54\x2f\x05\x29\x0b\xd9\xfd\x40\xce\x0b\xa5\xf1\xff\x78\x19\x8d\xa5\xfc\xe0\xf0\xb1\x36\xde\xea\xfb\x6c\x64\x32\x85\xea\x91\x12\x8a\x44\xb3\x5b\xa4\x5c\x01\xf4\x22\x11\x4f\x17\xd0\x79\xaf\x01\xf8\x6a\xdc\xd0\xc3\xdd\x76\x5b\x19\xa7\x79\x8a\xe4\x68\x89\x68\x4f\x36\x3f\xde\x6d\xb7\x57\xf0\x90\x3e\x4a\xa9\x9f\x52\x25\xa7\x77\xcb\xb8\xfd\x63\x4a\x20\x93\xf4\x70\x9f\xb2\x56\xde\xc4\xba\x76\x7a\x7f\x72\x13\x57\x83\x06\x60\x46\x67\x46\x62\x79\xc4\x45\x26\x1f\x7b\xc0\xdd\xb0\xd8\xa1\xf9\x2f\x00\x00\xff\xff\xef\x9e\xdf\xde\x90\x07\x00\x00"

func residualnet101YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet101Yml,
		"ResidualNet101.yml",
	)
}

func residualnet101Yml() (*asset, error) {
	bytes, err := residualnet101YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet101.yml", size: 1936, mode: os.FileMode(420), modTime: time.Unix(1497484465, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet18Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x5b\x6b\x24\x37\x13\x7d\xef\x5f\x51\x30\x7c\xf0\x05\x3c\xea\x69\x5f\x36\xa6\x1f\x02\xc1\x4f\x86\xec\x3c\x38\x4b\x08\x84\x60\x6a\xd4\xd5\xd3\xda\x55\x4b\x42\x55\xed\xcb\x4b\x7e\x7b\xd0\x65\x2e\xc6\xce\xee\x3c\xf4\xe8\x72\xaa\xea\xe8\x54\x95\xe4\x70\xa6\x1e\x1e\x88\xcd\xb0\xa0\xdd\x92\x74\xb7\xb0\x82\xb4\x0a\x7e\x84\x57\xbf\x44\x98\xfd\x40\xb6\x19\x23\xce\xf4\xec\xe3\xb7\xbe\x01\x28\x56\x9f\xff\xdc\x92\xc0\x0a\x8e\x5b\x30\xfa\x08\x32\x51\x35\x01\x78\xa2\xc8\xc6\xbb\x1e\xfe\xd9\xa8\xee\x0d\xb2\xee\x80\xf6\x4e\x22\x1a\x27\xcd\x11\xdb\xa9\x0d\xac\x8e\x00\xe3\x46\x1f\x67\x94\x32\x06\xa6\x19\x9d\x18\x7d\xdc\x2f\xbb\x4d\xf2\x83\xc6\x51\xec\x61\x05\xc7\x09\xc3\xc2\x34\x80\x78\x08\x14\x13\xb2\x30\x83\x10\x69\x30\x3a\xf9\x6c\xe0\xf4\x5b\xc1\xbc\x58\x31\xc1\x12\x04\x8b\x92\xf0\x0c\x1a\x1d\xec\x08\x38\x90\x36\xa3\xa1\xa1\x01\xc0\x79\xf8\x74\xdd\x67\xcb\x7d\x58\x7a\x88\x68\x42\xf4\x5f\x49\x4b\xab\x31\xce\x76\x3d\xbf\x38\x92\x3e\xc3\xd6\x3a\x2c\x19\xa9\x7f\x88\xdc\x67\x64\x08\xfa\xd3\xb5\xa5\xfe\x87\x46\x15\x58\xcd\xbe\x4f\xe5\x1c\x3b\x10\xeb\x68\x82\x64\xad\x7f\x69\x00\x7e\x75\x60\x66\xdc\xd3\x5a\x5b\x64\x36\xa3\xd1\x45\x6d\x47\x92\x53\xb5\x5b\x8c\x95\x54\x0d\x16\x5f\x93\xa4\x32\xa1\x80\x25\x8c\x0e\x62\xad\x1b\x18\x17\x97\xe5\x64\x78\x56\x51\x49\x81\x82\x71\x61\x11\x56\x0d\xc0\x97\xc9\xf0\xd1\xa1\xf6\x8e\x0d\x0b\x27\x9f\xdd\x6d\x75\xab\x0a\x13\x72\x4c\xf3\xce\xe6\xea\x93\x89\x98\x0e\x56\x0c\xa8\x27\x43\x4f\xc4\x70\xa5\x6e\x7e\xfe\x1f\x50\x8c\x3e\x42\x44\x21\xf0\x0e\xee\x7f\xfb\xfd\x8f\x87\xbb\xf5\xe5\xa6\xbb\x51\x4d\xa4\x91\x22\x39\x4d\x9c\xaa\xe1\x34\xcb\x85\x80\x21\x1d\xa2\x85\x67\xda\xb1\x11\x4a\x43\x12\xad\x14\x14\x61\x76\xc6\xed\xdf\xd4\xf0\x1a\x26\x91\xc0\x7d\xdb\x62\x7c\x31\x4f\xca\xc7\x7d\x1b\x86\xb1\xed\x6e\xba\x4b\xb5\xb9\xba\xba\xbd\x79\xea\x54\x18\xc6\x66\x05\xd6\xe8\xc4\xbf\x72\xaf\x1e\xea\x62\x0f\x9f\xef\xbf\x34\xab\xaa\x49\x62\x72\x82\x94\xb5\x94\xf2\x15\x8c\x26\xb2\x14\x14\xc8\x6b\xa0\x77\x3d\xb5\xce\xcb\x7d\xc9\x59\x53\xea\xf6\x2c\xa7\x87\xe0\x67\x7e\x32\xe8\x4d\xda\x13\xa0\x84\x38\x79\x09\x98\x9a\x53\x28\x66\xd1\x72\xe8\xd3\x52\x6d\x93\xc1\xcc\xe4\x52\xdb\x71\x0f\x7f\x75\x17\x70\x75\x01\x97\x97\xd7\xf9\xf3\x77\xe3\x17\x09\x8b\x94\x53\xa4\x00\xd9\x45\x65\x53\xf6\x1a\xa8\xdc\x47\x42\x59\x22\x65\x28\x7e\xc4\xbe\xe0\x4f\x04\x9a\x0f\x0e\x50\x31\x16\x77\x59\x97\x33\xfe\x55\x95\x8f\xce\x50\x23\xf3\xe3\x12\x6d\x9f\x33\xdb\xb7\xed\x80\x82\x6a\x98\xad\x56\xb3\x6d\x73\xc7\xb4\x59\x6d\x6e\xb3\x3c\x69\x1e\x89\xd3\x1f\xbf\x3a\x26\x51\xf2\x22\x4d\x46\x24\xa9\x0e\x57\x03\xd7\xcb\x65\x1f\x31\x4c\x80\x6e\x80\x67\x32\xfb\x49\x38\xb5\x89\x5f\xa2\xa6\x44\x61\x87\x4c\xdf\x09\xfe\x71\xd8\xee\x76\x5d\xba\xa4\x6d\xa0\xf8\x7f\x0c\x28\x53\x0f\x65\x7f\xdd\xdd\xae\xf9\x75\xde\x79\xab\xbe\x72\xbe\xd3\x6a\xe4\x77\xa8\xcd\x66\xb3\x51\x59\x92\xc4\xc5\xf0\x23\x46\x3d\x99\xa7\x94\x12\xb4\x4c\xb0\x02\x33\x02\x93\x5c\x24\x85\x5d\x96\xf9\x40\x18\x0c\x03\x42\x1a\x88\x07\x74\x50\x2d\xcf\x2f\xd0\xb3\x9b\x34\x59\x9e\x88\x9e\xab\x51\x16\xb2\xfb\x81\x9c\x17\x4a\xe3\xff\xf0\x32\x1a\x4b\xf9\xb1\xe1\x43\x61\xbc\x17\xf7\xd9\xc8\x64\x0a\xd5\x03\x25\x14\x89\x66\xb7\x48\xe9\x7f\x7a\x91\x88\xc7\xcb\xe7\xb4\xd7\x00\x7c\x33\x6e\xe8\xe1\x6e\xbb\xad\x8c\xd3\x3c\x45\x72\xb4\x44\xb4\x47\x9b\xff\xdf\x6d\xb7\x17\xf0\x90\x3e\x4a\xa9\x9f\x52\x19\xa7\x37\xcb\xb8\xfd\x63\xca\x1e\x93\xf4\x70\x9f\x52\x56\xde\xc3\xba\x76\x7c\x7b\x72\x07\x57\x83\x06\x60\x46\x67\x46\x62\x79\xc4\x45\x26\x1f\x7b\xc0\xdd\xb0\xd8\xa1\xf9\x37\x00\x00\xff\xff\x64\xbb\xf1\x9a\x8b\x07\x00\x00"

func residualnet18YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet18Yml,
		"ResidualNet18.yml",
	)
}

func residualnet18Yml() (*asset, error) {
	bytes, err := residualnet18YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet18.yml", size: 1931, mode: os.FileMode(420), modTime: time.Unix(1497484448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet200Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x6b\x24\x37\x10\xbe\xf7\xaf\x28\x18\x02\x09\x78\xd4\x3d\xe3\xf5\x26\xf4\x21\x10\x7c\x32\x64\xe7\xe0\x2c\x21\x10\x82\xa9\x51\x57\x4f\x6b\x57\x2d\x09\x55\xb5\x1f\x97\xfc\xf6\xa0\xc7\x3c\x8c\x9d\xdd\x39\xf4\xe8\xf1\x55\xd5\xa7\xaf\xaa\x24\x87\x33\xf5\x70\x4f\x6c\x86\x05\xed\x8e\x64\xdb\x75\xb0\x82\xb4\x0c\x7e\x84\x17\xbf\x44\x98\xfd\x40\xb6\x19\x23\xce\xf4\xe4\xe3\xd7\xbe\x01\x28\x66\x9f\xfe\xda\x91\xc0\x0a\x4e\x5b\x30\xfa\x08\x32\x51\x35\x01\x78\xa4\xc8\xc6\xbb\x1e\xfe\xed\xd4\xe6\x15\xb2\xee\x80\xf6\x4e\x22\x1a\x27\xcd\x09\xbb\x51\x89\xc2\x11\x60\xdc\xe8\xe3\x8c\x52\xc6\xc0\x34\xa3\x13\xa3\x4f\xfb\x65\xb7\x49\x7e\xd0\x38\x8a\x3d\xac\xe0\x34\x61\x58\x98\x06\x10\x0f\x81\x62\x42\x16\x66\x10\x22\x0d\x46\x27\x9f\x0d\x9c\x7f\x2b\x98\x17\x2b\x26\x58\x82\x60\x51\x12\x9e\x41\xa3\x83\x3d\x01\x07\xd2\x66\x34\x34\x34\x00\x38\x0f\x1f\x3f\xf4\xd9\xf2\x10\x96\x1e\x22\x9a\x10\xfd\x17\xd2\xd2\x6a\x8c\xb3\x5d\xcf\xcf\x8e\xa4\xcf\xb0\xb5\x0e\x4b\x46\xea\xef\x22\x0f\x19\x19\x82\xfe\xf8\xc1\x52\xff\x5d\xa3\x0a\xac\x66\xdf\xa6\x72\x89\x1d\x88\x75\x34\x41\xb2\xd6\xbf\x36\x00\xbf\x39\x30\x33\x1e\x68\xad\x2d\x32\x9b\xd1\xe8\xa2\xb6\x23\xc9\xa9\xda\x2f\xc6\x4a\xaa\x06\x8b\x2f\x49\x52\x99\x50\xc0\x12\x46\x07\xb1\x16\x0e\x8c\x8b\xcb\x72\x32\x3c\xa9\xa8\xa4\x40\xc1\xb8\xb0\x08\xab\x06\xe0\xf3\x64\xf8\xe4\x50\x7b\xc7\x86\x85\x93\xcf\x54\x6f\xc5\xaf\x2a\x54\xc8\x31\xcd\x7b\x9b\xcb\x4f\x26\x62\x3a\x9a\x31\xa0\x9e\x0c\x3d\x12\xc3\xb5\xba\xf9\xf9\x07\xa0\x18\x7d\x84\x88\x42\xe0\x1d\xdc\xfd\xfe\xc7\x9f\xf7\xb7\xeb\x6d\xb7\xb9\x51\x4d\xa4\x91\x22\x39\x4d\x9c\xca\xe1\x3c\xcb\x95\x80\x21\x9d\xa2\x85\x27\xda\xb3\x11\x4a\x43\x12\xad\x14\x14\x65\xf6\xc6\x1d\x5e\x15\xf1\x1a\x26\x91\xc0\x7d\xdb\x62\x7c\x36\x8f\xca\xc7\x43\x1b\x86\xb1\xdd\xdc\x6c\xb6\xaa\xbb\xbe\xfe\xe5\xe6\x71\xa3\xc2\x30\x36\x2b\xb0\x46\x27\xfe\x95\x7b\xf5\x50\x17\x7b\xf8\x74\xf7\xb9\x59\x55\x51\x12\x93\x33\xa4\xac\xa5\x9c\xaf\x60\x34\x91\xa5\xa0\x40\x5e\x02\xbd\x69\xaa\x75\x5e\xee\x4b\xd2\x9a\x52\xb8\x17\x49\x3d\x06\xbf\xf0\x93\x41\xaf\xf2\x9e\x00\x25\xc4\xd9\x4b\xc0\xd4\x9d\x42\x31\x8b\x96\x43\x9f\x97\x6a\x9f\x0c\x66\x26\x97\xfa\x8e\x7b\xf8\x7b\x73\x05\xd7\x57\xb0\xdd\x7e\xc8\x9f\x7f\x1a\xbf\x48\x58\xa4\x9c\x22\x05\xc8\x2e\x2a\x9b\xb2\xd7\x40\xe5\x3e\x12\xca\x12\x29\x43\xf1\x3d\xf6\x05\x7f\x26\xd0\xbc\x73\x80\x8a\xb1\xb8\xcf\xba\x5c\xf0\xaf\xaa\xbc\x77\x86\x1a\x99\x1f\x96\x68\xfb\x9c\xd9\xbe\x6d\x07\x14\x54\xc3\x6c\xb5\x9a\x6d\x9b\x5b\xa6\xcd\x6a\x73\x9b\xe5\x49\xf3\x48\x9c\xfe\xf8\xc5\x31\x89\x92\x67\x69\x32\x22\x49\x75\xbc\x1b\xb8\xde\x2e\x87\x88\x61\x02\x74\x03\x3c\x91\x39\x4c\xc2\xa9\x4f\xfc\x12\x35\x25\x0a\x7b\x64\xfa\x46\xf0\xf7\xc3\x6e\xbb\x6e\x5d\xda\xa4\x6d\xa0\x04\x78\x08\x28\x53\x0f\x05\xb0\x4e\x00\x7e\x99\xf7\xde\xaa\x2f\x9c\xaf\xb5\x1a\xfb\x2d\xac\xeb\xba\x4e\x65\x55\x12\x1d\xc3\x0f\x18\xf5\x64\x1e\x53\x56\xd0\x32\xc1\x0a\xcc\x08\x4c\x72\x95\x44\x76\x59\xe9\x23\x67\x30\x0c\x08\x69\x20\x1e\xd0\x41\xb5\xbc\xbc\x44\x2f\x6e\xd3\x64\x79\xa6\x7a\x29\x48\x59\xc8\xee\x07\x72\x5e\x28\x8d\xff\xc7\xcb\x68\x2c\xe5\x07\x87\x8f\xb5\xf1\x56\xdf\x27\x23\x93\x29\x54\x8f\x94\x50\x24\x9a\xfd\x22\xe5\x0a\xa0\x67\x89\x78\xba\x80\xce\x7b\x0d\xc0\x57\xe3\x86\x1e\x6e\x77\xbb\xca\x38\xcd\x53\x24\x47\x4b\x44\x7b\xb2\xf9\xf1\x76\xb7\xbb\x82\xfb\xf4\x51\x4a\xfd\x94\x2a\x39\xbd\x5b\xc6\x1d\x1e\x52\x02\x99\xa4\x87\xbb\x94\xb5\xf2\x26\xd6\xb5\xd3\xfb\x93\x9b\xb8\x1a\x34\x00\x33\x3a\x33\x12\xcb\x03\x2e\x32\xf9\xd8\x03\xee\x87\xc5\x0e\xcd\x7f\x01\x00\x00\xff\xff\x2c\x3a\xd9\x11\x90\x07\x00\x00"

func residualnet200YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet200Yml,
		"ResidualNet200.yml",
	)
}

func residualnet200Yml() (*asset, error) {
	bytes, err := residualnet200YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet200.yml", size: 1936, mode: os.FileMode(420), modTime: time.Unix(1497484474, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet34Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8b\x23\x37\x10\xbe\xf7\xaf\x28\x30\x81\x04\xc6\x6a\x7b\xec\xd9\x84\x3e\x04\xc2\x9e\x06\xb2\x3e\x4c\x96\x10\x08\x61\x28\xab\xab\xdd\xda\x55\x4b\x42\x55\x3d\x33\xbe\xe4\xb7\x07\x3d\xfc\x18\x66\xb2\xeb\x43\x5b\x8f\xaf\xaa\x3e\x7d\x55\x25\x39\x9c\xa8\x83\x07\x62\xd3\xcf\x68\x77\x24\x9b\x2d\x2c\x20\xad\x82\x1f\xe0\xe8\xe7\x08\x93\xef\xc9\x36\x43\xc4\x89\x9e\x7d\xfc\xda\x35\x00\xc5\xea\xd3\x5f\x3b\x12\x58\xc0\x79\x0b\x06\x1f\x41\x46\xaa\x26\x00\x4f\x14\xd9\x78\xd7\xc1\xbf\x2b\xb5\x7e\x85\xac\x3b\xa0\xbd\x93\x88\xc6\x49\x73\xc6\xae\xd5\x0a\x16\x67\x80\x71\x83\x8f\x13\x4a\x19\x03\xd3\x84\x4e\x8c\x3e\xef\x97\xdd\x26\xf9\x41\xe3\x28\x76\xb0\x80\xf3\x84\x61\x66\xea\x41\x3c\x04\x8a\x09\x59\x98\x41\x88\xd4\x1b\x9d\x7c\x36\x70\xf9\x2d\x60\x9a\xad\x98\x60\x09\x82\x45\x49\x78\x06\x8d\x0e\xf6\x04\x1c\x48\x9b\xc1\x50\xdf\x00\xe0\xd4\x7f\xd8\x76\xd9\xf2\x10\xe6\x0e\x22\x9a\x10\xfd\x17\xd2\xd2\x6a\x8c\x93\x5d\x4e\x2f\x8e\xa4\xcb\xb0\xa5\x0e\x73\x46\xea\xef\x22\x0f\x19\x19\x82\xfe\xb0\xb5\xd4\x7d\xd7\xa8\x02\xab\xd9\xb7\xa9\x5c\x63\x7b\x62\x1d\x4d\x90\xac\xf5\xaf\x0d\xc0\x6f\x0e\xcc\x84\x07\x5a\x6a\x8b\xcc\x66\x30\xba\xa8\xed\x48\x72\xaa\xf6\xb3\xb1\x92\xaa\xc1\xe2\x31\x49\x2a\x23\x0a\x58\xc2\xe8\x20\xd6\xba\x81\x61\x76\x59\x4e\x86\x67\x15\x95\x14\x28\x18\x17\x66\x61\xd5\x00\x7c\x1e\x0d\x9f\x1d\x6a\xef\xd8\xb0\x70\xf2\xb9\xd9\x56\xb7\xaa\x30\x21\xc7\x34\xed\x6d\xae\x3e\x19\x89\xe9\x64\xc5\x80\x7a\x34\xf4\x44\x0c\x1b\x75\xf7\xf3\x0f\x40\x31\xfa\x08\x11\x85\xc0\x3b\xb8\xff\xfd\x8f\x3f\x1f\x3e\x2e\x6f\x57\xeb\x3b\xd5\x44\x1a\x28\x92\xd3\xc4\xa9\x1a\x2e\xb3\x5c\x08\x18\xd2\x21\x5a\x78\xa6\x3d\x1b\xa1\x34\x24\xd1\x4a\x41\x11\x66\x6f\xdc\xe1\x55\x0d\x2f\x61\x14\x09\xdc\xb5\x2d\xc6\x17\xf3\xa4\x7c\x3c\xb4\xa1\x1f\xda\xf5\xdd\xfa\x56\xad\x36\x9b\x5f\xee\x9e\xd6\x2a\xf4\x43\xb3\x00\x6b\x74\xe2\x5f\xb9\x57\x0f\x75\xb1\x83\x4f\xf7\x9f\x9b\x45\xd5\x24\x31\xb9\x40\xca\x5a\x4a\xf9\x02\x06\x13\x59\x0a\x0a\xe4\x18\xe8\x4d\x4f\x2d\xf3\x72\x57\x72\xd6\x94\xba\xbd\xca\xe9\x29\xf8\x95\x9f\x0c\x7a\x95\xf6\x04\x28\x21\x2e\x5e\x02\xa6\xe6\x14\x8a\x59\xb4\x1c\xfa\xb2\x54\xdb\xa4\x37\x13\xb9\xd4\x76\xdc\xc1\xdf\xeb\x1b\xd8\xdc\xc0\xed\xed\x36\x7f\xfe\x69\xfc\x2c\x61\x96\x72\x8a\x14\x20\xbb\xa8\x6c\xca\x5e\x03\x95\xfb\x40\x28\x73\xa4\x0c\xc5\xf7\xd8\x17\xfc\x85\x40\xf3\xce\x01\x2a\xc6\xe2\x3e\xeb\x72\xc5\xbf\xaa\xf2\xde\x19\x6a\x64\x7e\x9c\xa3\xed\x72\x66\xbb\xb6\xed\x51\x50\xf5\x93\xd5\x6a\xb2\x6d\xee\x98\x36\xab\xcd\x6d\x96\x27\xcd\x23\x71\xfa\xe3\xa3\x63\x12\x25\x2f\xd2\x64\x44\x92\xea\x74\x35\x70\xbd\x5c\x0e\x11\xc3\x08\xe8\x7a\x78\x26\x73\x18\x85\x53\x9b\xf8\x39\x6a\x4a\x14\xf6\xc8\xf4\x8d\xe0\xef\x87\xdd\x6c\x97\xa5\x4b\xda\x06\x8a\xff\xc7\x80\x32\x76\x50\xf6\x97\x9b\xed\x92\x8f\xd3\xde\x5b\xf5\x85\xf3\x9d\x56\x23\xbf\x41\xad\x56\xab\x95\xca\x92\x24\x2e\x86\x1f\x31\xea\xd1\x3c\xa5\x94\xa0\x65\x82\x05\x98\x01\x98\xe4\x26\x29\xec\xb2\xcc\x27\xc2\x60\x18\x10\xd2\x40\x3c\xa0\x83\x6a\x79\x7d\x81\x5e\xdd\xa4\xc9\xf2\x42\xf4\x5a\x8d\xb2\x90\xdd\xf7\xe4\xbc\x50\x1a\xff\x8f\x97\xc1\x58\xca\x8f\x0d\x9f\x0a\xe3\xad\xb8\xcf\x46\x46\x53\xa8\x9e\x28\xa1\x48\x34\xfb\x59\x4a\xff\xd3\x8b\x44\x3c\x5f\x3e\x97\xbd\x06\xe0\xab\x71\x7d\x07\x1f\x77\xbb\xca\x38\xcd\x53\x24\x47\x73\x44\x7b\xb6\xf9\xf1\xe3\x6e\x77\x03\x0f\xe9\xa3\x94\xfa\x29\x95\x71\x7a\xb3\x8c\x3b\x3c\xa6\xec\x31\x49\x07\xf7\x29\x65\xe5\x3d\xac\x6b\xe7\xb7\x27\x77\x70\x35\x68\x00\x26\x74\x66\x20\x96\x47\x9c\x65\xf4\xb1\x03\xdc\xf7\xb3\xed\x9b\xff\x02\x00\x00\xff\xff\x91\x7d\xb9\x3e\x8b\x07\x00\x00"

func residualnet34YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet34Yml,
		"ResidualNet34.yml",
	)
}

func residualnet34Yml() (*asset, error) {
	bytes, err := residualnet34YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet34.yml", size: 1931, mode: os.FileMode(420), modTime: time.Unix(1497484452, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x6b\x24\x37\x10\xbe\xf7\xaf\x28\x18\x02\x09\x78\xd4\x3d\xf6\xce\x26\xf4\x21\x10\x7c\x32\x64\xe7\xe0\x2c\x21\x10\x82\xa9\x51\x57\x4f\x6b\x57\x2d\x09\x55\xb5\x1f\x97\xfc\xf6\xa0\xc7\x3c\x8c\x9d\xdd\x39\xf4\xe8\xf1\x55\xd5\xa7\xaf\xaa\x24\x87\x33\xf5\x70\x4f\x6c\x86\x05\xed\x8e\x64\xdb\xc1\x0a\xd2\x2a\xf8\x11\x5e\xfc\x12\x61\xf6\x03\xd9\x66\x8c\x38\xd3\x93\x8f\x5f\xfb\x06\xa0\x58\x7d\xfa\x6b\x47\x02\x2b\x38\x6d\xc1\xe8\x23\xc8\x44\xd5\x04\xe0\x91\x22\x1b\xef\x7a\xf8\xb7\x53\x9b\x57\xc8\xba\x03\xda\x3b\x89\x68\x9c\x34\x27\xec\x46\x25\x0a\x47\x80\x71\xa3\x8f\x33\x4a\x19\x03\xd3\x8c\x4e\x8c\x3e\xed\x97\xdd\x26\xf9\x41\xe3\x28\xf6\xb0\x82\xd3\x84\x61\x61\x1a\x40\x3c\x04\x8a\x09\x59\x98\x41\x88\x34\x18\x9d\x7c\x36\x70\xfe\xad\x60\x5e\xac\x98\x60\x09\x82\x45\x49\x78\x06\x8d\x0e\xf6\x04\x1c\x48\x9b\xd1\xd0\xd0\x00\xe0\x3c\x7c\xfc\xd0\x67\xcb\x43\x58\x7a\x88\x68\x42\xf4\x5f\x48\x4b\xab\x31\xce\x76\x3d\x3f\x3b\x92\x3e\xc3\xd6\x3a\x2c\x19\xa9\xbf\x8b\x3c\x64\x64\x08\xfa\xe3\x07\x4b\xfd\x77\x8d\x2a\xb0\x9a\x7d\x9b\xca\x25\x76\x20\xd6\xd1\x04\xc9\x5a\xff\xda\x00\xfc\xe6\xc0\xcc\x78\xa0\xb5\xb6\xc8\x6c\x46\xa3\x8b\xda\x8e\x24\xa7\x6a\xbf\x18\x2b\xa9\x1a\x2c\xbe\x24\x49\x65\x42\x01\x4b\x18\x1d\xc4\x5a\x37\x30\x2e\x2e\xcb\xc9\xf0\xa4\xa2\x92\x02\x05\xe3\xc2\x22\xac\x1a\x80\xcf\x93\xe1\x93\x43\xed\x1d\x1b\x16\x4e\x3e\xb7\x5d\x75\xab\x0a\x13\x72\x4c\xf3\xde\xe6\xea\x93\x89\x98\x8e\x56\x0c\xa8\x27\x43\x8f\xc4\x70\xa3\xb6\x3f\xff\x00\x14\xa3\x8f\x10\x51\x08\xbc\x83\xbb\xdf\xff\xf8\xf3\xfe\x76\x7d\xdd\x6d\xb6\xaa\x89\x34\x52\x24\xa7\x89\x53\x35\x9c\x67\xb9\x10\x30\xa4\x43\xb4\xf0\x44\x7b\x36\x42\x69\x48\xa2\x95\x82\x22\xcc\xde\xb8\xc3\xab\x1a\x5e\xc3\x24\x12\xb8\x6f\x5b\x8c\xcf\xe6\x51\xf9\x78\x68\xc3\x30\xb6\x9b\xed\xe6\x5a\x75\x37\x37\xbf\x6c\x1f\x37\x2a\x0c\x63\xb3\x02\x6b\x74\xe2\x5f\xb9\x57\x0f\x75\xb1\x87\x4f\x77\x9f\x9b\x55\xd5\x24\x31\x39\x43\xca\x5a\x4a\xf9\x0a\x46\x13\x59\x0a\x0a\xe4\x25\xd0\x9b\x9e\x5a\xe7\xe5\xbe\xe4\xac\x29\x75\x7b\x91\xd3\x63\xf0\x0b\x3f\x19\xf4\x2a\xed\x09\x50\x42\x9c\xbd\x04\x4c\xcd\x29\x14\xb3\x68\x39\xf4\x79\xa9\xb6\xc9\x60\x66\x72\xa9\xed\xb8\x87\xbf\x37\x57\x70\x73\x05\xd7\xd7\x1f\xf2\xe7\x9f\xc6\x2f\x12\x16\x29\xa7\x48\x01\xb2\x8b\xca\xa6\xec\x35\x50\xb9\x8f\x84\xb2\x44\xca\x50\x7c\x8f\x7d\xc1\x9f\x09\x34\xef\x1c\xa0\x62\x2c\xee\xb3\x2e\x17\xfc\xab\x2a\xef\x9d\xa1\x46\xe6\x87\x25\xda\x3e\x67\xb6\x6f\xdb\x01\x05\xd5\x30\x5b\xad\x66\xdb\xe6\x8e\x69\xb3\xda\xdc\x66\x79\xd2\x3c\x12\xa7\x3f\x7e\x71\x4c\xa2\xe4\x59\x9a\x8c\x48\x52\x1d\xaf\x06\xae\x97\xcb\x21\x62\x98\x00\xdd\x00\x4f\x64\x0e\x93\x70\x6a\x13\xbf\x44\x4d\x89\xc2\x1e\x99\xbe\x11\xfc\xfd\xb0\xdb\x6e\x5d\xba\xa4\x6d\xa0\xf8\x7f\x08\x28\x53\x0f\x65\x7f\xbd\xed\xd6\xfc\x32\xef\xbd\x55\x5f\x38\xdf\x69\x35\xf2\x1b\x54\xd7\x75\x9d\xca\x92\x24\x2e\x86\x1f\x30\xea\xc9\x3c\xa6\x94\xa0\x65\x82\x15\x98\x11\x98\xe4\x2a\x29\xec\xb2\xcc\x47\xc2\x60\x18\x10\xd2\x40\x3c\xa0\x83\x6a\x79\x79\x81\x5e\xdc\xa4\xc9\xf2\x4c\xf4\x52\x8d\xb2\x90\xdd\x0f\xe4\xbc\x50\x1a\xff\x8f\x97\xd1\x58\xca\x8f\x0d\x1f\x0b\xe3\xad\xb8\x4f\x46\x26\x53\xa8\x1e\x29\xa1\x48\x34\xfb\x45\x4a\xff\xd3\xb3\x44\x3c\x5d\x3e\xe7\xbd\x06\xe0\xab\x71\x43\x0f\xb7\xbb\x5d\x65\x9c\xe6\x29\x92\xa3\x25\xa2\x3d\xd9\xfc\x78\xbb\xdb\x5d\xc1\x7d\xfa\x28\xa5\x7e\x4a\x65\x9c\xde\x2c\xe3\x0e\x0f\x29\x7b\x4c\xd2\xc3\x5d\x4a\x59\x79\x0f\xeb\xda\xe9\xed\xc9\x1d\x5c\x0d\x1a\x80\x19\x9d\x19\x89\xe5\x01\x17\x99\x7c\xec\x01\xf7\xc3\x62\x87\xe6\xbf\x00\x00\x00\xff\xff\xa2\x56\x71\xb8\x8b\x07\x00\x00"

func residualnet50YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet50Yml,
		"ResidualNet50.yml",
	)
}

func residualnet50Yml() (*asset, error) {
	bytes, err := residualnet50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet50.yml", size: 1931, mode: os.FileMode(420), modTime: time.Unix(1497484460, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnet152_11kYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4b\x6b\x24\x37\x10\xbe\xf7\xaf\x28\x18\x02\x09\x78\xd4\xd3\x63\x8f\x13\xfa\x10\x08\x26\x07\x43\x76\x0e\x5e\xb3\x04\x42\x30\x35\xea\xea\x69\xad\xd5\x92\x50\x55\xfb\x71\xc9\x6f\x0f\x92\x7a\x1e\xc6\x4e\x16\x76\x0e\x83\xba\xea\xab\x87\xbe\x7a\xc8\xe1\x48\x2d\xdc\x11\x9b\x6e\x42\xbb\x25\x69\x36\xeb\x65\xd3\x3c\xc2\x02\x92\x0a\x7c\x0f\xaf\x7e\x8a\x30\xfa\x8e\x6c\xd5\x47\x1c\xe9\xd9\xc7\xc7\xb6\x02\x28\xa6\x9f\xfe\xdc\x92\xc0\x02\x8e\x2a\xe8\x7d\x04\x19\x68\x36\x01\x78\xa2\xc8\xc6\xbb\x16\xfe\x59\xa9\xe6\x0d\x72\xd6\x80\xf6\x4e\x22\x1a\x27\xd5\x11\xdb\xa8\x15\x2c\x8e\x00\xe3\x7a\x1f\x47\x94\x72\x06\xa6\x11\x9d\x18\x7d\xd4\x17\x6d\x95\xfc\xa0\x71\x14\x5b\x58\xc0\xf1\x83\x61\x62\xea\x40\x3c\x04\x8a\x09\x59\x32\x83\x10\xa9\x33\x3a\xf9\xac\xe0\xf4\x5b\xc0\x38\x59\x31\xc1\x12\x04\x8b\x92\xf0\x0c\x1a\x1d\xec\x08\x38\x90\x36\xbd\xa1\xae\x02\xc0\xb1\xbb\xbe\x6a\xb3\xe5\x3e\x4c\x2d\x44\x34\x21\xfa\xaf\xa4\xa5\xd6\x18\x47\xbb\x1c\x5f\x1c\x49\x9b\x61\x4b\x1d\xa6\x8c\xd4\xdf\x44\xee\x33\x32\x04\x7d\x7d\x65\xa9\xfd\xa6\xd1\x0c\x9c\xcd\xfe\x3f\x95\x73\x6c\x47\xac\xa3\x09\x92\xb9\xfe\xb5\x02\xf8\xcd\x81\x19\x71\x4f\x4b\x6d\x91\xd9\xf4\x46\x17\xb6\x1d\x49\x2e\xd5\x6e\x32\x56\x52\x37\x58\x7c\x4d\x94\xca\x80\x02\x96\x30\x3a\x88\x73\xf3\x40\x3f\xb9\x4c\x27\xc3\xb3\x8a\x4a\x0a\x14\x8c\x0b\x93\xb0\xaa\x00\xee\x07\xc3\x47\x87\xda\x3b\x36\x2c\x9c\x7c\x36\x9b\xf5\xec\x37\xc1\xee\x88\x5d\xee\x43\x40\x3d\x18\x7a\x22\x86\xf5\xa5\x5a\xfd\x00\xf7\x3e\x2c\x1b\xf8\x3d\x46\x1f\x01\x5d\x07\xd7\xea\xe7\x22\xdc\x00\x65\xa1\x77\x70\xfb\xc7\xe7\x2f\x77\x37\xeb\x55\xb3\x59\x7e\x41\x6b\xba\x72\x8b\xcf\x24\xaa\x8a\xd4\x53\x24\xa7\x89\x53\x7b\x9c\xbe\x72\x67\x60\x48\xb7\xaa\xe1\x99\x76\x6c\x84\xd2\x91\x44\x2b\x05\x85\xa9\x9d\x71\xfb\x37\x4d\xbd\x84\x41\x24\x70\x5b\xd7\x18\x5f\xcc\x93\xf2\x71\x5f\x87\xae\xaf\x9b\x4d\xb3\x56\xab\xcb\xcb\x5f\x36\x4f\x8d\x0a\x5d\x5f\x2d\xc0\x1a\x4d\x8e\xf3\x28\x9d\x3c\xcc\xc2\x16\x3e\xdd\xde\x57\x8b\x99\xa4\x94\xc9\x09\x52\x64\xa9\x07\x16\xd0\x9b\xc8\x52\x50\x20\xaf\x81\xde\x0d\xd9\x32\x8b\xdb\x52\xc4\xaa\x34\xf2\x59\x91\x0f\xc1\xcf\xfc\x64\xd0\x9b\x3e\x48\x80\x12\xe2\xe4\x25\x60\x9a\x56\xa1\x98\x49\xcb\xa1\x4f\xa2\x79\x6e\x3a\x33\x92\x4b\x73\xc8\x2d\xfc\xd5\x5c\xc0\xe5\x05\xac\xd7\x57\xf9\xef\xef\xca\x4f\x12\x26\x29\xb7\x48\x01\xb2\x8b\x39\x9b\xa2\xab\x60\xce\xbd\x27\x94\x29\x52\x86\xe2\x47\xd9\x17\xfc\x29\x81\xea\x83\x0b\xcc\x18\x8b\xbb\xcc\xcb\x59\xfe\x33\x2b\x1f\xdd\x61\x8e\xcc\x0f\x53\xb4\x6d\xae\x6c\x5b\xd7\x1d\x0a\xaa\x6e\xb4\x5a\x8d\xb6\xce\x23\x54\x67\xb6\xb9\xce\xf4\x38\x92\xb4\x28\x6b\x7e\x75\x4c\xa2\xe4\x45\xaa\xac\x4e\x3c\x1d\x16\x05\xcf\xab\x66\x1f\x31\x0c\xb9\x67\x9f\xc9\xec\x07\xe1\x34\x34\x7e\x8a\x9a\x52\xfc\x1d\x32\x7d\x4f\xe4\x98\x07\x65\xd9\x6c\xd6\x75\x05\x25\xc6\x43\x40\x19\x5a\x38\x69\x96\xfc\x3a\xee\xbc\x55\x5f\x39\xaf\xb9\x39\xfc\x7b\xd8\x6a\xb5\x5a\xa9\xcc\x4a\xca\xc8\xf0\x03\x46\x3d\x98\xa7\x54\x15\xb4\x4c\xb0\x00\xd3\x03\x93\x5c\x24\x92\x5d\x66\xfa\x90\x36\x18\x06\x84\x74\x10\x0f\xe8\x60\xb6\x3c\x5f\xaa\x67\xdb\x35\x59\x9e\x52\x3d\xe7\xa4\x08\xb2\xfb\x8e\x9c\x17\x4a\xe7\xff\xf0\xd2\x1b\x4b\xf9\x01\xe2\x43\x6f\xbc\xa7\xf8\xd9\xc8\x60\x4a\xaa\x87\x94\x50\x24\x9a\xdd\x24\x65\x05\xd0\x8b\x44\x3c\x2e\xa4\x93\xae\x02\x78\x34\xae\x6b\xe1\x66\xbb\x9d\x33\x4e\xdf\x29\x92\xa3\x29\xa2\x3d\xda\xfc\x78\xb3\xdd\x5e\xc0\x5d\xfa\x53\x4a\xfd\x94\x3a\x39\xbd\x63\xc6\xed\x1f\x52\x0d\x99\xa4\x85\xdb\x54\xb2\x6d\x29\x59\x1a\xca\x22\x3f\xbe\x49\x79\x90\x67\xa3\x0a\x60\x44\x67\x7a\x62\x79\xc0\x49\x06\x1f\x5b\xc0\x5d\x37\xd9\xae\xfa\x37\x00\x00\xff\xff\x19\x6a\xcb\x37\xa8\x07\x00\x00"

func resnet152_11kYmlBytes() ([]byte, error) {
	return bindataRead(
		_resnet152_11kYml,
		"Resnet152_11k.yml",
	)
}

func resnet152_11kYml() (*asset, error) {
	bytes, err := resnet152_11kYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Resnet152_11k.yml", size: 1960, mode: os.FileMode(420), modTime: time.Unix(1497484480, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _caffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x5d\x6f\xdb\x36\x17\xbe\xd7\xaf\x78\x00\xa3\xc0\xfb\x02\x91\x2c\xa7\x49\xd6\xea\x62\xc0\x90\xab\x62\x4b\x2e\xba\x62\x18\x30\x0c\x06\x4d\x1d\x59\x6c\x25\x92\x20\x8f\xe2\xf8\x66\xbf\x7d\x38\xa4\x6c\x39\x69\xb7\x62\xbe\x90\xc9\x73\x9e\xf3\xfd\x41\xab\x46\x6a\x70\xaf\xba\x8e\x1e\x89\xb1\x82\x10\xe0\x3a\x1c\xdd\x14\x30\xba\x96\x86\xa2\x0b\x6a\xa4\x83\x0b\x5f\x9a\x02\xc8\x02\x0f\xbf\x67\xf4\x99\x85\xce\x05\x70\x4f\xb3\x08\xf0\x44\x21\x1a\x67\x1b\xfc\x55\x57\x9b\x17\xc8\x99\x03\xed\x2c\x07\x65\x2c\x17\x67\xec\xa6\xaa\xb1\x3a\x03\x8c\xed\x5c\x18\x15\xe7\x33\x22\x8d\xca\xb2\xd1\x67\x7e\xe6\x16\xa2\x47\x19\x4b\xa1\xc1\x0a\xe7\x4b\xc4\x14\xa9\x05\x3b\x78\x0a\x82\xcc\x9e\xc1\x07\x6a\x8d\x16\x9d\x05\x96\xdf\x0a\xe3\x34\xb0\xf1\x03\xc1\x0f\x8a\x05\x1f\xa1\x95\xc5\x8e\x10\x3d\x69\xd3\x19\x6a\x0b\x40\x8d\xed\xdd\x4d\x93\x24\xf7\x7e\x6a\x10\x94\xf1\xc1\x7d\x26\xcd\x6b\xad\xc2\x38\x94\xe3\xb3\x25\x6e\x12\xac\xd4\x7e\x4a\x48\xfd\x5d\xe4\x3e\x21\xbd\xd7\x77\x37\x03\x35\xdf\x15\x9a\x81\xb3\xd8\xbf\xbb\x72\x89\x6d\x29\xea\x60\x3c\xa7\x5c\xff\x58\x00\x3f\x59\x98\x51\xed\xa9\xd4\x83\x8a\xd1\x74\x46\xe7\x6c\xb7\x44\x5e\x52\xf9\xe4\x86\x49\x08\x6a\x80\x25\x4e\xd5\x4b\x25\xa3\x16\xce\xa6\x72\xff\xf2\xeb\x6f\x1f\xef\xcb\xeb\x7a\x53\xe3\x83\x68\x92\xb6\x48\x10\x63\xf7\x88\xc4\x57\x05\x70\xe8\x8d\xee\xa1\x74\x6f\xe8\x29\x95\xc4\x97\x1b\x28\x9b\x4f\xb7\xa0\x10\x5c\x40\x50\x4c\x51\x1a\xef\xed\xfb\xea\x87\x37\x89\xbd\x79\x57\xbd\x7f\x53\x15\xc0\xa7\x9e\xce\xf6\xb5\xb3\xd1\x44\x4e\xd0\xbb\xfa\x01\x5e\x49\x63\xb1\x14\x5c\x64\x6e\xeb\xfa\x67\x58\x9a\x82\xb3\x11\x4a\x07\x17\x23\x6e\x5f\x85\x32\xa8\xa3\xc0\xf9\xe0\xd0\x4d\xc3\x70\x2c\xb5\xb3\x96\x34\x53\x3b\xb3\xaa\x22\x50\x47\x81\xac\xa6\x28\x4d\xb5\xdc\x52\x3f\x29\x2f\xe2\x6b\x1c\x68\x17\x8d\x78\xbd\x06\xb1\xae\x2a\xe4\xfc\xee\x24\xf4\xcb\x51\x28\xd1\x33\xfb\x66\xbd\xce\x92\x95\x35\x3e\x56\x5a\xe7\xeb\xfa\xe6\xdd\xf5\x4d\x99\xaa\x60\x89\x5f\x15\xa2\x3c\x18\xee\x4b\xa9\x46\xf9\x22\x84\x52\x22\x4c\x7f\x29\x29\xb1\x58\x61\x30\x9a\x6c\x4c\xa3\xbb\xd8\x9e\x89\x0d\x1e\x3e\x7c\x2a\x56\x30\xd6\x4f\x9c\x62\x58\x20\x99\x26\x3d\xb7\x42\x67\x42\xe4\x8c\x02\x1f\x3d\x7d\x35\xd4\x65\x22\x37\xb9\x69\x8a\x3c\x38\x17\x4d\x75\x32\x7e\xa1\x27\x81\x5e\xf4\x9d\x00\xb2\x89\x45\xcb\x52\x44\x49\x77\x32\xbd\x90\xe6\x39\x6d\xcd\x48\x56\xe6\x3e\x36\xf8\x63\x73\x85\xb7\x57\xb8\xbe\xbe\x49\x9f\x3f\x0b\x37\xb1\x9f\x38\x47\x21\x06\x92\x8a\xd9\x9b\xcc\x2b\x30\xfb\xde\x91\xe2\x29\x50\x82\xaa\x6f\x79\x9f\xf1\x8b\x03\xc5\xab\x00\x94\x3d\x41\x52\x00\xd2\x99\x18\xd4\x2e\x25\xe8\x22\x90\x39\x3d\xdf\x0a\x66\x76\x21\x6e\xa7\x30\x34\xa7\xe6\x68\x15\xab\xaa\x1d\x07\x5d\x8d\xc3\x3a\xcd\xee\x3a\xa5\x3d\xae\x4f\xcd\xb1\x8e\x47\x1b\x89\x2b\x7e\xe6\x22\xb1\x24\x59\xa7\xed\x14\xe7\xfd\xb6\x0f\xca\xf7\x69\x14\x0e\x64\xf6\x3d\x47\x04\x8a\x6e\x0a\x9a\xc4\xf6\x4e\x45\xfa\xaf\x56\xb5\x3c\x0e\x72\x28\x90\xb5\x6f\xbd\xe2\xbe\xc1\x89\x5e\xc6\xe3\xb8\x73\x43\xf5\x39\xa6\x9d\x3a\x9b\x7d\x0d\xaa\xeb\xba\xae\x52\x1e\xc4\x0f\x13\xb7\x2a\xe8\xde\x3c\x49\x41\xd4\x10\x09\x2b\x98\x2e\x2d\x0c\xa9\x41\xde\x2d\x27\x67\x61\x22\x14\xe4\xc0\x4e\xb2\x3f\x4b\x5e\xee\xef\x8b\x45\x2e\x92\x8b\x9b\x97\x99\xc8\x84\xa4\xbe\x25\xeb\x98\xe4\xfc\x0f\x5a\x3a\x33\x50\x7a\xeb\xe2\xa9\x2d\xbe\x4e\xac\x0c\xa7\xc9\xae\x9e\x5c\x52\xcc\xc1\xec\x26\xce\x7b\x83\x9e\x39\xa8\xf3\xe6\x5a\x78\x05\xf0\xc5\xd8\xb6\xc1\xfd\xe3\xe3\xec\xb1\xdc\xc5\x52\x1e\xec\xb3\xcc\xff\xee\x1f\x1f\xaf\xf0\x51\x3e\x55\x55\xfd\x5f\x9a\x78\x5e\xae\x5b\xa9\x5c\x24\x6e\x96\xbd\xbb\xc2\x4c\x3b\x3f\x7d\x69\x7e\x67\x81\x02\x18\x95\x35\x1d\x45\xde\xaa\x89\x7b\x17\x1a\xa8\x5d\x3b\x0d\x6d\xf1\x77\x00\x00\x00\xff\xff\xdb\x8b\x9f\x34\x05\x08\x00\x00"

func caffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_caffenetYml,
		"caffenet.yml",
	)
}

func caffenetYml() (*asset, error) {
	bytes, err := caffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "caffenet.yml", size: 2053, mode: os.FileMode(420), modTime: time.Unix(1497484428, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inceptionv3Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\xdf\x6b\x23\x37\x10\x7e\xd7\x5f\xf1\x81\x29\xb4\x10\xef\xda\x6e\x92\xc2\x3e\x14\xda\x3c\x05\x1a\x3f\x5c\x4b\x29\x94\x12\x64\xed\xac\x3d\x77\xbb\x92\x90\x66\xed\xe4\xa5\x7f\x7b\x91\xb4\xf6\x3a\xbd\xdc\x9d\x1f\x8c\x34\xf3\xcd\xcc\xb7\xf3\x4b\x56\x0f\xd4\xe0\xd1\x1a\xf2\xc2\xce\x6e\x49\xb0\x40\x12\xc2\x75\x78\x75\x63\xc0\xe0\x5a\xea\x55\x17\xf4\x40\x27\x17\x3e\x35\x0a\x28\x46\x4f\x7f\x15\xf4\x45\x85\xce\x05\xc8\x81\x26\x13\xe0\x48\x21\xb2\xb3\x0d\xfe\x5d\x55\xeb\x37\xc8\x49\x03\xe3\xac\x04\xcd\x56\xd4\x05\xbb\xae\x56\x58\x5c\x00\x6c\x3b\x17\x06\x2d\xe5\x8c\x48\x83\xb6\xc2\xe6\xa2\x2f\x5a\x95\xfc\x68\xb6\x14\x1a\x2c\x70\xb9\x44\x8c\x91\x5a\x88\x83\xa7\x90\x90\x85\x19\x7c\xa0\x96\x4d\xf2\xa9\x30\xff\x16\x18\xc6\x5e\xd8\xf7\x04\xdf\x6b\x49\xf8\x08\xa3\x2d\x76\x84\xe8\xc9\x70\xc7\xd4\x2a\x40\x0f\xed\xfd\x6d\x93\x2d\xf7\x7e\x6c\x10\x34\xfb\xe0\x3e\x92\x91\xda\xe8\x30\xf4\xcb\xe1\xc5\x92\x34\x19\xb6\x34\x7e\xcc\x48\xf3\x4d\xe4\x3e\x23\xbd\x37\xf7\xb7\x3d\x35\xdf\x34\x9a\x80\x93\xd9\xd7\xa9\x5c\x63\x5b\x8a\x26\x70\x2e\x76\x83\x9f\x15\xf0\x8b\x05\x0f\x7a\x4f\x4b\xd3\xeb\x18\xb9\x63\x53\xb2\x6d\x9c\x3d\xba\x7e\x4c\x67\xdd\xc3\x92\xa4\xc2\x55\x0a\x73\xb3\x40\x9b\x03\xd3\x91\x22\x36\xeb\x6a\xf3\x1d\xc4\xf9\xe5\x1a\xda\xb6\xb8\xab\xee\xcb\xf5\x0e\x14\x82\x0b\x70\x36\x37\xc6\xe3\x6f\xbf\xff\xf9\xe1\x01\x9b\xd5\x7a\x83\xa3\xee\xb9\x2d\xa1\x5a\x2d\x3a\x92\x64\xe7\x92\x02\x47\x8e\x12\x53\x07\x76\x74\xa2\xd4\x53\xda\x62\x73\xf7\x04\xaf\x53\x07\x09\x85\x58\xa9\x40\x1d\x05\xb2\x86\x62\xaa\xf9\x7c\xcb\xe5\xd6\x3e\x55\xbf\xc6\x89\x76\x91\x85\xd2\x91\xc4\x54\x15\xca\xe7\xef\xd8\xee\xdf\x74\xea\x12\x07\x11\x1f\x9b\xba\xd6\xe1\x85\x8f\x95\x0b\xfb\xda\xb7\x5d\xbd\xbe\x5b\x6f\xaa\xd5\xea\xee\xfe\xa7\xca\xb7\x9d\x5a\xa0\x67\x43\x36\xe6\xe9\x98\xed\x27\x61\x83\xa7\xc7\x3f\xd4\x02\x6c\xfd\x28\x99\xc7\x0c\x29\xb2\x54\xd6\x05\x3a\x0e\x51\x0a\x0a\xf2\xea\xe9\xb3\xb9\x59\x66\x71\x53\xea\xa2\x4a\x6f\x5e\xd5\xed\x1c\xfc\xca\x4f\x06\xbd\x29\x6d\x02\x94\x10\xb3\x97\x39\x7d\x29\x65\x39\xf4\x2c\x9a\x46\xa1\xe5\x81\x6c\x1a\xad\xd8\xe0\xef\xf5\x0d\x7e\xbc\xc1\x66\x73\x9b\xff\xfe\x51\x6e\x14\x3f\x4a\xf9\x8a\x14\x20\xbb\x98\xd8\x14\x9d\xc2\xc4\xbd\x23\x2d\x63\xa0\x0c\xd5\xef\xb1\x2f\xf8\x99\x80\x7a\xe7\x03\x26\x4c\xaf\x77\x39\x2f\x57\xfc\xa7\xac\xbc\xf7\x0d\x53\xe4\xf8\x3c\x86\xbe\xc9\x75\x6d\xea\x3a\xb5\x58\xd5\x0e\xbd\xa9\x86\xbe\xce\x53\x51\xe7\x6c\xc7\x3a\xa7\x27\xdd\xe3\xab\x4d\x4d\x28\x2f\xa2\xb2\x2a\xe5\xe8\x3c\xf7\x71\xda\x1c\xfb\xa0\xfd\x21\xb7\xf8\x89\x78\x7f\x90\x88\x40\xd1\x8d\xc1\x50\x8a\xbd\xd3\x91\xbe\x12\xf5\x7f\xf1\xf8\x3c\x47\xcb\x9d\xad\x15\x8a\xef\x67\xaf\xe5\x70\xb5\x90\x97\xbf\x6e\x97\xf1\x75\xd8\xb9\xbe\xfa\x18\xf3\xbe\x9a\x02\xbf\x07\x5c\xad\x37\xf7\x55\xce\x46\x62\xc3\xf1\x59\x07\x73\xe0\x63\xaa\x86\xee\x23\x61\x01\xee\x10\x49\x6e\x52\x72\xcb\x44\x9e\x29\x83\x23\x34\xd2\x41\x1c\xb4\xc5\x64\x79\xbd\x1f\xaf\x16\x65\xb2\x9c\xe9\x5e\xe7\xa3\x08\xb2\xfb\x96\xac\x13\x4a\xe7\x2f\x78\xe9\xb8\xa7\xfc\x96\xc4\x73\x4f\x7c\x9e\xde\x13\xcb\x81\x0b\xd5\x33\x25\x2d\x12\x78\x37\x4a\x19\x7c\x7a\x91\xa0\xcf\xeb\x09\xb3\x4e\x01\x9f\xd8\xb6\x0d\x1e\xb6\xdb\x89\x71\xba\xa7\x48\x96\xc6\x30\xaf\x34\x7c\xff\xb0\xdd\xde\xe0\x43\xfa\xab\xaa\xea\x87\xd4\xc1\xe9\x49\x62\xbb\x7f\x9e\x16\x53\x83\xc7\x54\xb4\xf2\xdc\x4d\xb2\xcb\xd3\x92\x87\x77\x32\x50\xc0\xa0\x2d\x77\x14\xe5\x59\x8f\x72\x70\xa1\x81\xde\xb5\x63\xdf\xaa\xff\x02\x00\x00\xff\xff\x35\x61\x91\x44\x69\x07\x00\x00"

func inceptionv3YmlBytes() ([]byte, error) {
	return bindataRead(
		_inceptionv3Yml,
		"inceptionv3.yml",
	)
}

func inceptionv3Yml() (*asset, error) {
	bytes, err := inceptionv3YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inceptionv3.yml", size: 1897, mode: os.FileMode(420), modTime: time.Unix(1497484423, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _locationnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x6f\xe3\x38\x0f\xbe\xfb\x57\x10\x08\x06\x78\x5f\x20\xb1\x93\x26\xfd\xf2\x61\x81\x45\xb1\x0b\x14\xd8\xe6\x30\x98\xc3\x00\x8b\x41\xc0\xc8\xb4\xa3\xa9\x2c\x09\x22\xdd\xb4\x73\xd8\xdf\xbe\x90\xe4\x7c\x6d\xbb\x3b\x3d\xa4\xb6\xf8\x90\x7c\x48\x3d\xa4\x2d\xf6\x54\xc3\x1f\x4e\xa1\x68\x67\xd7\x24\x30\x81\x78\x06\xae\x85\x37\x37\x04\xe8\x5d\x43\xa6\x68\x03\xf6\xb4\x77\xe1\xb9\x2e\x00\xb2\xcf\xd3\xd7\x8c\x3e\x9a\xa0\x75\x01\x64\x47\xa3\x0b\xc0\x0b\x05\xd6\xce\xd6\xf0\xd7\xbc\x5c\x5c\x20\x47\x0b\x28\x67\x25\xa0\xb6\x52\x1c\xb1\x8b\x72\x0e\x93\x23\x40\xdb\xd6\x85\x3e\x71\x03\x6d\x81\xa9\x47\x2b\x5a\x1d\xed\xd9\x5a\xc4\x38\xa8\x2d\x85\x1a\x26\x70\x7c\x61\x18\x98\x1a\x10\x07\x9e\x42\x44\x66\x66\xe0\x03\x35\x5a\xc5\x98\x05\x9c\xfe\x26\xd0\x0f\x46\xb4\x37\x04\xde\xa0\x44\x3c\x83\x42\x0b\x5b\x02\xf6\xa4\x74\xab\xa9\x29\x00\xb0\x6f\x6e\x56\x75\xf2\xec\xfc\x50\x43\x40\xed\x83\xfb\x4e\x4a\x2a\x85\xa1\x37\xb3\xfe\xd5\x92\xd4\x09\x36\x53\x7e\x48\x48\xf5\x53\x64\x97\x90\xde\xab\x9b\x95\xa1\xfa\xa7\x4e\x23\x70\x74\xfb\x6f\x2a\xe7\xd8\x86\x58\x05\xed\x25\xf5\xfa\x97\x02\xe0\x57\xf0\x3b\x27\x6e\x66\x9c\x42\xa3\x7f\xe4\x56\x2b\x67\x5f\x9c\x19\xe2\x33\x1a\xb0\x34\x84\xf4\x4f\xd2\xe5\x6d\x31\x76\xd5\xd9\x74\xd7\x8f\x56\x51\x8a\x06\x18\xd4\x4e\x0b\x29\x19\x02\x95\x05\x5c\x68\x4a\x33\xe0\xd6\x50\xbc\x8a\x31\x0f\xc1\xb2\xbc\xf9\x14\x55\xa6\x7b\xec\x88\x01\x05\x58\x02\x91\x80\xa1\x17\x32\x53\x40\xdb\xc0\xea\xee\x53\x34\xc4\x1b\xd5\x96\xec\x68\x8b\xd1\xbf\xec\xe8\x48\x68\x8f\x0c\x49\x46\x99\xd6\xe2\xfe\x09\x7e\xfb\xfa\xf8\x3b\x74\xe4\x04\xbb\x8e\x9a\x5c\x22\xa7\x90\xca\x59\xd6\x2c\x1c\x53\xdf\xdf\x4e\x97\x57\x8b\xe9\x7c\x75\x07\x1e\xa3\x38\x85\x02\x97\x45\xa0\x96\x02\x59\x45\x1c\xe5\x74\x7a\x4b\x4a\x42\x1f\x85\x55\xc1\x9e\xb6\xac\x85\xe2\x23\x89\x2a\x4b\xc8\x9d\xdd\x6a\xdb\x5d\x0c\xc1\x0c\x76\x22\x9e\xeb\xaa\x62\x41\xd1\xaa\xec\x9c\xeb\x0c\x0d\x4c\x21\x96\x45\x56\x4a\xe5\xfa\xaa\xa7\x46\x63\x15\x88\x29\xf6\x71\x04\x25\x0b\xd9\xaa\xf2\xc3\x96\xab\xd4\xe0\x17\xaa\x56\xd7\xab\xbb\xbb\xd2\x37\x6d\x31\x01\xa3\x15\x59\x4e\xd3\x7a\x4a\x3a\x1e\xd6\xf0\xf4\xf8\xa5\x98\x80\xb6\x7e\x90\x44\xfe\x04\xc9\x67\x51\x66\x13\x68\x75\x60\xc9\x28\x90\x37\x4f\xef\xe6\x78\x96\x8e\xeb\x7c\x53\x45\x9e\x95\x33\x1d\x1d\x92\x9f\xc5\x49\xa0\x0b\xa9\x45\x40\x4e\x71\x8a\x72\xea\x79\xec\x73\x4a\x7d\x3a\x1a\x47\xb3\xd1\x3d\xd9\x38\xea\x5c\xc3\x9f\x8b\x29\x2c\xa7\x70\x75\xb5\x4a\x3f\xdf\x46\x48\x4f\x68\x37\x29\x6a\x84\x5c\x2d\xcb\x9b\xbb\x29\x2c\x16\x37\xe5\xed\xed\xfd\x14\x16\xf3\x65\x79\xbf\xbc\xff\x56\xb8\x41\xfc\x20\xb9\xe4\xc8\x26\xe5\x1b\xa9\x67\x5b\x01\x63\xa1\xca\xb9\xd0\x68\x8b\x42\x9c\xe0\xf8\x51\xb9\xd9\xe7\xc4\xb8\xf8\xa0\xe2\x11\x73\x19\xef\xac\xec\xb1\x99\x1f\x95\xde\x12\xc6\x49\xe2\xcd\x10\x4c\x7d\xd4\x50\xc0\x7d\xd9\x69\xd9\x0d\xdb\x77\x02\x8a\xcb\x2b\xa9\x68\xb6\xa5\xf0\x4c\x86\xde\x2a\x19\xc4\x05\x8d\x86\xab\x1e\x59\x28\x54\x5d\xd0\x0d\x97\xf2\x2a\x45\xba\xdb\xd8\xf6\xc3\x6a\xe3\x71\x39\x76\x01\xfd\x2e\x4d\xca\x9e\x74\xb7\x13\x86\x40\xec\x86\xa0\x12\xf7\x38\xfb\x97\x8c\x78\x59\x62\x8f\x3f\x9c\xc5\x3d\x67\x22\xbd\x72\x7d\xef\x2c\xcf\x0e\xe9\xab\x14\x99\xab\x02\x72\xf4\x8d\x47\xd9\xd5\xf0\x79\xbd\x98\x2f\x66\xd7\xcf\xd7\xf3\xf9\x8c\xdf\xfa\xad\x33\xe5\x77\x4e\x3b\x79\xcc\xfc\x01\x6e\x3e\x5f\x5c\x95\xa9\x53\x91\x8d\xe6\xcd\x38\x14\x35\xb4\x68\x98\x60\x02\xba\x05\x26\x99\xc6\xf6\xe7\x0d\x75\xa0\x9c\x96\x10\xc4\x07\x71\x80\xe3\xbe\x7a\xa1\xf3\x4f\xc0\xd9\xb7\x20\x7a\x9e\xc8\x9e\xf7\x23\x1f\xa4\xf0\x0d\x59\x27\x14\x9f\xff\x25\x4a\xab\x0d\xa5\xcf\x25\x1f\x54\xf3\xbe\xbd\x7b\x2d\x3b\x9d\xa9\x1e\x28\xa1\x48\xd0\xdb\x41\xf2\x02\xa2\x57\x09\x78\x5c\x76\x27\x5b\x01\xf0\xac\x6d\x53\xc3\xc3\x7a\x3d\x32\x8e\xef\x31\xd3\x3f\x36\xf6\xff\x1e\xd6\xeb\x29\x7c\x8e\x3f\x65\x59\xfe\x3f\xea\x3c\xae\x4b\x6d\xbb\x4d\x83\x82\x4c\x52\xc3\xd3\x51\x3f\x0f\xf9\xfa\xe2\x90\x67\xe3\xf1\x33\x9a\x16\xc3\xe8\x59\x00\xf4\x68\x75\x4b\x2c\x1b\x1c\x64\xe7\x42\x0d\xb8\x6d\x06\xd3\x14\x7f\x07\x00\x00\xff\xff\x99\x06\x76\x4e\x54\x08\x00\x00"

func locationnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_locationnetYml,
		"locationnet.yml",
	)
}

func locationnetYml() (*asset, error) {
	bytes, err := locationnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locationnet.yml", size: 2132, mode: os.FileMode(420), modTime: time.Unix(1497484433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ninYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x8b\x1b\x39\x13\xbe\xf7\xaf\x28\x30\x2f\x24\x60\x77\xdb\x63\xbf\x03\xdb\x87\x85\x10\x58\x98\x43\x7c\x08\x39\x2c\x2c\xcb\x50\x56\x57\xbb\x2b\xa3\x96\x84\xaa\xda\x9e\xb9\xec\x6f\x5f\x24\xf5\xd8\x4e\x32\x9b\xf8\x60\xd4\xaa\xa7\xaa\x9e\xfa\x94\xc3\x91\x5a\xd8\x93\x9e\x7d\x7c\x02\x76\x97\xe3\xbb\x3d\xef\xdf\xc3\x02\x12\x00\x7c\x0f\x2f\x7e\x8a\x30\xfa\x8e\x6c\xd5\x47\x1c\x29\x81\xda\x0a\xa0\x18\xf8\xf4\xe7\x9e\x14\x16\x70\x11\x41\xef\x23\xe8\x40\xb3\x0a\xc0\x89\xa2\xb0\x77\x2d\xfc\xb3\xae\x37\xdf\x20\x67\x09\x18\xef\x34\x22\x3b\xad\x2e\xd8\x4d\xbd\x86\xc5\x05\xc0\xae\xf7\x71\x44\x2d\x67\x10\x1a\xd1\x29\x9b\x8b\xbc\x48\xab\x64\x07\xd9\x51\x6c\x61\x01\x97\x0f\x81\x49\xa8\x03\xf5\x10\x28\x26\x64\x61\x06\x21\x52\xc7\x26\xd9\xac\xe0\xfa\x5b\xc0\x38\x59\xe5\x60\x09\x82\x45\x4d\x78\x01\x83\x0e\x0e\x04\x12\xc8\x70\xcf\xd4\x55\x00\x38\x76\xf7\xbb\x36\x6b\x1e\xc3\xd4\x42\x44\x0e\xd1\x7f\x25\xa3\x8d\xc1\x38\xda\xd5\xf8\xec\x48\xdb\x0c\x5b\x99\x30\x65\xa4\xf9\x25\xf2\x98\x91\x21\x98\xfb\x9d\xa5\xf6\x97\x4a\x33\x70\x56\xfb\x39\x95\x5b\x6c\x47\x62\x22\x07\xcd\xb9\xfe\xbd\x02\xf8\xe0\x80\x47\x3c\xd2\xca\x58\x14\xe1\x9e\x4d\xc9\xb6\x9b\x9b\x42\x34\x4e\x3a\x45\x82\xf3\x40\x91\x40\x46\xb4\x36\xe5\xd3\x50\xd0\xe8\x9d\x80\x58\xee\x08\xfc\x89\x22\xb0\x0b\x93\xc2\x88\x41\x96\x20\x3c\xb2\xc5\x98\xb2\x8f\xf0\x71\xbf\xaf\x2b\x80\x2f\x03\x0b\x90\x1b\xd0\x19\x12\xb0\xde\xa0\x2d\x25\x61\x77\x5c\x02\x5a\xeb\xcf\xec\x8e\xb9\x8f\x84\xc7\x60\x29\xc2\x77\xac\x2c\xbe\xa4\xba\xea\x80\x0a\x18\x09\x08\x85\x29\x3b\x61\xa7\x14\x43\x24\x2d\x8e\xe8\x12\x80\xf1\x4e\x58\x54\x52\x47\x6f\x41\x14\xcd\x13\x75\xb3\xa1\x25\x10\x9a\x21\x49\xce\x03\x9b\x01\x58\x00\x61\xbb\xca\xc2\x9b\x20\x93\xc9\xfd\xc3\x1e\xd0\x0c\x4c\x27\xea\x60\xfb\xff\xfa\xfe\xb7\xff\x81\x77\xf0\xf0\xc7\x87\xcf\xab\xcd\x7a\x9d\xba\xf3\x6e\xbd\xd9\xd5\x55\xa4\x9e\x22\xa5\x08\x53\x33\x5e\xbf\x72\x1f\x62\x48\xf4\x1b\x38\xd3\x41\x58\x29\x1d\x49\x4d\x5d\x43\xa9\xcb\x21\x85\x7f\x3b\x42\x2b\x18\x54\x83\xb4\x4d\x83\xf1\x99\x4f\xb5\x8f\xc7\x26\x74\x7d\xb3\xd9\x6e\xee\xea\xdd\x6e\xbd\x3e\x6d\xeb\xd0\xf5\xd5\x02\x2c\x1b\x72\x92\xe7\xf6\x6a\x60\xbe\x6c\xe1\xd3\xc3\x97\x6a\x51\xea\x93\x89\x5c\x21\xe5\x2e\x35\xdc\x02\x7a\x8e\xa2\x73\x15\xf5\x25\xd0\x0f\x13\xbd\xca\xd7\x6d\xe9\x98\xaa\x4c\xcd\x4d\x47\xbd\x3a\xbf\xb1\x93\x41\xdf\x34\x5d\x02\x14\x17\x57\x2b\x01\xd3\x6a\x50\x8a\x39\x67\xd9\xf5\xf5\x6a\x1e\xd2\x8e\x47\x72\x69\xe8\xa5\x85\xbf\x36\x4b\xd8\x2e\xe1\xee\x6e\x97\xff\xfe\xae\xfc\xa4\x61\xd2\x12\x45\x72\x90\x4d\xcc\x6c\x8a\xac\x82\x99\x7b\x4f\x98\xfa\x39\x43\xf1\x2d\xf6\x05\x7f\x25\x50\xbd\x11\xc0\x8c\xb1\x78\xc8\x79\xb9\xe1\x3f\x67\xe5\xad\x18\x66\xcf\xf2\x38\x45\xdb\xe6\xc2\xb6\x4d\xd3\xa1\x62\xdd\x8d\xd6\xd4\xa3\x6d\xf2\xbc\x36\x39\xdb\xd2\xe4\xf4\xa4\x6f\x79\x71\x42\x5a\xeb\xb3\x56\x59\x94\x72\xf4\xba\x91\x64\xde\x69\xc7\x88\x61\x00\x74\x1d\x9c\x89\x8f\x83\x0a\x44\x12\x3f\x45\x43\xc9\xf7\x01\x85\x7e\xe2\xf5\x3b\x7f\x8e\x5d\x53\x41\x31\xf9\x18\x50\x87\x16\x1c\xbb\x95\xbc\x8c\x07\x6f\xeb\xaf\x92\xf7\xe6\xec\xe6\x46\xbe\x5e\xaf\xd7\x75\x0e\x39\xb9\x64\x79\xc4\x68\x06\x3e\xa5\x94\xa3\x15\x82\x05\x70\x0f\x42\xba\x4c\x19\x74\x39\x8d\xaf\xbc\xca\xe0\xa5\x43\x5a\x17\x0e\x66\xcd\xdb\xf5\x7c\xb3\xa7\x93\xe6\x95\xdc\x6d\xd0\xe5\x22\x9b\xef\xc8\x79\xa5\x74\xfe\x0f\x2b\x3d\x5b\xca\x4f\x99\xbc\x16\xfe\xc7\x1c\x9e\x59\x07\x2e\x54\x5f\x29\xa1\x6a\xe4\xc3\xa4\x65\xbc\xe9\x59\x23\x5e\x56\xcd\x55\x56\x01\x3c\xb1\xeb\xda\xb4\xf9\x66\xc6\xe9\x3b\x79\x72\x34\x45\xb4\x17\x9d\x77\x1f\xf7\xfb\x25\x7c\x4e\x7f\x75\x5d\xbf\x4f\x6d\x9a\x5e\x44\x76\xc7\xc7\x54\x24\x21\x6d\xe1\x21\x55\xa6\xbc\xb6\xf3\xdd\xe5\x65\xcb\x13\x3a\x2b\x54\x00\x23\x3a\xee\x49\xf4\x11\x27\x1d\x7c\x6c\x01\x0f\xdd\x64\xbb\xea\xdf\x00\x00\x00\xff\xff\x20\x9a\x91\x8c\xf4\x07\x00\x00"

func ninYmlBytes() ([]byte, error) {
	return bindataRead(
		_ninYml,
		"nin.yml",
	)
}

func ninYml() (*asset, error) {
	bytes, err := ninYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nin.yml", size: 2036, mode: os.FileMode(420), modTime: time.Unix(1497484438, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet152Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8b\x23\x37\x10\xbe\xf7\xaf\x28\x30\x81\x04\xc6\x6a\xdb\xb3\xde\x84\x3e\x04\xc2\x9c\x06\xb2\x3e\x4c\x96\x10\x08\x61\x28\xab\xab\xdd\xda\x55\x4b\x42\x55\x3d\x33\xbe\xe4\xb7\x07\x3d\xfc\x18\x66\xb2\xeb\x43\x5b\x8f\xaf\xaa\x3e\x7d\x55\x25\x39\x9c\xa8\x83\x07\x62\xd3\xcf\x68\x77\x24\xeb\xed\x06\x16\x90\x96\xc1\x0f\x70\xf4\x73\x84\xc9\xf7\x64\x9b\x21\xe2\x44\xcf\x3e\x7e\xed\x1a\x80\x62\xf6\xe9\xaf\x1d\x09\x2c\xe0\xbc\x05\x83\x8f\x20\x23\x55\x13\x80\x27\x8a\x6c\xbc\xeb\xe0\xdf\x95\x5a\xbf\x42\xd6\x1d\xd0\xde\x49\x44\xe3\xa4\x39\x63\xd7\x6a\x05\x8b\x33\xc0\xb8\xc1\xc7\x09\xa5\x8c\x81\x69\x42\x27\x46\x9f\xf7\xcb\x6e\x93\xfc\xa0\x71\x14\x3b\x58\xc0\x79\xc2\x30\x33\xf5\x20\x1e\x02\xc5\x84\x2c\xcc\x20\x44\xea\x8d\x4e\x3e\x1b\xb8\xfc\x16\x30\xcd\x56\x4c\xb0\x04\xc1\xa2\x24\x3c\x83\x46\x07\x7b\x02\x0e\xa4\xcd\x60\xa8\x6f\x00\x70\xea\x3f\x7e\xe8\xb2\xe5\x21\xcc\x1d\x44\x34\x21\xfa\x2f\xa4\xa5\xd5\x18\x27\xbb\x9c\x5e\x1c\x49\x97\x61\x4b\x1d\xe6\x8c\xd4\xdf\x45\x1e\x32\x32\x04\xfd\xf1\x83\xa5\xee\xbb\x46\x15\x58\xcd\xbe\x4d\xe5\x1a\xdb\x13\xeb\x68\x82\x64\xad\x7f\x6d\x00\x7e\x73\x60\x26\x3c\xd0\x52\x5b\x64\x36\x83\xd1\x45\x6d\x47\x92\x53\xb5\x9f\x8d\x95\x54\x0d\x16\x8f\x49\x52\x19\x51\xc0\x12\x46\x07\xb1\x16\x0e\x0c\xb3\xcb\x72\x32\x3c\xab\xa8\xa4\x40\xc1\xb8\x30\x0b\xab\x06\xe0\xf3\x68\xf8\xec\x50\x7b\xc7\x86\x85\x93\xcf\x54\x6f\xc5\xaf\x2a\x54\xc8\x31\x4d\x7b\x9b\xcb\x4f\x46\x62\x3a\x99\x31\xa0\x1e\x0d\x3d\x11\xc3\xad\xda\xfe\xfc\x03\x50\x8c\x3e\x42\x44\x21\xf0\x0e\xee\x7f\xff\xe3\xcf\x87\xbb\xe5\x66\xb5\xde\xaa\x26\xd2\x40\x91\x9c\x26\x4e\xe5\x70\x99\xe5\x4a\xc0\x90\x4e\xd1\xc2\x33\xed\xd9\x08\xa5\x21\x89\x56\x0a\x8a\x32\x7b\xe3\x0e\xaf\x8a\x78\x09\xa3\x48\xe0\xae\x6d\x31\xbe\x98\x27\xe5\xe3\xa1\x0d\xfd\xd0\xae\xb7\xeb\x8d\x5a\xdd\xde\xfe\xb2\x7d\x5a\xab\xd0\x0f\xcd\x02\xac\xd1\x89\x7f\xe5\x5e\x3d\xd4\xc5\x0e\x3e\xdd\x7f\x6e\x16\x55\x94\xc4\xe4\x02\x29\x6b\x29\xe7\x0b\x18\x4c\x64\x29\x28\x90\x63\xa0\x37\x4d\xb5\xcc\xcb\x5d\x49\x5a\x53\x0a\xf7\x2a\xa9\xa7\xe0\x57\x7e\x32\xe8\x55\xde\x13\xa0\x84\xb8\x78\x09\x98\xba\x53\x28\x66\xd1\x72\xe8\xcb\x52\xed\x93\xde\x4c\xe4\x52\xdf\x71\x07\x7f\xaf\x6f\xe0\xf6\x06\x36\x9b\x0f\xf9\xf3\x4f\xe3\x67\x09\xb3\x94\x53\xa4\x00\xd9\x45\x65\x53\xf6\x1a\xa8\xdc\x07\x42\x99\x23\x65\x28\xbe\xc7\xbe\xe0\x2f\x04\x9a\x77\x0e\x50\x31\x16\xf7\x59\x97\x2b\xfe\x55\x95\xf7\xce\x50\x23\xf3\xe3\x1c\x6d\x97\x33\xdb\xb5\x6d\x8f\x82\xaa\x9f\xac\x56\x93\x6d\x73\xcb\xb4\x59\x6d\x6e\xb3\x3c\x69\x1e\x89\xd3\x1f\x1f\x1d\x93\x28\x79\x91\x26\x23\x92\x54\xa7\xbb\x81\xeb\xed\x72\x88\x18\x46\x40\xd7\xc3\x33\x99\xc3\x28\x9c\xfa\xc4\xcf\x51\x53\xa2\xb0\x47\xa6\x6f\x04\x7f\x3f\xec\x7a\xbb\x59\x96\x36\x69\x1b\x28\x01\x1e\x03\xca\xd8\x41\x01\x2c\x13\x80\x8f\xd3\xde\x5b\xf5\x85\xf3\xb5\x56\x63\xbf\x85\xad\x56\xab\x95\xca\xaa\x24\x3a\x86\x1f\x31\xea\xd1\x3c\xa5\xac\xa0\x65\x82\x05\x98\x01\x98\xe4\x26\x89\xec\xb2\xd2\x27\xce\x60\x18\x10\xd2\x40\x3c\xa0\x83\x6a\x79\x7d\x89\x5e\xdd\xa6\xc9\xf2\x42\xf5\x5a\x90\xb2\x90\xdd\xf7\xe4\xbc\x50\x1a\xff\x8f\x97\xc1\x58\xca\x0f\x0e\x9f\x6a\xe3\xad\xbe\xcf\x46\x46\x53\xa8\x9e\x28\xa1\x48\x34\xfb\x59\xca\x15\x40\x2f\x12\xf1\x7c\x01\x5d\xf6\x1a\x80\xaf\xc6\xf5\x1d\xdc\xed\x76\x95\x71\x9a\xa7\x48\x8e\xe6\x88\xf6\x6c\xf3\xe3\xdd\x6e\x77\x03\x0f\xe9\xa3\x94\xfa\x29\x55\x72\x7a\xb7\x8c\x3b\x3c\xa6\x04\x32\x49\x07\xf7\x29\x6b\xe5\x4d\xac\x6b\xe7\xf7\x27\x37\x71\x35\x68\x00\x26\x74\x66\x20\x96\x47\x9c\x65\xf4\xb1\x03\xdc\xf7\xb3\xed\x9b\xff\x02\x00\x00\xff\xff\xfb\x78\xc5\xf4\x90\x07\x00\x00"

func residualnet152YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet152Yml,
		"residualNet152.yml",
	)
}

func residualnet152Yml() (*asset, error) {
	bytes, err := residualnet152YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "residualNet152.yml", size: 1936, mode: os.FileMode(420), modTime: time.Unix(1497484470, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeeznetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x49\xcf\xdb\x36\x10\xbd\xeb\x57\x0c\x60\x04\x68\x01\x5b\x92\xf3\x2d\x29\x74\x28\x50\xe4\x94\x43\x7c\x68\x7b\x28\x50\x14\xc6\x98\x1a\x59\x4c\xb8\x85\x1c\x79\xc9\xa1\xbf\xbd\x18\x4a\x96\x9c\xe6\x4b\xe2\x83\x41\x72\xde\x2c\x7c\x7c\x33\x72\x68\xa9\x81\x3f\x3e\x0d\x44\x9f\x69\x47\x0c\x2b\x90\x23\xf0\x1d\x5c\xfd\x10\xc1\xfa\x96\x4c\xd1\x45\xb4\x74\xf6\xf1\x63\x53\x00\x8c\x2e\xef\xff\x1a\xd1\xb3\x09\x3a\x1f\x81\x7b\x9a\x5c\x00\x4e\x14\x93\xf6\xae\x81\x7f\xeb\x72\xfb\x05\x72\xb2\x80\xf2\x8e\x23\x6a\xc7\xc5\x8c\xdd\x96\x35\xac\x66\x80\x76\x9d\x8f\x16\x79\x5c\x43\x22\x8b\x8e\xb5\x9a\xed\xa3\xb5\x90\x38\xa8\x1d\xc5\x06\x56\x30\x6f\x12\x0c\x89\x5a\x60\x0f\x81\xa2\x20\xc7\xca\x20\x44\x6a\xb5\x92\x98\x05\x2c\xbf\x15\xd8\xc1\xb0\x0e\x86\x20\x18\x64\xc1\x27\x50\xe8\xe0\x40\x90\x02\x29\xdd\x69\x6a\x0b\x00\xb4\xed\xf3\x63\x93\x3d\x8f\x61\x68\x20\xa2\x0e\xd1\x7f\x20\xc5\x95\xc2\x68\xcd\xc6\x5e\x1c\x71\x93\x61\x1b\x15\x86\x8c\x54\x3f\x44\x1e\x33\x32\x04\xf5\xfc\x68\xa8\xf9\xa1\xd3\x04\x9c\xdc\xbe\x5f\xca\x3d\xb6\xa5\xa4\xa2\x0e\x9c\xb9\xfe\xb5\x80\xdb\xcb\x3b\x62\x40\xd5\x6b\x3a\x51\x82\xa4\xad\x36\x18\x21\x52\x1a\x0c\x27\x61\xf0\x37\x43\x97\x1d\xf1\x1a\x90\xe1\xa9\xbe\x40\x47\x67\x8a\x10\x50\x9e\x94\x85\x6a\x74\x2d\x6c\xab\xa7\xba\xe6\x3e\x8b\x20\xe9\xcf\x54\x4a\x7c\x8b\xc6\x8c\xc4\x27\xc0\x28\xea\x88\x04\x1d\x61\xd2\x07\x43\x12\xba\xa5\x60\xfc\x15\xbc\x83\x1e\x63\x7b\x16\xcc\x59\x73\x0f\x46\x5b\xcd\xd4\x82\x25\xeb\xe3\x75\x0d\x91\x3e\x0d\x3a\x12\x18\x4a\xa9\x00\x50\xde\xda\xc1\x69\x35\x8a\xa3\x1d\xa2\x76\x47\x68\x75\xe2\xa8\x0f\x83\xf8\x65\x65\x69\x77\x5c\xe7\xda\x24\xac\x24\xa5\x98\x73\xce\x38\xd9\x29\xa3\xc9\x71\x2a\x17\x3a\x76\xf7\x74\x3c\xbd\x29\x9f\x5e\xe5\x20\xbf\xd4\xe5\xc3\x2b\x60\x1f\x36\xdb\xbc\x97\xd5\x13\xa0\x1a\x22\x2a\xce\x57\x78\x67\xf1\x28\xde\x65\x11\xa9\xa3\x48\x4e\x51\x12\x51\x2e\xbb\xac\x47\x0c\xc2\x59\x05\x67\x3a\x24\xcd\x24\x4b\x62\x55\x96\x30\xbe\xcf\x41\xee\x72\xdf\x4a\x1b\xe8\x99\x43\x6a\xaa\x0a\xe3\x45\x9f\x4a\x1f\x8f\x55\x68\xbb\x6a\xfb\x5c\xbf\x2e\xeb\x37\x0f\xcf\xf5\xe9\xb1\x0c\x6d\x57\xac\xc0\x68\x45\x2e\xe5\x06\x5e\x22\x4c\x87\x0d\xbc\x7f\xf7\x67\xb1\x02\xed\xc2\x30\xbe\xeb\x02\x19\xcf\x44\x79\x2b\xe8\x74\x4c\x3c\xa2\x80\xaf\x81\xbe\x6a\xed\x4d\x3e\x6e\x40\xcb\x75\x8b\xb1\x7d\xee\xa4\x75\x4b\x7e\x17\x27\x83\xbe\x50\x9f\x00\xc6\x14\x4b\x94\x45\x50\x42\x5a\x4e\xbd\x1c\x4d\xdd\xda\x6a\x4b\x4e\xba\x3f\x35\xf0\xf7\x76\x0d\x0f\x6b\x78\xfd\xfa\x31\xff\xfd\x53\xf8\x81\xc3\xc0\xe3\x2d\x24\x41\x0e\x31\x55\x33\xda\x0a\x98\x6a\xef\x08\x79\x88\x94\xa1\xf8\x52\xf5\x23\x7e\x29\xa0\x78\xe1\x02\x13\xc6\xe0\x21\xf3\x72\x57\xff\xc4\xca\x4b\x77\x98\x32\xa7\xfd\x10\x4d\x93\x5f\xb6\xa9\xaa\x16\x19\xcb\xd6\x1a\x55\x5a\x53\xe5\xc6\xad\xc6\xae\xa9\x32\x3d\xb2\x4f\x57\x97\x88\x4b\xbe\x70\x91\x4d\xc2\xd1\x6d\x34\xa5\x69\xb8\x1d\x23\x86\x3e\x8b\xf3\x4c\xfa\xd8\x73\x92\x2e\xf6\x43\x54\x24\xb9\x0f\x98\xe8\x3b\x59\xff\x9f\x6f\x9e\x0d\x55\x01\x63\xe4\x7d\x40\xee\x1b\x58\x2c\xfb\xd3\xb6\xdc\x6e\xd2\xd5\x1e\xbc\x29\x3f\xa4\x3c\x53\xa7\xcc\xdf\xc0\xd6\x75\x5d\x97\x99\x11\xa9\x48\xa7\x3d\x46\xd5\xeb\x93\xbc\x08\x9a\x44\xb0\x02\xdd\x41\x92\x59\xc3\x3d\xb9\xcc\xf2\xad\x6c\xd0\x09\x10\x64\xc1\x1e\xd0\xc1\xe4\x79\x3f\xc6\xef\xe6\xb9\x78\x2e\x45\xdf\x73\x32\x1e\xe4\xf0\x2d\x39\x2f\x53\xa0\xff\x56\x94\x4e\x1b\xca\x9f\xbc\x74\xd3\xc5\xd7\x14\xcb\xbc\xd2\x63\xa9\xb7\x92\x90\xa7\x01\x93\x95\x4c\x17\x8e\x08\x8e\x38\x7f\xfe\x16\x5b\x01\xf0\x51\xbb\xb6\x81\xb7\xbb\xdd\x54\xb1\xec\x25\x93\xa3\x21\xa2\x99\x7d\x7e\x7a\xbb\xdb\xad\xe1\x77\xf9\x2b\xcb\xf2\x67\x51\xf1\x34\xdf\xf6\xf2\x86\x89\xb8\x99\x87\x8f\x34\xe3\x78\x36\x7f\x01\x73\x03\x4f\x0e\x05\x80\x45\xa7\x3b\x4a\xbc\xc7\x81\x7b\x1f\x1b\xc0\x43\x3b\x98\xb6\xf8\x2f\x00\x00\xff\xff\x1d\x3c\xd7\xf1\x0e\x08\x00\x00"

func squeeznetYmlBytes() ([]byte, error) {
	return bindataRead(
		_squeeznetYml,
		"squeeznet.yml",
	)
}

func squeeznetYml() (*asset, error) {
	bytes, err := squeeznetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "squeeznet.yml", size: 2062, mode: os.FileMode(420), modTime: time.Unix(1497484495, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg16Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x8b\x23\x37\x10\xbd\xf7\xaf\x78\x60\x02\x09\x8c\xbb\xed\x99\xb1\x49\xfa\x10\x08\x7b\x58\xf6\xb0\x73\x08\x21\x04\x42\x18\x64\x75\x75\x5b\xbb\x6a\x49\x48\xd5\x9e\x99\x4b\x7e\x7b\x28\xa9\xed\xf6\x64\x67\x77\x7d\x30\x52\xd5\xab\xaa\xa7\xfa\x6a\xa7\x46\x6a\xf1\xe7\xfb\xf7\xdb\x3d\x56\x90\x1b\x7c\x8f\x17\x3f\x45\x8c\xbe\x23\x5b\xf5\x51\x8d\xf4\xe4\xe3\xe7\xb6\x02\x0a\xfa\xe3\x5f\x0f\xc4\x58\xe1\xa2\x42\xef\x23\xf8\x48\xb3\x09\x70\xa2\x98\x8c\x77\x2d\xfe\xdd\xd4\xdb\x57\xc8\x59\x03\xed\x1d\x47\x65\x1c\x57\x17\xec\xb6\xde\x60\x75\x01\x18\xd7\xfb\x38\x2a\x2e\x67\x24\x1a\x95\x63\xa3\x2f\xfa\xa2\xad\xc4\x8f\x32\x8e\x62\x8b\x15\x2e\x97\x84\x29\x51\x07\xf6\x08\x14\x05\x59\x98\x21\x44\xea\x8c\x16\x9f\x15\x96\xdf\x0a\xe3\x64\xd9\x04\x4b\x08\x56\xb1\xe0\x13\xb4\x72\x38\x10\x52\x20\x6d\x7a\x43\x5d\x05\xa8\xb1\xdb\xdf\xb7\xd9\x72\x08\x53\x8b\xa8\x4c\x88\xfe\x13\x69\x6e\xb4\x8a\xa3\x5d\x8f\xcf\x8e\xb8\xcd\xb0\xb5\x0e\x53\x46\xea\xef\x22\x87\x8c\x0c\x41\xef\xef\x2d\xb5\xdf\x35\x9a\x81\xb3\xd9\xb7\xa9\x5c\x63\x3b\x4a\x3a\x9a\xc0\x39\xd7\xbf\x56\xc0\x6f\x0e\x66\x54\x03\xad\xb5\x55\x29\x99\xde\xe8\x92\x6d\xed\xdd\xc9\xdb\x49\xce\xca\xc2\x11\x4b\xe1\xea\x0a\xd2\x25\x92\xd7\x04\x75\x96\xe2\xc9\xf0\x11\xdb\x3d\xac\x7a\x91\xac\xfb\x1e\x77\xcf\x77\xd7\x1e\xd0\x1b\xcb\x14\xd3\xd9\x5e\xe9\xa3\xa1\x13\x25\xdc\xee\xea\xdd\x0f\x60\x1f\xd6\x5b\x50\x8c\x3e\x42\xb9\x0e\x3f\xd7\x9b\x22\xdc\xcd\x42\xef\x72\x63\x7d\x10\xa2\xd2\x75\xfa\xa8\xac\x25\x37\x10\x3a\xc5\x2a\x11\x4b\x73\xdc\x6e\xb6\xbb\xba\x8a\xd4\x53\x24\xa7\x29\x49\x2f\x2c\xb7\xdc\x06\x2a\x08\xbf\x06\x4f\x74\x48\x86\x49\x8e\xc4\xba\xae\x51\xd2\x72\x30\x6e\x78\xd5\xc1\x6b\x1c\x99\x43\x6a\x9b\x46\xc5\x67\x73\xaa\x7d\x1c\x9a\xd0\xf5\xcd\xf6\x7e\xf3\x4b\xbd\xdd\xed\xf6\xa7\x7d\x1d\xba\xbe\x5a\xc1\x1a\x4d\x2e\xe5\xb1\x59\x1c\xcc\xc2\x16\x1f\x3f\xfc\x51\xad\x60\x5c\x98\x38\x13\x59\x20\x45\x26\xf5\x5e\xa1\x37\x31\x71\x41\x81\x5f\x02\x7d\x31\x50\xeb\x2c\x6e\x4b\xc1\xaa\xd2\xb4\x57\x05\x3d\x07\xbf\xf2\x93\x41\xaf\x6a\x2e\x80\x12\x62\xf1\x12\x94\x4c\xa6\x14\x48\x72\x96\x43\x2f\xa2\x79\x46\x3a\x33\x92\x93\x99\x4b\x2d\xfe\xde\xde\xe0\xee\x06\xb7\xb7\xf7\xf9\xef\x9f\xca\x4f\x1c\x26\x2e\xaf\x90\x00\xd9\xc5\xcc\xa6\xe8\x2a\xcc\xdc\x7b\x52\x3c\x45\xca\x50\xf5\x16\xfb\x82\x5f\x08\x54\x6f\x3c\x60\xc6\x58\x75\xc8\x79\xb9\xe2\x3f\x67\xe5\xad\x37\xcc\x91\xd3\xe3\x14\x6d\x9b\x0b\xdb\x36\x8d\xf4\x4f\xdd\x8d\x56\xd7\xa3\x6d\xf2\xb8\x34\x39\xdb\xa9\xc9\xe9\x91\x7b\x7a\x71\x89\xb8\xe6\x67\xae\xb2\x4a\x72\x74\x5e\x08\x69\x5e\x29\x43\x54\xe1\x98\x7b\xf7\x89\xcc\x70\xe4\x84\x48\xc9\x4f\x51\x93\xc4\x3e\xa8\x44\xdf\x88\xfa\xbf\x78\xa7\x61\x68\x2a\x14\x97\x8f\x41\xf1\xb1\xc5\x69\x18\xb6\xfb\x75\x7a\x19\x0f\xde\xd6\x9f\x52\x5e\x5c\x73\xa0\x57\x88\xcd\x66\xb3\xa9\xf3\xb3\x25\xac\x49\x8f\x2a\xea\xa3\x39\x49\xda\x95\x4d\x84\x15\x4c\x8f\x44\x7c\x23\x59\x2c\x33\x75\xe6\x06\x23\x13\x2d\x07\xf6\x50\x0e\xb3\xe5\xf5\x86\xbc\x5a\x95\x62\xb9\x10\xbc\x7e\x78\x11\x64\xf7\x1d\x39\xcf\x24\xe7\xaf\x78\xe9\x8d\xa5\xfc\x35\x49\xe7\xe2\x7f\x99\x47\xd9\x2d\xa6\x50\x3d\x53\x52\xcc\xd1\x1c\x26\x2e\x23\x4e\xcf\x1c\x97\x55\xb4\xe8\x2a\xe0\xb3\x71\x5d\x8b\x77\x0f\x0f\x33\x63\xb9\x4b\x24\x47\x53\x5c\x96\x1a\x7e\x7c\xf7\xf0\x70\x83\xdf\xe5\xaf\xae\xeb\x9f\xa4\x55\xe5\xa3\x64\xdc\xf0\x38\xaf\x97\x76\x59\x3d\xab\xcb\xca\x39\x7f\x5c\xf2\x94\xce\x06\x15\x30\x2a\x67\x7a\x4a\xfc\xa8\x26\x3e\xfa\xd8\x42\x1d\xba\xc9\x76\xd5\x7f\x01\x00\x00\xff\xff\xe7\x85\xd4\x80\x64\x07\x00\x00"

func vgg16YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg16Yml,
		"vgg16.yml",
	)
}

func vgg16Yml() (*asset, error) {
	bytes, err := vgg16YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg16.yml", size: 1892, mode: os.FileMode(420), modTime: time.Unix(1497484499, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x8b\x23\x37\x10\xbd\xf7\xaf\x78\x60\x02\x09\x8c\xbb\xed\xd9\xf1\x90\xe9\x43\x20\xec\x61\xd9\xc3\xce\x21\x84\x10\x08\x61\x90\xd5\xd5\x6d\xed\xaa\x25\x21\x55\x7b\xc6\x97\xfc\xf6\x50\x52\xdb\xed\xc9\x4e\x76\x7d\x30\x52\xd5\xab\xaa\xa7\xfa\x6a\xa7\x46\x6a\xf1\xc7\x87\x0f\xdb\x07\xac\x20\x37\xf8\x1e\x27\x3f\x45\x8c\xbe\x23\x5b\xf5\x51\x8d\xf4\xec\xe3\x97\xb6\x02\x0a\xfa\xd3\x9f\x8f\xc4\x58\xe1\xa2\x42\xef\x23\xf8\x40\xb3\x09\x70\xa4\x98\x8c\x77\x2d\xfe\xd9\xd4\xdb\x57\xc8\x59\x03\xed\x1d\x47\x65\x1c\x57\x17\xec\xb6\xde\x60\x75\x01\x18\xd7\xfb\x38\x2a\x2e\x67\x24\x1a\x95\x63\xa3\x2f\xfa\xa2\xad\xc4\x8f\x32\x8e\x62\x8b\x15\x2e\x97\x84\x29\x51\x07\xf6\x08\x14\x05\x59\x98\x21\x44\xea\x8c\x16\x9f\x15\x96\xdf\x0a\xe3\x64\xd9\x04\x4b\x08\x56\xb1\xe0\x13\xb4\x72\xd8\x13\x52\x20\x6d\x7a\x43\x5d\x05\xa8\xb1\xbb\xbf\x6b\xb3\xe5\x10\xa6\x16\x51\x99\x10\xfd\x67\xd2\xdc\x68\x15\x47\xbb\x1e\x5f\x1c\x71\x9b\x61\x6b\x1d\xa6\x8c\xd4\xdf\x45\x0e\x19\x19\x82\xbe\xbf\xb3\xd4\x7e\xd7\x68\x06\xce\x66\xdf\xa6\x72\x8d\xed\x28\xe9\x68\x02\xe7\x5c\xff\x52\x01\xbf\x3a\x98\x51\x0d\xb4\xd6\x56\xa5\x64\x7a\xa3\x4b\xb6\xb5\x77\x47\x6f\x27\x39\x2b\x0b\x47\x2c\x85\xab\x2b\x48\x97\x48\x5e\x13\xd4\x59\x8a\x67\xc3\x07\x6c\x1f\x60\xd5\x49\xb2\xee\x7b\xbc\x7b\x79\x77\xed\x01\xbd\xb1\x4c\x31\x9d\xed\x95\x3e\x18\x3a\x52\xc2\xed\xae\xde\xfd\x00\xf6\x61\xbd\x05\xc5\xe8\x23\x94\xeb\xf0\x73\xbd\x29\xc2\xdd\x2c\xf4\x2e\x37\xd6\x47\x21\x2a\x5d\xa7\x0f\xca\x5a\x72\x03\xa1\x53\xac\x12\xb1\x34\xc7\xed\x66\xbb\xab\xab\x48\x3d\x45\x72\x9a\x92\xf4\xc2\x72\xcb\x6d\xa0\x82\xf0\x6b\xf0\x4c\xfb\x64\x98\xe4\x48\xac\xeb\x1a\x25\x2d\x7b\xe3\x86\x57\x1d\xbc\xc6\x81\x39\xa4\xb6\x69\x54\x7c\x31\xc7\xda\xc7\xa1\x09\x5d\xdf\x6c\xef\x36\x0f\xf5\x76\xb7\xbb\x3f\xde\xd7\xa1\xeb\xab\x15\xac\xd1\xe4\x52\x1e\x9b\xc5\xc1\x2c\x6c\xf1\xe9\xe3\xef\xd5\x0a\xc6\x85\x89\x33\x91\x05\x52\x64\x52\xef\x15\x7a\x13\x13\x17\x14\xf8\x14\xe8\xab\x81\x5a\x67\x71\x5b\x0a\x56\x95\xa6\xbd\x2a\xe8\x39\xf8\x95\x9f\x0c\x7a\x55\x73\x01\x94\x10\x8b\x97\xa0\x64\x32\xa5\x40\x92\xb3\x1c\x7a\x11\xcd\x33\xd2\x99\x91\x9c\xcc\x5c\x6a\xf1\xd7\xf6\x06\xef\x6e\x70\x7b\x7b\x97\xff\xfe\xae\xfc\xc4\x61\xe2\xf2\x0a\x09\x90\x5d\xcc\x6c\x8a\xae\xc2\xcc\xbd\x27\xc5\x53\xa4\x0c\x55\x6f\xb1\x2f\xf8\x85\x40\xf5\xc6\x03\x66\x8c\x55\xfb\x9c\x97\x2b\xfe\x73\x56\xde\x7a\xc3\x1c\x39\x3d\x4d\xd1\xb6\xb9\xb0\x6d\xd3\x48\xff\xd4\xdd\x68\x75\x3d\xda\x26\x8f\x4b\x93\xb3\x9d\x9a\x9c\x1e\xb9\xa7\x93\x4b\xc4\x35\xbf\x70\x95\x55\x92\xa3\xf3\x42\x48\xf3\x4a\x19\xa2\x0a\x87\xdc\xbb\xcf\x64\x86\x03\x27\x44\x4a\x7e\x8a\x9a\x24\xf6\x5e\x25\xfa\x46\xd4\xff\xc4\x3b\x0e\x43\x53\xa1\xb8\x7c\x0a\x8a\x0f\x2d\x8e\xc3\xb0\x7d\x58\xa7\xd3\xb8\xf7\xb6\xfe\x9c\xf2\xe2\x9a\x03\xbd\x42\x6c\x36\x9b\x4d\x9d\x9f\x2d\x61\x4d\x7a\x52\x51\x1f\xcc\x51\xd2\xae\x6c\x22\xac\x60\x7a\x24\xe2\x1b\xc9\x62\x99\xa9\x33\x37\x18\x99\x68\x39\xb0\x87\x72\x98\x2d\xaf\x37\xe4\xd5\xaa\x14\xcb\x85\xe0\xf5\xc3\x8b\x20\xbb\xef\xc8\x79\x26\x39\xff\x8f\x97\xde\x58\xca\x5f\x93\x74\x2e\xfe\xd7\x79\x94\xdd\x62\x0a\xd5\x33\x25\xc5\x1c\xcd\x7e\xe2\x32\xe2\xf4\xc2\x71\x59\x45\x8b\xae\x02\xbe\x18\xd7\xb5\x78\xff\xf8\x38\x33\x96\xbb\x44\x72\x34\xc5\x65\xa9\xe1\xc7\xf7\x8f\x8f\x37\xf8\x4d\xfe\xea\xba\xfe\x49\x5a\x55\x3e\x4a\xc6\x0d\x4f\xf3\x7a\x69\x97\xd5\xb3\xba\xac\x9c\xf3\xc7\x25\x4f\xe9\x6c\x50\x01\xa3\x72\xa6\xa7\xc4\x4f\x6a\xe2\x83\x8f\x2d\xd4\xbe\x9b\x6c\x57\xfd\x1b\x00\x00\xff\xff\xc0\x26\x9b\xae\x64\x07\x00\x00"

func vgg19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg19Yml,
		"vgg19.yml",
	)
}

func vgg19Yml() (*asset, error) {
	bytes, err := vgg19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg19.yml", size: 1892, mode: os.FileMode(420), modTime: time.Unix(1497484502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"ResNeXt101.yml": resnext101Yml,
	"ResNeXt50.yml": resnext50Yml,
	"ResidualNet101.yml": residualnet101Yml,
	"ResidualNet18.yml": residualnet18Yml,
	"ResidualNet200.yml": residualnet200Yml,
	"ResidualNet34.yml": residualnet34Yml,
	"ResidualNet50.yml": residualnet50Yml,
	"Resnet152_11k.yml": resnet152_11kYml,
	"caffenet.yml": caffenetYml,
	"inceptionv3.yml": inceptionv3Yml,
	"locationnet.yml": locationnetYml,
	"nin.yml": ninYml,
	"residualNet152.yml": residualnet152Yml,
	"squeeznet.yml": squeeznetYml,
	"vgg16.yml": vgg16Yml,
	"vgg19.yml": vgg19Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"ResNeXt101.yml": &bintree{resnext101Yml, map[string]*bintree{}},
	"ResNeXt50.yml": &bintree{resnext50Yml, map[string]*bintree{}},
	"ResidualNet101.yml": &bintree{residualnet101Yml, map[string]*bintree{}},
	"ResidualNet18.yml": &bintree{residualnet18Yml, map[string]*bintree{}},
	"ResidualNet200.yml": &bintree{residualnet200Yml, map[string]*bintree{}},
	"ResidualNet34.yml": &bintree{residualnet34Yml, map[string]*bintree{}},
	"ResidualNet50.yml": &bintree{residualnet50Yml, map[string]*bintree{}},
	"Resnet152_11k.yml": &bintree{resnet152_11kYml, map[string]*bintree{}},
	"caffenet.yml": &bintree{caffenetYml, map[string]*bintree{}},
	"inceptionv3.yml": &bintree{inceptionv3Yml, map[string]*bintree{}},
	"locationnet.yml": &bintree{locationnetYml, map[string]*bintree{}},
	"nin.yml": &bintree{ninYml, map[string]*bintree{}},
	"residualNet152.yml": &bintree{residualnet152Yml, map[string]*bintree{}},
	"squeeznet.yml": &bintree{squeeznetYml, map[string]*bintree{}},
	"vgg16.yml": &bintree{vgg16Yml, map[string]*bintree{}},
	"vgg19.yml": &bintree{vgg19Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

