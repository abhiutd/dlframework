// Code generated by go-bindata.
// sources:
// frameworks/mxnet/builtin_models/README.md
// frameworks/mxnet/builtin_models/ResNeXt101.yml
// frameworks/mxnet/builtin_models/ResNeXt50.yml
// frameworks/mxnet/builtin_models/ResidualNet101.yml
// frameworks/mxnet/builtin_models/ResidualNet18.yml
// frameworks/mxnet/builtin_models/ResidualNet200.yml
// frameworks/mxnet/builtin_models/ResidualNet34.yml
// frameworks/mxnet/builtin_models/ResidualNet50.yml
// frameworks/mxnet/builtin_models/Resnet152_11k.yml
// frameworks/mxnet/builtin_models/caffenet.yml
// frameworks/mxnet/builtin_models/inceptionv3.yml
// frameworks/mxnet/builtin_models/locationnet.yml
// frameworks/mxnet/builtin_models/nin.yml
// frameworks/mxnet/builtin_models/residualNet152.yml
// frameworks/mxnet/builtin_models/squeeznet.yml
// frameworks/mxnet/builtin_models/vgg16.yml
// frameworks/mxnet/builtin_models/vgg19.yml
// DO NOT EDIT!

package mxnet

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xcb\xc1\x09\x03\x21\x10\x05\xd0\xbb\x55\x7c\xc8\x25\xb9\x58\x4c\x1a\xc8\x98\x75\x56\x06\xf4\x2b\x3a\xc2\x96\xbf\xb0\x05\xbc\x17\xfe\xdb\xaa\x1b\x7f\xad\x67\xad\x2b\x84\xef\x26\xa4\x74\x14\xa5\xce\xe4\x2a\x30\x42\xda\x45\x75\xc1\x5b\x62\x94\x0f\xd2\xe9\x3a\xb1\x47\x4e\x6e\x2c\x78\x28\xb2\xae\x63\xda\x70\xeb\x5c\xf1\x0e\x00\x00\xff\xff\x9f\xd3\x11\xba\x58\x00\x00\x00"

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 88, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnext101Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x8f\xdb\x36\x13\xbe\xeb\x57\x0c\x60\x04\x78\x5f\xc0\x96\xac\xcd\xee\x1e\x74\xe8\x25\xa7\xa0\x88\x0f\x41\x0e\x01\x8a\xc2\x18\x53\x23\x6b\x12\x8a\x24\x38\xa3\x5d\xbb\xbf\xbe\x20\x29\x7f\x34\xdd\x36\x40\x7d\x30\xc8\xe1\x33\x9c\x87\xcf\x7c\xc8\xe1\x44\x1d\x7c\x26\xd9\xd1\x57\x6d\xb7\x2d\xac\x20\x99\xc0\x0f\x70\xf6\x73\x84\xc9\xf7\x64\xab\x21\xe2\x44\xaf\x3e\x7e\xef\xe0\xd3\xd7\x1d\x29\xac\xe0\x6a\x82\xc1\x47\xd0\x91\x16\xe8\x0b\x45\x61\xef\x3a\x68\xeb\x2d\xac\x60\xd9\x02\xbb\xc1\xc7\x09\xb5\xac\x41\x68\x42\xa7\x6c\xae\xe7\xe5\xb4\x32\xde\x29\xb2\xa3\xd8\xc1\x0a\xae\x1b\x81\x59\xa8\x07\xf5\x10\x28\x26\x64\x89\x05\x21\x52\xcf\x26\xdd\x59\xc1\xed\xb7\x82\x69\xb6\xca\xc1\x12\x04\x8b\x9a\xf0\x02\x06\x1d\x1c\x08\x24\x90\xe1\x81\xa9\xaf\x00\x70\xea\x9f\x1f\xbb\xec\x79\x0c\x73\x07\x11\x39\x44\xff\x8d\x8c\x36\x06\xe3\x64\x37\xd3\xc9\x91\x76\x19\xb6\x31\x61\xce\x48\xf3\x53\xe4\x31\x23\x43\x30\xcf\x8f\x96\xba\x9f\x3a\x2d\xc0\xc5\xed\xdf\xa9\xdc\x63\x7b\x12\x13\x39\x68\xd6\xfa\x97\x0a\x2e\x39\x04\x16\x40\x10\x9e\x82\xa5\x35\x8c\x7c\x1c\xed\x39\xc9\x35\x5b\x8c\xfc\x07\xf5\xe0\x48\x73\xda\x30\x9a\x91\x95\x8c\xce\x91\x72\x0e\x79\xc2\x23\x81\xb1\x28\xc2\x03\x9b\x9c\xab\xba\x02\xf8\x32\xb2\x5c\xbd\x8c\x77\xc2\xa2\x92\x0a\x24\x95\x8b\xc5\x33\x45\xa9\x6f\xf1\x93\x11\xcd\xc8\xf4\x42\x02\x0f\x6d\xfd\xf0\x0e\xd0\xf5\xf0\x54\x3f\xbf\x03\xf5\x61\xd3\xe6\x6d\x5a\x3d\x01\xc5\xe8\x23\x78\x07\x1f\x53\xe8\x1d\x69\xfb\x6b\x5d\x45\x1a\x28\x92\x33\x24\xa9\x06\x6e\xbb\x9c\x7e\x0c\xa9\x1a\x1a\x78\xa5\x83\xb0\x52\x5a\x92\x9a\xba\x86\x22\xc7\x81\xdd\xf1\xae\x16\x01\x36\x30\xaa\x06\xe9\x9a\x06\xe3\x89\x5f\x6a\x1f\x8f\x4d\xe8\x87\xa6\x7d\x6e\xdb\x7a\xfb\xf4\xf8\xbe\xad\x43\x3f\x54\x2b\xb0\x6c\xc8\x49\xae\xfb\x9b\xff\x62\xec\xe0\xd3\xc7\x2f\xd5\x0a\xd8\x85\x59\x33\x8f\x2b\x04\xaa\x62\x4c\x79\x5e\xc1\xc0\x51\xb4\xc0\x40\xcf\x81\x7e\x68\x8d\x44\x27\x99\xbb\x22\x75\x55\x8a\xf5\x2e\x91\x97\xe8\x77\xf7\x64\xd0\x5f\x72\x9d\x00\x25\xc4\xed\x96\x80\xa9\x1b\x95\x62\xd6\x2c\x87\xbe\x99\x96\xde\xe8\x79\x22\x97\x7a\x4d\x3a\xf8\xad\x5d\xc3\xfb\x35\x3c\x3c\x3c\xe6\xbf\xdf\x2b\x3f\x6b\x98\xb5\xbc\x22\x05\xc8\x57\x2c\x6c\xca\x59\x05\x0b\xf7\x81\x30\x95\x4c\x86\xe2\x5b\xec\x0b\xfe\x46\xa0\x7a\xe3\x01\x0b\xc6\xe2\x21\xeb\x72\xc7\x7f\x51\xe5\x87\x37\x40\x36\x2f\xa1\x65\x3f\x47\xdb\xe5\xcc\x76\x4d\xd3\xa3\x62\xdd\x4f\xd6\xd4\x93\x6d\x72\x9f\x34\x59\x6e\x69\xb2\x3e\x69\x1f\x49\x1c\x9d\xb4\x91\xb3\x13\xd2\x5a\x4f\x5a\x65\x48\x12\xeb\x32\x11\x64\x49\xe8\x31\x62\x18\x73\x8d\xbe\x12\x1f\x47\x15\x88\x24\x7e\x8e\x86\x92\x90\x07\x14\xfa\xaf\xd1\xdb\x6d\xbb\x29\xed\xd2\x54\x50\xe2\xec\x03\xea\xd8\xc1\x82\xd8\x24\x84\x9c\xa7\x83\xb7\xf5\x37\xc9\x43\x6d\xe1\xf0\x06\x6e\xbb\xdd\x6e\xeb\x2c\x50\xe2\xc5\xb2\xcf\xfd\xfc\x92\x12\x84\x56\x08\x56\xc0\x03\x08\xe9\x3a\xe9\xed\xb2\xe8\x17\xf2\x65\x44\xa4\x85\x7a\x40\x07\x8b\xe7\xfd\x0c\xbd\x1b\xa6\xc9\xf3\x46\xf6\x5e\x99\x62\xc8\xd7\xf7\xe4\xbc\x52\xc6\xfe\xc3\x35\x03\x5b\xca\x9f\x16\xb9\xd4\xc9\xdf\x95\x7e\x65\x1d\xb9\x70\xbd\x70\x42\xd5\xc8\x87\x59\xcb\x34\xa0\x93\x46\xbc\x4d\xb0\xeb\x59\x0a\xfa\x9d\x5d\xdf\xc1\x87\xdd\x6e\xe1\x9c\xf6\x29\x94\xa3\x39\xa2\xbd\x3a\xfd\xef\xc3\x6e\xb7\x86\xcf\xe9\xaf\xae\xeb\xff\xa7\xb2\x8e\xc8\x8e\xdd\x71\x9f\x72\x29\xa4\xdd\x75\x1c\xa5\xee\x2c\xb6\xeb\x07\x28\x77\xf4\xe2\x50\x01\x4c\xe8\x78\x20\xd1\x3d\xce\x3a\xfa\xd8\x01\x1e\xfa\xd9\xf6\xd5\x9f\x01\x00\x00\xff\xff\x2f\x89\xad\x1d\x57\x07\x00\x00"

func resnext101YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnext101Yml,
		"ResNeXt101.yml",
	)
}

func resnext101Yml() (*asset, error) {
	bytes, err := resnext101YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResNeXt101.yml", size: 1879, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnext50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x60\x04\x68\x81\xb5\x24\x6f\xd6\x7b\xd0\xa1\x97\x9c\x82\x22\x3e\x04\x39\x04\x28\x0a\x63\x4c\x8d\xac\x49\x28\x92\xe0\x8c\x76\xed\xfe\xfa\x82\xa4\xfc\xd1\x24\x6d\x80\xfa\x60\x88\xc3\x37\x33\x4f\x6f\x3e\xe4\x70\xa2\x0e\x3e\x92\xec\xe8\xb3\x6e\x5b\x58\x41\xb2\x80\x1f\xe0\xec\xe7\x08\x93\xef\xc9\x56\x43\xc4\x89\x5e\x7d\xfc\xda\xc1\x87\xcf\x3b\x52\x58\xc1\xd5\x04\x83\x8f\xa0\x23\x2d\xd0\x17\x8a\xc2\xde\x75\xb0\xa9\x53\xb0\xe5\x08\xec\x06\x1f\x27\xd4\xf2\x0c\x42\x13\x3a\x65\x73\xbd\x2f\xb7\x95\xf1\x4e\x91\x1d\xc5\x0e\x56\x70\x3d\x08\xcc\x42\x3d\xa8\x87\x40\x31\x21\x4b\x2e\x08\x91\x7a\x36\x29\x66\x05\xb7\xdf\x0a\xa6\xd9\x2a\x07\x4b\x10\x2c\x6a\xc2\x0b\x18\x74\x70\x20\x90\x40\x86\x07\xa6\xbe\x02\xc0\xa9\x7f\x7e\xea\xb2\xe7\x31\xcc\x1d\x44\xe4\x10\xfd\x17\x32\xda\x18\x8c\x93\x5d\x4f\x27\x47\xda\x65\xd8\xda\x84\x39\x23\xcd\x4f\x91\xc7\x8c\x0c\xc1\x3c\x3f\x59\xea\x7e\xea\xb4\x00\x17\xb7\xff\xa6\x72\x8f\xed\x49\x4c\xe4\xa0\x59\xeb\xdf\x2a\xb8\x94\x10\x58\x00\x41\x78\x0a\x96\x1e\x60\xe4\xe3\x68\xcf\x49\xae\xd9\x62\xe4\xbf\xa8\x07\x47\x9a\xcb\x86\xd1\x8c\xac\x64\x74\x8e\x94\x6b\xc8\x13\x1e\x09\x8c\x45\x11\x1e\xd8\xe4\x5a\xd5\x15\xc0\xa7\x91\xe5\xea\x65\xbc\x13\x16\x95\xd4\x20\xdb\x16\x2c\x9e\x29\x4a\x7d\x4b\xbf\x6d\x01\xcd\xc8\xf4\x42\x02\x8f\x8f\xf5\xe3\x1b\x40\xd7\xc3\xb6\x7e\x7e\x03\xea\xc3\x7a\x03\x14\xa3\x8f\xe0\x1d\xbc\x4f\xe9\x76\xa4\x9b\xdf\xeb\x2a\xd2\x40\x91\x9c\x21\x49\x75\xbf\x9d\x72\xc9\x31\xa4\x0e\x68\xe0\x95\x0e\xc2\x4a\xe9\x91\xd4\xd4\x35\x14\x09\x0e\xec\x8e\x77\xfd\x07\xb0\x86\x51\x35\x48\xd7\x34\x18\x4f\xfc\x52\xfb\x78\x6c\x42\x3f\x34\x9b\xe7\xcd\xa6\x6e\xb7\x4f\x6f\x37\x75\xe8\x87\x6a\x05\x96\x0d\x39\xc9\xbd\x7e\xf3\x5f\x8c\x1d\x7c\x78\xff\xa9\x5a\x01\xbb\x30\x6b\xe6\x71\x85\x40\x55\x8c\xa9\xb6\x2b\x18\x38\x8a\x16\x18\xe8\x39\xd0\x37\xe3\x90\xe8\x24\x73\x57\xe4\xad\x4a\x83\xde\x15\xef\x92\xfd\x2e\x4e\x06\xfd\xa3\xbe\x09\x50\x52\xdc\xa2\x04\x4c\x13\xa8\x14\xb3\x66\x39\xf5\xcd\xb4\xcc\x43\xcf\x13\xb9\x34\x5f\xd2\xc1\x1f\x9b\x07\x78\xfb\x00\x8f\x8f\x4f\xf9\xef\xcf\xca\xcf\x1a\x66\x2d\x6f\x91\x12\xe4\x10\x0b\x9b\x72\x57\xc1\xc2\x7d\x20\x4c\x6d\x92\xa1\xf8\x23\xf6\x05\x7f\x23\x50\xfd\xe0\x05\x16\x8c\xc5\x43\xd6\xe5\x8e\xff\xa2\xca\x37\xef\x00\xd9\xbc\xa4\x96\xfd\x1c\x6d\x97\x2b\xdb\x35\x4d\x8f\x8a\x75\x3f\x59\x53\x4f\xb6\xc9\xb3\xd1\x64\xb9\xa5\xc9\xfa\xa4\x73\x24\x71\x74\xd2\x46\xce\x4e\x48\x6b\x3d\x69\x95\x21\x49\xac\xcb\x16\x90\xa5\xa0\xc7\x88\x61\xcc\x8d\xfa\x4a\x7c\x1c\x55\x20\x92\xf8\x39\x1a\x4a\x42\x1e\x50\xe8\xff\x66\xdf\xb6\xeb\x32\x22\x4d\x05\x25\xcd\x3e\xa0\x8e\x1d\x2c\x80\xf5\xb6\x5d\xcb\x79\x3a\x78\x5b\x7f\x91\xbc\xc6\x16\x06\xdf\xc3\xda\xb6\x6d\xeb\xac\x4e\x22\xc5\xb2\xcf\x03\xfc\x92\xaa\x83\x56\x08\x56\xc0\x03\x08\xe9\x43\x12\xdb\x65\xc5\x2f\xcc\xcb\x4e\x48\x0f\xea\x01\x1d\x2c\x9e\xf7\x4b\xf3\x6e\x7b\x26\xcf\x1b\xd5\x7b\x59\x8a\x21\x87\xef\xc9\x79\xa5\x8c\xfd\x97\x30\x03\x5b\xca\xdf\x12\xb9\x34\xc9\xf7\x32\xbf\xb2\x8e\x5c\xb8\x5e\x38\xa1\x6a\xe4\xc3\xac\x65\x15\xd0\x49\x23\xde\x56\xd6\xf5\x2e\x25\xfd\xca\xae\xef\xe0\xdd\x6e\xb7\x70\x4e\xe7\x94\xca\xd1\x1c\xd1\x5e\x9d\x7e\x79\xb7\xdb\x3d\xc0\xc7\xf4\x57\xd7\xf5\xaf\xa9\xa7\x23\xb2\x63\x77\xdc\xa7\x42\x0a\x69\x77\xdd\x45\x69\x34\x8b\xed\xfa\xc5\xc9\xe3\xbc\x38\x54\x00\x13\x3a\x1e\x48\x74\x8f\xb3\x8e\x3e\x76\x80\x87\x7e\xb6\xfd\xdf\x01\x00\x00\xff\xff\xb0\x7c\x58\xfc\x46\x07\x00\x00"

func resnext50YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnext50Yml,
		"ResNeXt50.yml",
	)
}

func resnext50Yml() (*asset, error) {
	bytes, err := resnext50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResNeXt50.yml", size: 1862, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet101Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8b\xe4\x36\x10\xbe\xfb\x57\x14\x34\x81\x04\xa6\xe5\xf6\xcc\xce\x26\xf8\x10\x08\x73\x1a\xc8\xf6\x61\xb2\x84\x40\x08\x43\x59\x2e\xb7\xb5\x2b\x4b\x42\x55\x9e\xc7\xbf\x0f\x7a\xf4\x23\xbb\x93\xdd\x3e\xb8\xad\xd2\x57\x55\x9f\xbe\xaa\x92\x1d\x2e\xd4\xc3\x03\xb1\x19\x57\xb4\x7b\x92\x6e\xd7\xc1\x06\x92\x19\xfc\x04\xaf\x7e\x8d\xb0\xf8\x91\x6c\x33\x45\x5c\xe8\xd9\xc7\xcf\x3d\x7c\xf8\x6b\x4f\x02\x1b\x38\x99\x60\xf2\x11\x64\xa6\x0a\x7d\xa2\xc8\xc6\xbb\x1e\x3a\xb5\x83\x0d\xd4\x25\x18\x37\xf9\xb8\xa0\x94\x77\x60\x5a\xd0\x89\xd1\xa7\xfd\xb2\xdb\x68\xef\x04\x8d\xa3\xd8\xc3\x06\x4e\x0b\x86\x95\x69\x04\xf1\x10\x28\x26\x64\xc9\x05\x21\xd2\x68\x74\x8a\xd9\xc0\xf9\xb7\x81\x65\xb5\x62\x82\x25\x08\x16\x25\xe1\x19\x34\x3a\x18\x08\x38\x90\x36\x93\xa1\xb1\x01\xc0\x65\x7c\xff\xae\xcf\x9e\x87\xb0\xf6\x10\xd1\x84\xe8\x3f\x91\x96\x56\x63\x5c\xec\x76\x79\x71\x24\x7d\x86\x6d\x75\x58\x33\x52\x7f\x17\x79\xc8\xc8\x10\xf4\xfb\x77\x96\xfa\xef\x3a\x55\x60\x75\xfb\x36\x95\x4b\xec\x48\xac\xa3\x09\x92\xb5\xfe\xb5\x01\xf8\xcd\x81\x59\xf0\x40\x5b\x6d\x91\xd9\x4c\x46\x17\xb5\x1d\x49\x2e\xd3\xb0\x1a\x2b\xa9\xae\x16\x5f\x93\xa4\x32\xa3\x80\x25\x8c\x0e\x62\x6d\x01\x98\x56\x97\xe5\x64\x78\x56\x51\x49\x81\x82\x71\x61\x15\x56\x0d\xc0\xc7\xd9\xf0\x29\xa0\xf6\x8e\x0d\x0b\xa7\x98\xa9\x73\x4a\x5c\x55\xa8\x90\x63\x5a\x06\x9b\x1b\x49\x66\x62\x3a\xba\x31\xa0\x9e\x0d\x3d\x11\xc3\x8d\xba\xfd\xf9\x07\xa0\x18\x7d\x84\x88\x42\xe0\x1d\xdc\xff\xfe\xc7\x9f\x0f\x77\xdb\xeb\x5d\x77\xab\x9a\x48\x13\x45\x72\x9a\x38\xb5\xc3\x79\x95\x3b\x01\x43\x3a\x45\x0b\xcf\x34\xb0\x11\x4a\xaf\x24\x5a\x29\x28\xca\x0c\xc6\x1d\x2e\xda\x12\x60\x0b\xb3\x48\xe0\xbe\x6d\x31\xbe\x98\x27\xe5\xe3\xa1\x0d\xe3\xd4\x76\xb7\xdd\xb5\xda\xdd\xdc\xfc\x72\xfb\xd4\xa9\x30\x4e\xcd\x06\xac\xd1\x89\x7f\xe5\x5e\x23\x54\x63\x0f\x1f\xee\x3f\x36\x9b\x2a\x4a\x62\x72\x82\x40\x53\x8c\xa9\xe8\x1b\x98\x4c\x64\x29\x30\x90\xd7\x40\x5f\xcc\x49\x22\x94\xcc\x7d\xa9\x5a\x53\x3a\xf7\xa2\xaa\xc7\xec\x17\x71\x32\xe8\x3f\x85\x4f\x80\x92\xe2\x1c\x25\x60\x1a\x4d\xa1\x98\x55\xcb\xa9\xcf\xa6\x3a\x28\xa3\x59\xc8\xa5\xc1\xe3\x1e\xfe\xee\xae\xe0\xe6\x0a\xae\xaf\xdf\xe5\xc7\x3f\x8d\x5f\x25\xac\x52\x4e\x91\x12\xe4\x10\x95\x4d\xd9\x6b\xa0\x72\x9f\x08\x65\x8d\x94\xa1\xf8\x16\xfb\x82\x3f\x13\x68\xde\x38\x40\xc5\x58\x1c\xb2\x2e\x17\xfc\xab\x2a\x5f\x9c\x01\xb2\xb9\xa6\xe6\xc7\x35\xda\x3e\xd7\xb6\x6f\xdb\x11\x05\xd5\xb8\x58\xad\x16\xdb\xe6\xa1\x69\xb3\xdc\xdc\x66\x7d\xd2\x3a\x12\xa7\x3f\x7e\x75\x4c\xa2\xe4\x45\x9a\x8c\x48\x5a\x1d\x6f\x07\xae\xf5\x3c\x44\x0c\x33\xa0\x1b\xe1\x99\xcc\x61\x16\x4e\x93\xe2\xd7\xa8\x29\xe9\x38\x20\xd3\x37\x92\xbf\x9d\xb6\xdb\x75\xdb\x32\x28\x6d\x03\x25\xc1\x63\x40\x99\x7b\x28\x80\x6d\x02\xf0\xeb\x32\x78\xab\x3e\x71\xbe\xd8\x6a\xee\xaf\x61\xbb\xdd\x6e\xa7\xb2\x2c\x89\x8e\xe1\x47\x8c\x7a\x36\x4f\xa9\x2c\x68\x99\x60\x03\x66\x02\x26\xb9\x4a\x2a\xbb\x2c\xf5\x91\x33\x18\x06\x84\xf4\x22\x1e\xd0\x41\xf5\xbc\xbc\x46\x2f\xee\xd3\xe4\x79\xa6\x7a\x29\x48\x31\xe4\xf0\x23\x39\x2f\x94\xb1\xff\x13\x66\x32\x96\xf2\xd7\x85\x8f\xdd\xf1\xb5\xc0\xcf\x46\x66\x53\xb8\x1e\x39\xa1\x48\x34\xc3\x2a\xe5\x16\xa0\x17\x89\x78\xba\x83\xce\x7b\x29\xe9\x67\xe3\xc6\x1e\xee\xf6\xfb\xca\x39\xad\x53\x2a\x47\x6b\x44\x7b\x72\xfa\xf1\x6e\xbf\xbf\x82\x87\xf4\x50\x4a\xfd\x94\x9a\x39\xa2\x71\xc6\x1d\x1e\x53\x09\x99\xa4\x87\xfb\x54\xb7\xf2\xa5\xab\xb6\xd3\x37\x28\xcf\x71\x75\x68\x00\x16\x74\x66\x22\x96\x47\x5c\x65\xf6\xb1\x07\x1c\xc6\xd5\x8e\xff\x06\x00\x00\xff\xff\x54\x10\x3c\x5e\x5d\x07\x00\x00"

func residualnet101YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet101Yml,
		"ResidualNet101.yml",
	)
}

func residualnet101Yml() (*asset, error) {
	bytes, err := residualnet101YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet101.yml", size: 1885, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet18Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x5b\x6f\xe4\x36\x0f\x7d\xf7\xaf\x20\x30\xf8\x80\xaf\x40\x46\x9e\xc9\x65\x1b\xf8\xa1\x40\x91\xa7\x00\xdd\x79\x48\x17\x45\x81\xa2\x08\x68\x99\x1e\x6b\x57\x96\x04\x91\x4e\x32\xff\xbe\xd0\x65\x2e\xdd\x4d\x77\xe7\xc1\x63\x51\x87\xe4\xd1\x21\x29\x3b\x9c\xa9\x83\x27\x62\x33\x2c\x68\x77\x24\xdb\x7b\x58\x41\xb2\x82\x1f\xe1\xe0\x97\x08\xb3\x1f\xc8\x36\x63\xc4\x99\x5e\x7d\xfc\xd2\xc1\xc7\x3f\x77\x24\xb0\x82\x93\x09\x46\x1f\x41\x26\xaa\xd0\x17\x8a\x6c\xbc\xeb\x60\xab\x36\xb0\x82\xba\x04\xe3\x46\x1f\x67\x94\xf2\x0e\x4c\x33\x3a\x31\xfa\xb4\x5f\x76\x1b\xed\x9d\xa0\x71\x14\x3b\x58\xc1\x69\xc1\xb0\x30\x0d\x20\x1e\x02\xc5\x84\x2c\xb9\x20\x44\x1a\x8c\x4e\x31\x1b\x38\xff\x56\x30\x2f\x56\x4c\xb0\x04\xc1\xa2\x24\x3c\x83\x46\x07\x3d\x01\x07\xd2\x66\x34\x34\x34\x00\x38\x0f\x1f\x6e\xbb\xec\xb9\x0f\x4b\x07\x11\x4d\x88\xfe\x33\x69\x69\x35\xc6\xd9\xae\xe7\x37\x47\xd2\x65\xd8\x5a\x87\x25\x23\xf5\x0f\x91\xfb\x8c\x0c\x41\x7f\xb8\xb5\xd4\xfd\xd0\xa9\x02\xab\xdb\xf7\xa9\x5c\x62\x07\x62\x1d\x4d\x90\xac\xf5\x2f\x0d\xc0\xaf\x0e\xcc\x8c\x7b\x5a\x6b\x8b\xcc\x66\x34\xba\xa8\xed\x48\x72\x99\xfa\xc5\x58\x49\x75\xb5\x78\x48\x92\xca\x84\x02\x96\x30\x3a\x88\xb5\x03\x60\x5c\x5c\x96\x93\xe1\x55\x45\x25\x05\x0a\xc6\x85\x45\x58\x35\x00\x9f\x26\xc3\xa7\x80\xda\x3b\x36\x2c\x9c\x62\x6e\xef\x6b\x58\x55\x98\x90\x63\x9a\x7b\x9b\xfb\x48\x26\x62\x3a\x7a\x31\xa0\x9e\x0c\xbd\x10\xc3\x8d\xba\xfb\xf9\x7f\x40\x31\xfa\x08\x11\x85\xc0\x3b\x78\xfc\xed\xf7\x3f\x9e\x1e\xd6\xd7\x9b\xed\x9d\x6a\x22\x8d\x14\xc9\x69\xe2\xd4\x0d\xe7\x55\x6e\x04\x0c\xe9\x10\x2d\xbc\x52\xcf\x46\x28\xbd\x92\x68\xa5\xa0\x08\xd3\x1b\xb7\xbf\xe8\x4a\x80\x35\x4c\x22\x81\xbb\xb6\xc5\xf8\x66\x5e\x94\x8f\xfb\x36\x0c\x63\xbb\xbd\xdb\x5e\xab\xcd\xcd\xcd\xfd\xdd\xcb\x56\x85\x61\x6c\x56\x60\x8d\x4e\xfc\x2b\xf7\x1a\xa1\x1a\x3b\xf8\xf8\xf8\xa9\x59\x55\x4d\x12\x93\x13\x04\x9a\x62\x4c\x35\x5f\xc1\x68\x22\x4b\x81\x81\x1c\x02\x7d\x35\x26\x89\x50\x32\x77\xa5\x68\x4d\x69\xdc\x8b\xa2\x1e\xb3\x5f\xc4\xc9\xa0\x7f\xd5\x3d\x01\x4a\x8a\x73\x94\x80\x69\x32\x85\x62\x56\x2d\xa7\x3e\x9b\xea\x9c\x0c\x66\x26\x97\xe6\x8e\x3b\xf8\x6b\x7b\x05\x37\x57\x70\x7d\x7d\x9b\x1f\x7f\x37\x7e\x91\xb0\x48\x39\x45\x4a\x90\x43\x54\x36\x65\xaf\x81\xca\x7d\x24\x94\x25\x52\x86\xe2\x7b\xec\x0b\xfe\x4c\xa0\x79\xe7\x00\x15\x63\xb1\xcf\xba\x5c\xf0\xaf\xaa\x7c\x75\x06\xc8\xe6\x9a\x9a\x9f\x97\x68\xbb\x5c\xdb\xae\x6d\x07\x14\x54\xc3\x6c\xb5\x9a\x6d\x9b\x67\xa6\xcd\x72\x73\x9b\xf5\x49\xeb\x48\x9c\xfe\xf8\xe0\x98\x44\xc9\x9b\x34\x19\x91\xb4\x3a\x5e\x0e\x5c\xeb\xb9\x8f\x18\x26\x40\x37\xc0\x2b\x99\xfd\x24\x9c\x06\xc5\x2f\x51\x53\xd2\xb1\x47\xa6\xef\x24\x7f\x3f\xed\xf6\x7e\x5d\xe6\xa4\x6d\xa0\xc4\x7f\x0e\x28\x53\x07\x65\x7f\xbd\xbd\x5f\xf3\x61\xee\xbd\x55\x9f\x39\xdf\x6a\x35\xf3\x37\xa8\xcd\x66\xb3\x51\x59\x93\xc4\xc5\xf0\x33\x46\x3d\x99\x97\x54\x13\xb4\x4c\xb0\x02\x33\x02\x93\x5c\x25\x89\x5d\xd6\xf9\x48\x18\x0c\x03\x42\x7a\x11\x0f\xe8\xa0\x7a\x5e\x5e\xa1\x17\x77\x69\xf2\x3c\x13\xbd\x54\xa3\x18\x72\xf8\x81\x9c\x17\xca\xd8\xff\x08\x33\x1a\x4b\xf9\xcb\xc2\xc7\xd6\xf8\x56\xdd\x57\x23\x93\x29\x5c\x8f\x9c\x50\x24\x9a\x7e\x91\x72\x05\xd0\x9b\x44\x3c\xdd\x3f\xe7\xbd\x94\xf4\x8b\x71\x43\x07\x0f\xbb\x5d\xe5\x9c\xd6\x29\x95\xa3\x25\xa2\x3d\x39\xfd\xff\x61\xb7\xbb\x82\xa7\xf4\x50\x4a\xfd\x94\x3a\x39\xa2\x71\xc6\xed\x9f\x53\xfd\x98\xa4\x83\xc7\x54\xb4\xf2\x95\xab\xb6\xd3\xf7\x27\x0f\x71\x75\x68\x00\x66\x74\x66\x24\x96\x67\x5c\x64\xf2\xb1\x03\xec\x87\xc5\x0e\xff\x04\x00\x00\xff\xff\x94\x14\x48\x07\x58\x07\x00\x00"

func residualnet18YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet18Yml,
		"ResidualNet18.yml",
	)
}

func residualnet18Yml() (*asset, error) {
	bytes, err := residualnet18YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet18.yml", size: 1880, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet200Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x6f\xe4\x36\x0c\xbd\xfb\x57\x10\x18\x14\x68\x81\x8c\x3c\x33\xd9\x6c\x0b\x1f\x0a\x14\x39\x05\xe8\xce\x21\x5d\x14\x05\x8a\x22\xa0\x65\x7a\xac\x5d\x59\x12\x44\x3a\xc9\xfc\xfb\x42\x1f\xf3\xd1\xdd\x74\x77\x0e\x1e\x8b\x7a\x24\x9f\x1e\x49\xd9\xe1\x4c\x1d\x3c\x12\x9b\x61\x41\xbb\x27\xd9\x6d\x36\xb0\x82\x64\x06\x3f\xc2\xd1\x2f\x11\x66\x3f\x90\x6d\xc6\x88\x33\xbd\xf8\xf8\xb9\x83\x0f\x7f\xed\x49\x60\x05\x67\x13\x8c\x3e\x82\x4c\x54\xa1\xcf\x14\xd9\x78\xd7\xc1\x56\xa5\x60\x75\x09\xc6\x8d\x3e\xce\x28\xe5\x1d\x98\x66\x74\x62\xf4\x79\xbf\xec\x36\xda\x3b\x41\xe3\x28\x76\xb0\x82\xf3\x82\x61\x61\x1a\x40\x3c\x04\x8a\x09\x59\x72\x41\x88\x34\x18\x9d\x62\x36\x70\xf9\xad\x60\x5e\xac\x98\x60\x09\x82\x45\x49\x78\x06\x8d\x0e\x7a\x02\x0e\xa4\xcd\x68\x68\x68\x00\x70\x1e\xde\xbf\xeb\xb2\xe7\x21\x2c\x1d\x44\x34\x21\xfa\x4f\xa4\xa5\xd5\x18\x67\xbb\x9e\x5f\x1d\x49\x97\x61\x6b\x1d\x96\x8c\xd4\xdf\x45\x1e\x32\x32\x04\xfd\xfe\x9d\xa5\xee\xbb\x4e\x15\x58\xdd\xbe\x4d\xe5\x1a\x3b\x10\xeb\x68\x82\x64\xad\x7f\x6d\x00\x7e\x73\x60\x66\x3c\xd0\x5a\x5b\x64\x36\xa3\xd1\x45\x6d\x47\x92\xcb\xd4\x2f\xc6\x4a\xaa\xab\xc5\x63\x92\x54\x26\x14\xb0\x84\xd1\x41\xac\x2d\x00\xe3\xe2\xb2\x9c\x0c\x2f\x2a\x2a\x29\x50\x30\x2e\x2c\xc2\xaa\x01\xf8\x38\x19\x3e\x07\xd4\xde\xb1\x61\xe1\x14\x33\x75\x4e\x89\xab\x0a\x15\x72\x4c\x73\x6f\x73\x23\xc9\x44\x4c\x27\x37\x06\xd4\x93\xa1\x67\x62\xb8\x55\x77\x3f\xff\x00\x14\xa3\x8f\x10\x51\x08\xbc\x83\x87\xdf\xff\xf8\xf3\xf1\x7e\xbd\xdb\x6c\xef\x54\x13\x69\xa4\x48\x4e\x13\xa7\x76\xb8\xac\x72\x27\x60\x48\xa7\x68\xe1\x85\x7a\x36\x42\xe9\x95\x44\x2b\x05\x45\x99\xde\xb8\xc3\x55\x5b\x02\xac\x61\x12\x09\xdc\xb5\x2d\xc6\x57\xf3\xac\x7c\x3c\xb4\x61\x18\xdb\xed\xdd\x76\xa7\x36\xb7\xb7\xbf\xdc\x3d\x6f\x55\x18\xc6\x66\x05\xd6\xe8\xc4\xbf\x72\xaf\x11\xaa\xb1\x83\x0f\x0f\x1f\x9b\x55\x15\x25\x31\x39\x43\xa0\x29\xc6\x54\xf4\x15\x8c\x26\xb2\x14\x18\xc8\x31\xd0\x17\x73\x92\x08\x25\x73\x57\xaa\xd6\x94\xce\xbd\xaa\xea\x29\xfb\x55\x9c\x0c\xfa\x4f\xe1\x13\xa0\xa4\xb8\x44\x09\x98\x46\x53\x28\x66\xd5\x72\xea\x8b\xa9\x0e\xca\x60\x66\x72\x69\xf0\xb8\x83\xbf\xb7\x37\x70\x7b\x03\xbb\xdd\xbb\xfc\xf8\xa7\xf1\x8b\x84\x45\xca\x29\x52\x82\x1c\xa2\xb2\x29\x7b\x0d\x54\xee\x23\xa1\x2c\x91\x32\x14\xdf\x62\x5f\xf0\x17\x02\xcd\x1b\x07\xa8\x18\x8b\x7d\xd6\xe5\x8a\x7f\x55\xe5\x8b\x33\x40\x36\xd7\xd4\xfc\xb4\x44\xdb\xe5\xda\x76\x6d\x3b\xa0\xa0\x1a\x66\xab\xd5\x6c\xdb\x3c\x34\x6d\x96\x9b\xdb\xac\x4f\x5a\x47\xe2\xf4\xc7\x47\xc7\x24\x4a\x5e\xa5\xc9\x88\xa4\xd5\xe9\x76\xe0\x5a\xcf\x43\xc4\x30\x01\xba\x01\x5e\xc8\x1c\x26\xe1\x34\x29\x7e\x89\x9a\x92\x8e\x3d\x32\x7d\x23\xf9\xdb\x69\x77\x9b\xcd\xba\x0c\x4a\xdb\x40\x49\xf0\x14\x50\xa6\x0e\x0a\x60\x9d\x00\x7c\x9c\x7b\x6f\xd5\x27\xce\x17\x5b\xcd\xfd\x35\x6c\xb3\xd9\x6c\x54\x96\x25\xd1\x31\xfc\x84\x51\x4f\xe6\x39\x95\x05\x2d\x13\xac\xc0\x8c\xc0\x24\x37\x49\x65\x97\xa5\x3e\x71\x06\xc3\x80\x90\x5e\xc4\x03\x3a\xa8\x9e\xd7\xd7\xe8\xd5\x7d\x9a\x3c\x2f\x54\xaf\x05\x29\x86\x1c\x7e\x20\xe7\x85\x32\xf6\x7f\xc2\x8c\xc6\x52\xfe\xba\xf0\xa9\x3b\xbe\x16\xf8\xc5\xc8\x64\x0a\xd7\x13\x27\x14\x89\xa6\x5f\xa4\xdc\x02\xf4\x2a\x11\xcf\x77\xd0\x65\x2f\x25\xfd\x6c\xdc\xd0\xc1\xfd\x7e\x5f\x39\xa7\x75\x4a\xe5\x68\x89\x68\xcf\x4e\x3f\xde\xef\xf7\x37\xf0\x98\x1e\x4a\xa9\x9f\x52\x33\x47\x34\xce\xb8\xc3\x53\x2a\x21\x93\x74\xf0\x90\xea\x56\xbe\x74\xd5\x76\xfe\x06\xe5\x39\xae\x0e\x0d\xc0\x8c\xce\x8c\xc4\xf2\x84\x8b\x4c\x3e\x76\x80\xfd\xb0\xd8\xe1\xdf\x00\x00\x00\xff\xff\xd6\x3c\x55\xb4\x5d\x07\x00\x00"

func residualnet200YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet200Yml,
		"ResidualNet200.yml",
	)
}

func residualnet200Yml() (*asset, error) {
	bytes, err := residualnet200YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet200.yml", size: 1885, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet34Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8f\xe3\x36\x0c\xbe\xfb\x57\x10\x08\x0a\xb4\xc0\x44\x4e\x26\x99\x6d\xe1\x43\x81\x62\x4f\x03\x74\x73\x98\x2e\x8a\x02\x45\x31\xa0\x65\x3a\xd6\xae\x2c\x09\x22\x3d\x8f\x7f\x5f\xe8\x91\x47\x77\xa7\xbb\x39\x38\x16\xf5\x91\xfc\xf4\x91\x94\x1d\xce\xd4\xc1\x03\xb1\x19\x16\xb4\x07\x92\xdd\x1e\x56\x90\xac\xe0\x47\x78\xf5\x4b\x84\xd9\x0f\x64\x9b\x31\xe2\x4c\xcf\x3e\x7e\xee\xe0\xc3\x5f\x07\x12\x58\xc1\xd9\x04\xa3\x8f\x20\x13\x55\xe8\x13\x45\x36\xde\x75\xb0\x55\x1b\x58\x41\x5d\x82\x71\xa3\x8f\x33\x4a\x79\x07\xa6\x19\x9d\x18\x7d\xde\x2f\xbb\x8d\xf6\x4e\xd0\x38\x8a\x1d\xac\xe0\xbc\x60\x58\x98\x06\x10\x0f\x81\x62\x42\x96\x5c\x10\x22\x0d\x46\xa7\x98\x0d\x5c\x7e\x2b\x98\x17\x2b\x26\x58\x82\x60\x51\x12\x9e\x41\xa3\x83\x9e\x80\x03\x69\x33\x1a\x1a\x1a\x00\x9c\x87\x77\xfb\x2e\x7b\x1e\xc3\xd2\x41\x44\x13\xa2\xff\x44\x5a\x5a\x8d\x71\xb6\xeb\xf9\xc5\x91\x74\x19\xb6\xd6\x61\xc9\x48\xfd\x5d\xe4\x31\x23\x43\xd0\xef\xf6\x96\xba\xef\x3a\x55\x60\x75\xfb\x36\x95\x6b\xec\x40\xac\xa3\x09\x92\xb5\xfe\xb5\x01\xf8\xcd\x81\x99\xf1\x48\x6b\x6d\x91\xd9\x8c\x46\x17\xb5\x1d\x49\x2e\x53\xbf\x18\x2b\xa9\xae\x16\x5f\x93\xa4\x32\xa1\x80\x25\x8c\x0e\x62\xed\x00\x18\x17\x97\xe5\x64\x78\x56\x51\x49\x81\x82\x71\x61\x11\x56\x0d\xc0\xc7\xc9\xf0\x39\xa0\xf6\x8e\x0d\x0b\xa7\x98\xbb\x7d\x0d\xab\x0a\x13\x72\x4c\x73\x6f\x73\x1f\xc9\x44\x4c\x27\x2f\x06\xd4\x93\xa1\x27\x62\xd8\xa9\xbb\x9f\x7f\x00\x8a\xd1\x47\x88\x28\x04\xde\xc1\xfd\xef\x7f\xfc\xf9\xf0\x7e\x7d\xbb\xd9\xde\xa9\x26\xd2\x48\x91\x9c\x26\x4e\xdd\x70\x59\xe5\x46\xc0\x90\x0e\xd1\xc2\x33\xf5\x6c\x84\xd2\x2b\x89\x56\x0a\x8a\x30\xbd\x71\xc7\xab\xae\x04\x58\xc3\x24\x12\xb8\x6b\x5b\x8c\x2f\xe6\x49\xf9\x78\x6c\xc3\x30\xb6\xdb\xbb\xed\xad\xda\xec\x76\xbf\xdc\x3d\x6d\x55\x18\xc6\x66\x05\xd6\xe8\xc4\xbf\x72\xaf\x11\xaa\xb1\x83\x0f\xf7\x1f\x9b\x55\xd5\x24\x31\x39\x43\xa0\x29\xc6\x54\xf3\x15\x8c\x26\xb2\x14\x18\xc8\x6b\xa0\x2f\xc6\x24\x11\x4a\xe6\xae\x14\xad\x29\x8d\x7b\x55\xd4\x53\xf6\xab\x38\x19\xf4\x9f\xba\x27\x40\x49\x71\x89\x12\x30\x4d\xa6\x50\xcc\xaa\xe5\xd4\x17\x53\x9d\x93\xc1\xcc\xe4\xd2\xdc\x71\x07\x7f\x6f\x6f\x60\x77\x03\xb7\xb7\xfb\xfc\xf8\xa7\xf1\x8b\x84\x45\xca\x29\x52\x82\x1c\xa2\xb2\x29\x7b\x0d\x54\xee\x23\xa1\x2c\x91\x32\x14\xdf\x62\x5f\xf0\x17\x02\xcd\x1b\x07\xa8\x18\x8b\x7d\xd6\xe5\x8a\x7f\x55\xe5\x8b\x33\x40\x36\xd7\xd4\xfc\xb8\x44\xdb\xe5\xda\x76\x6d\x3b\xa0\xa0\x1a\x66\xab\xd5\x6c\xdb\x3c\x33\x6d\x96\x9b\xdb\xac\x4f\x5a\x47\xe2\xf4\xc7\xaf\x8e\x49\x94\xbc\x48\x93\x11\x49\xab\xd3\xe5\xc0\xb5\x9e\xc7\x88\x61\x02\x74\x03\x3c\x93\x39\x4e\xc2\x69\x50\xfc\x12\x35\x25\x1d\x7b\x64\xfa\x46\xf2\xb7\xd3\xee\xf6\xeb\x32\x27\x6d\x03\x25\xfe\x63\x40\x99\x3a\x28\xfb\xeb\xdd\x7e\xcd\xaf\x73\xef\xad\xfa\xc4\xf9\x56\xab\x99\xbf\x42\x6d\x36\x9b\x8d\xca\x9a\x24\x2e\x86\x1f\x31\xea\xc9\x3c\xa5\x9a\xa0\x65\x82\x15\x98\x11\x98\xe4\x26\x49\xec\xb2\xce\x27\xc2\x60\x18\x10\xd2\x8b\x78\x40\x07\xd5\xf3\xfa\x0a\xbd\xba\x4b\x93\xe7\x85\xe8\xb5\x1a\xc5\x90\xc3\x0f\xe4\xbc\x50\xc6\xfe\x4f\x98\xd1\x58\xca\x5f\x16\x3e\xb5\xc6\xd7\xea\x3e\x1b\x99\x4c\xe1\x7a\xe2\x84\x22\xd1\xf4\x8b\x94\x2b\x80\x5e\x24\xe2\xf9\xfe\xb9\xec\xa5\xa4\x9f\x8d\x1b\x3a\x78\x7f\x38\x54\xce\x69\x9d\x52\x39\x5a\x22\xda\xb3\xd3\x8f\xef\x0f\x87\x1b\x78\x48\x0f\xa5\xd4\x4f\xa9\x93\x23\x1a\x67\xdc\xf1\x31\xd5\x8f\x49\x3a\xb8\x4f\x45\x2b\x5f\xb9\x6a\x3b\x7f\x7f\xf2\x10\x57\x87\x06\x60\x46\x67\x46\x62\x79\xc4\x45\x26\x1f\x3b\xc0\x7e\x58\xec\xf0\x6f\x00\x00\x00\xff\xff\xb4\x4d\x72\x01\x58\x07\x00\x00"

func residualnet34YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet34Yml,
		"ResidualNet34.yml",
	)
}

func residualnet34Yml() (*asset, error) {
	bytes, err := residualnet34YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet34.yml", size: 1880, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x6f\xe4\x36\x0c\xbd\xfb\x57\x10\x18\x14\x68\x81\x8c\x3c\x93\xec\x6c\x0b\x1f\x0a\x14\x39\x05\xe8\xce\x21\x5d\x14\x05\x8a\x22\xa0\x65\x7a\xac\x5d\x59\x12\x44\x3a\xc9\xfc\xfb\x42\x1f\xf3\xd1\xdd\x74\x77\x0e\x1e\x8b\x7a\x24\x9f\x1e\x49\xd9\xe1\x4c\x1d\x3c\x12\x9b\x61\x41\xbb\x27\xd9\x6d\x60\x05\xc9\x0a\x7e\x84\xa3\x5f\x22\xcc\x7e\x20\xdb\x8c\x11\x67\x7a\xf1\xf1\x73\x07\x1f\xfe\xda\x93\xc0\x0a\xce\x26\x18\x7d\x04\x99\xa8\x42\x9f\x29\xb2\xf1\xae\x83\xad\x4a\xc1\xea\x12\x8c\x1b\x7d\x9c\x51\xca\x3b\x30\xcd\xe8\xc4\xe8\xf3\x7e\xd9\x6d\xb4\x77\x82\xc6\x51\xec\x60\x05\xe7\x05\xc3\xc2\x34\x80\x78\x08\x14\x13\xb2\xe4\x82\x10\x69\x30\x3a\xc5\x6c\xe0\xf2\x5b\xc1\xbc\x58\x31\xc1\x12\x04\x8b\x92\xf0\x0c\x1a\x1d\xf4\x04\x1c\x48\x9b\xd1\xd0\xd0\x00\xe0\x3c\xbc\x7f\xd7\x65\xcf\x43\x58\x3a\x88\x68\x42\xf4\x9f\x48\x4b\xab\x31\xce\x76\x3d\xbf\x3a\x92\x2e\xc3\xd6\x3a\x2c\x19\xa9\xbf\x8b\x3c\x64\x64\x08\xfa\xfd\x3b\x4b\xdd\x77\x9d\x2a\xb0\xba\x7d\x9b\xca\x35\x76\x20\xd6\xd1\x04\xc9\x5a\xff\xda\x00\xfc\xe6\xc0\xcc\x78\xa0\xb5\xb6\xc8\x6c\x46\xa3\x8b\xda\x8e\x24\x97\xa9\x5f\x8c\x95\x54\x57\x8b\xc7\x24\xa9\x4c\x28\x60\x09\xa3\x83\x58\x3b\x00\xc6\xc5\x65\x39\x19\x5e\x54\x54\x52\xa0\x60\x5c\x58\x84\x55\x03\xf0\x71\x32\x7c\x0e\xa8\xbd\x63\xc3\xc2\x29\xe6\x6e\x53\xc3\xaa\xc2\x84\x1c\xd3\xdc\xdb\xdc\x47\x32\x11\xd3\xc9\x8b\x01\xf5\x64\xe8\x99\x18\xee\xd4\xee\xe7\x1f\x80\x62\xf4\x11\x22\x0a\x81\x77\xf0\xf0\xfb\x1f\x7f\x3e\xde\xaf\x6f\x37\xdb\x9d\x6a\x22\x8d\x14\xc9\x69\xe2\xd4\x0d\x97\x55\x6e\x04\x0c\xe9\x10\x2d\xbc\x50\xcf\x46\x28\xbd\x92\x68\xa5\xa0\x08\xd3\x1b\x77\xb8\xea\x4a\x80\x35\x4c\x22\x81\xbb\xb6\xc5\xf8\x6a\x9e\x95\x8f\x87\x36\x0c\x63\xbb\xdd\x6d\x6f\xd5\xe6\xee\xee\x97\xdd\xf3\x56\x85\x61\x6c\x56\x60\x8d\x4e\xfc\x2b\xf7\x1a\xa1\x1a\x3b\xf8\xf0\xf0\xb1\x59\x55\x4d\x12\x93\x33\x04\x9a\x62\x4c\x35\x5f\xc1\x68\x22\x4b\x81\x81\x1c\x03\x7d\x31\x26\x89\x50\x32\x77\xa5\x68\x4d\x69\xdc\xab\xa2\x9e\xb2\x5f\xc5\xc9\xa0\xff\xd4\x3d\x01\x4a\x8a\x4b\x94\x80\x69\x32\x85\x62\x56\x2d\xa7\xbe\x98\xea\x9c\x0c\x66\x26\x97\xe6\x8e\x3b\xf8\x7b\x7b\x03\x77\x37\x70\x7b\xfb\x2e\x3f\xfe\x69\xfc\x22\x61\x91\x72\x8a\x94\x20\x87\xa8\x6c\xca\x5e\x03\x95\xfb\x48\x28\x4b\xa4\x0c\xc5\xb7\xd8\x17\xfc\x85\x40\xf3\xc6\x01\x2a\xc6\x62\x9f\x75\xb9\xe2\x5f\x55\xf9\xe2\x0c\x90\xcd\x35\x35\x3f\x2d\xd1\x76\xb9\xb6\x5d\xdb\x0e\x28\xa8\x86\xd9\x6a\x35\xdb\x36\xcf\x4c\x9b\xe5\xe6\x36\xeb\x93\xd6\x91\x38\xfd\xf1\xd1\x31\x89\x92\x57\x69\x32\x22\x69\x75\xba\x1c\xb8\xd6\xf3\x10\x31\x4c\x80\x6e\x80\x17\x32\x87\x49\x38\x0d\x8a\x5f\xa2\xa6\xa4\x63\x8f\x4c\xdf\x48\xfe\x76\xda\xdd\x66\x5d\xe6\xa4\x6d\xa0\xc4\x7f\x0a\x28\x53\x07\x65\x7f\xbd\xdb\xac\xf9\x38\xf7\xde\xaa\x4f\x9c\x6f\xb5\x9a\xf9\x2b\xd4\x66\xb3\xd9\xa8\xac\x49\xe2\x62\xf8\x09\xa3\x9e\xcc\x73\xaa\x09\x5a\x26\x58\x81\x19\x81\x49\x6e\x92\xc4\x2e\xeb\x7c\x22\x0c\x86\x01\x21\xbd\x88\x07\x74\x50\x3d\xaf\xaf\xd0\xab\xbb\x34\x79\x5e\x88\x5e\xab\x51\x0c\x39\xfc\x40\xce\x0b\x65\xec\xff\x84\x19\x8d\xa5\xfc\x65\xe1\x53\x6b\x7c\xad\xee\x8b\x91\xc9\x14\xae\x27\x4e\x28\x12\x4d\xbf\x48\xb9\x02\xe8\x55\x22\x9e\xef\x9f\xcb\x5e\x4a\xfa\xd9\xb8\xa1\x83\xfb\xfd\xbe\x72\x4e\xeb\x94\xca\xd1\x12\xd1\x9e\x9d\x7e\xbc\xdf\xef\x6f\xe0\x31\x3d\x94\x52\x3f\xa5\x4e\x8e\x68\x9c\x71\x87\xa7\x54\x3f\x26\xe9\xe0\x21\x15\xad\x7c\xe5\xaa\xed\xfc\xfd\xc9\x43\x5c\x1d\x1a\x80\x19\x9d\x19\x89\xe5\x09\x17\x99\x7c\xec\x00\xfb\x61\xb1\xc3\xbf\x01\x00\x00\xff\xff\x74\x4d\x25\xc8\x58\x07\x00\x00"

func residualnet50YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet50Yml,
		"ResidualNet50.yml",
	)
}

func residualnet50Yml() (*asset, error) {
	bytes, err := residualnet50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet50.yml", size: 1880, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnet152_11kYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x5d\x8b\xeb\x36\x13\xbe\xf7\xaf\x18\x08\x2f\xbc\x85\x8d\x1c\x67\x37\xdb\xe2\x8b\x42\x59\x7a\xb1\xd0\x93\x8b\x3d\xcb\xa1\x50\xca\x32\x91\xc7\xb1\xce\xca\x92\xd0\x8c\x37\x9b\x7f\x5f\x24\x39\x1f\x3d\xe7\xb4\x07\x9a\x8b\x60\x8f\x9e\x99\x79\xf4\xcc\x87\x1d\x8e\xd4\xc2\x13\xb1\xe9\x26\xb4\x5b\x92\x66\xb3\x5e\x36\xcd\x2b\x2c\x20\x1d\x81\xef\xe1\xe8\xa7\x08\xa3\xef\xc8\x56\x7d\xc4\x91\x0e\x3e\xbe\xb6\xf0\xe1\xf7\x2d\x09\x2c\xe0\x6c\x82\xde\x47\x90\x81\x66\xe8\x1b\x45\x36\xde\xb5\xd0\xa8\x15\x2c\x60\x7e\x05\xe3\x7a\x1f\x47\x94\xf2\x0c\x4c\x23\x3a\x31\xfa\x7c\x5e\x4e\x2b\xed\x9d\xa0\x71\x14\x5b\x58\xc0\xf9\x85\x61\x62\xea\x40\x3c\x04\x8a\x09\x59\x72\x41\x88\xd4\x19\x9d\x62\x56\x70\xf9\x2d\x60\x9c\xac\x98\x60\x09\x82\x45\x49\x78\x06\x8d\x0e\x76\x04\x1c\x48\x9b\xde\x50\x57\x01\xe0\xd8\xdd\xdf\xb5\xd9\x73\x1f\xa6\x16\x22\x9a\x10\xfd\x67\xd2\x52\x6b\x8c\xa3\x5d\x8e\xef\x8e\xa4\xcd\xb0\xa5\x0e\x53\x46\xea\xef\x22\xf7\x19\x19\x82\xbe\xbf\xb3\xd4\x7e\xd7\x69\x06\xce\x6e\xff\x4e\xe5\x1a\xdb\x11\xeb\x68\x82\x64\xad\x7f\xae\x00\x7e\x71\x60\x46\xdc\xd3\x52\x5b\x64\x36\xbd\xd1\x45\x6d\x47\x92\xcb\xb4\x9b\x8c\x95\x54\x57\x8b\xc7\x24\xa9\x0c\x28\x60\x09\xa3\x83\x38\xb7\x01\xf4\x93\xcb\x72\x32\x1c\x54\x54\x52\xa0\x60\x5c\x98\x84\x55\x05\xf0\x3c\x18\x3e\x07\xd4\xde\xb1\x61\xe1\x14\xb3\xd9\xac\xe7\xb8\x09\xf6\x44\xec\x72\x47\x01\xea\xc1\xd0\x1b\x31\xac\x6f\xd5\xea\x7f\xf0\xec\xc3\xb2\x81\x5f\x63\xf4\x11\xd0\x75\x70\xaf\x7e\x2c\xc6\x0d\x50\x36\x7a\x07\x8f\xbf\x7d\xfc\xf4\xf4\xb0\x5e\x35\x9b\xe5\x27\xb4\xa6\x2b\xb7\xf8\x48\xa2\xaa\x48\x3d\x45\x72\x9a\x38\xb5\xc7\xe5\x2d\x77\x06\x86\x74\xab\x1a\x0e\xb4\x63\x23\x94\x1e\x49\xb4\x52\x50\x94\xda\x19\xb7\xbf\x6a\x53\x80\x25\x0c\x22\x81\xdb\xba\xc6\xf8\x6e\xde\x94\x8f\xfb\x3a\x74\x7d\xdd\x6c\x9a\xb5\x5a\xdd\xde\xfe\xb4\x79\x6b\x54\xe8\xfa\x6a\x01\xd6\x68\x72\x9c\x87\xe2\x12\x61\x36\xb6\xf0\xe1\xf1\xb9\x5a\xcc\x22\x25\x26\x67\x08\x54\xc5\x98\x9a\x60\x01\xbd\x89\x2c\x05\x06\x72\x0c\xf4\xc5\xdc\x24\x42\xc9\xdc\x96\x2a\x56\xa5\x93\xaf\xaa\x7c\xca\x7e\x15\x27\x83\xfe\xd6\x08\x09\x50\x52\x5c\xa2\x04\x4c\xa3\x2a\x14\xb3\x6a\x39\xf5\xc5\x34\x0f\x4e\x67\x46\x72\x69\x10\xb9\x85\x3f\x9a\x1b\xb8\xbd\x81\xf5\xfa\x2e\xff\xfd\x59\xf9\x49\xc2\x24\xe5\x16\x29\x41\x0e\x31\xb3\x29\x67\x15\xcc\xdc\x7b\x42\x99\x22\x65\x28\x7e\x8b\x7d\xc1\x5f\x08\x54\xdf\xb8\xc0\x8c\xb1\xb8\xcb\xba\x5c\xf1\x9f\x55\xf9\xe2\x0e\x90\xcd\x73\x6a\x7e\x99\xa2\x6d\x73\x6d\xdb\xba\xee\x50\x50\x75\xa3\xd5\x6a\xb4\x75\x1e\xa2\x3a\xcb\xcd\x75\xd6\xc7\x91\xa4\xa5\x57\xf3\xd1\x31\x89\x92\x77\xa9\xf2\x71\x12\xea\xb4\x2a\x78\x2e\xe6\x3e\x62\x18\x72\xd7\x1e\xc8\xec\x07\xe1\x34\x36\x7e\x8a\x9a\x92\x88\x3b\x64\xfa\x2f\x99\x63\x1e\x95\x65\xb3\x59\xd7\x15\x94\x1c\x2f\x01\x65\x68\xe1\x72\xb2\xe4\xe3\xb8\xf3\x56\x7d\xe6\xbc\xe8\xe6\xf4\x5f\xc3\x56\xab\xd5\x4a\x65\x59\x12\x23\xc3\x2f\x18\xf5\x60\xde\x52\x59\xd0\x32\xc1\x02\x4c\x0f\x4c\x72\x93\x54\x76\x59\xea\x13\x6d\x30\x0c\x08\xe9\x41\x3c\xa0\x83\xd9\xf3\x7a\xad\x5e\xed\xd7\xe4\x79\xa1\x7a\xad\x49\x31\xe4\xf0\x1d\x39\x2f\x94\xb1\xff\x10\xa6\x37\x96\xf2\xd7\x86\x4f\xdd\xf1\xb5\xc6\x07\x23\x83\x29\x5c\x4f\x9c\x50\x24\x9a\xdd\x24\x65\x0b\xd0\xbb\x44\x3c\xef\xa4\xcb\x59\x4a\xfa\x6a\x5c\xd7\xc2\xc3\x76\x3b\x73\x4e\xef\x29\x95\xa3\x29\xa2\x3d\x3b\xfd\xff\x61\xbb\xbd\x81\xa7\xf4\xa7\x94\xfa\x21\x35\x73\x44\xe3\x8c\xdb\xbf\xa4\x2a\x32\x49\x0b\x8f\xa9\x68\xdb\x52\xb4\x34\x97\xc5\x7e\xfe\x2e\xe5\x59\x9e\x9d\x2a\x80\x11\x9d\xe9\x89\xe5\x05\x27\x19\x7c\x6c\x01\x77\xdd\x64\xbb\xbf\x02\x00\x00\xff\xff\xaa\x15\x4d\xe5\x75\x07\x00\x00"

func resnet152_11kYmlBytes() ([]byte, error) {
	return bindataRead(
		_resnet152_11kYml,
		"Resnet152_11k.yml",
	)
}

func resnet152_11kYml() (*asset, error) {
	bytes, err := resnet152_11kYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Resnet152_11k.yml", size: 1909, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _caffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x5b\x6f\xdb\x36\x14\x7e\xd7\xaf\xf8\x00\xa3\xc0\x06\x44\xb2\x93\x26\x59\xab\x87\x01\x43\x9e\x8a\x2d\x79\xe8\x8a\x61\xc0\x30\x04\x34\x75\x64\xb1\xa5\x48\x82\x3c\x8a\xe3\x7f\x3f\x1c\x52\xb6\x5c\xef\x52\x2c\x0f\x0e\x79\xf8\x9d\xdb\x77\x2e\x72\x6a\xa4\x16\x0f\xaa\xef\xe9\x89\x18\x2b\x88\x00\xbe\xc7\xc1\x4f\x11\xa3\xef\xc8\x56\x7d\x54\x23\xed\x7d\xfc\xd2\xe2\xf1\xf7\x82\x3a\x89\xd0\xfb\x08\x1e\x68\x86\xbe\x50\x4c\xc6\xbb\x16\xd7\xcd\x06\x2b\xcc\x57\x18\xd7\xfb\x38\x2a\x2e\x67\x24\x1a\x95\x63\xa3\x4f\xef\xe5\xb5\xd2\xde\xb1\x32\x8e\x62\x8b\x15\x4e\x97\x84\x29\x51\x07\xf6\x08\x14\x05\x59\x7c\x21\x44\xea\x8c\x16\x9b\x15\x96\xbf\x15\xc6\xc9\xb2\x09\x96\x10\xac\x62\xc1\x27\x68\xe5\xb0\x25\xa4\x40\xda\xf4\x86\xba\x0a\x50\x63\x77\x7f\xdb\x66\xcd\x5d\x98\x5a\x44\x65\x42\xf4\x9f\x49\xf3\x5a\xab\x38\xda\x7a\x7c\x75\xc4\x6d\x86\xd5\x3a\x4c\x19\xa9\xbf\x89\xdc\x65\x64\x08\xfa\xfe\xd6\x52\xfb\x4d\xa5\x19\x38\xab\xfd\x77\x28\xe7\xd8\x8e\x92\x8e\x26\x70\xe6\xfa\xc7\x0a\xf8\xc9\xc1\x8c\x6a\x47\xb5\xb6\x2a\x25\xd3\x1b\x5d\xd8\xee\x88\x82\x50\xf9\xe2\xed\x24\x02\x65\xe1\x88\x73\xe5\x38\x0a\xbd\x1d\xbc\xcb\x05\xfc\xe5\xd7\xdf\x3e\x3e\xd4\x37\x9b\xeb\x0d\x3e\x88\x25\x29\x74\x86\x18\xb7\x43\x22\xbe\xaa\x80\xfd\x60\xf4\x00\xa5\x07\x43\x2f\xb9\x24\xa1\xbe\x86\x72\xe5\x74\x07\x8a\xd1\x47\x44\xc5\x94\xa4\x85\xde\xbe\x6f\x7e\x78\x93\x9f\xaf\xdf\x35\xef\xdf\x34\x15\xf0\x69\xa0\x93\x7f\xed\x5d\x32\x89\x33\xf4\x7e\xf3\x88\xa0\xa4\xa9\x58\x0a\x2e\x3a\x77\x9b\xcd\xcf\x70\x34\x45\xef\x12\x94\x8e\x3e\x25\xdc\x5d\xa4\x62\xd5\x41\xe0\xbc\xf7\xe8\x27\x6b\x0f\xb5\xf6\xce\x91\x66\xea\xe6\xa7\xa6\x8a\xd4\x53\x24\xa7\x29\x49\x53\x2d\xb7\xdc\x4f\x2a\x88\xfa\x1a\x7b\xda\x26\x23\x51\xaf\x41\xac\x9b\x06\x85\xdf\xad\xa4\xbe\x34\x37\x50\x63\x60\x0e\xed\x7a\x5d\x34\x1b\x67\x42\x6a\xb4\x2e\xd7\xf5\xed\xbb\x9b\xdb\x3a\x57\xc1\x11\x5f\x14\xa2\xde\x1b\x1e\x6a\xa9\x46\xfd\x55\x0a\xb5\x64\x98\xff\x65\x52\x52\xb5\x82\x35\x9a\x5c\xca\x43\xb8\xf8\x9e\x85\x2d\x1e\x3f\x7c\xaa\x56\x30\x2e\x4c\x9c\x73\x38\x41\x50\x15\xa1\x34\xdd\x0a\xbd\x89\x89\x0b\x0c\x7c\x08\x74\x31\xa7\x92\x8a\x88\xdb\xd2\x35\x55\x99\x9c\xb3\xae\x3a\x7a\x3f\xb3\x93\x41\x5f\x35\x9e\x00\x8a\x8b\xc5\xca\x52\x45\xe1\x3b\xbb\x5e\x44\xf3\xa0\x76\x66\x24\x27\x83\x9f\x5a\xfc\x71\x7d\x85\xb7\x57\xb8\xb9\xb9\xcd\x3f\x7f\x56\x7e\xe2\x30\x71\xc9\x42\x1c\x64\x13\x73\x34\xe5\xad\xc2\x1c\x7b\x4f\x8a\xa7\x48\x19\xaa\xfe\x29\xfa\x82\x5f\x02\xa8\x2e\x12\x50\xee\x08\xc9\x09\x48\x6b\xc2\xaa\x6d\x26\xe8\x2c\x91\x99\x9e\x8b\x64\x90\xc5\x73\x0c\xe9\x79\x8a\xb6\x3d\xb6\x47\xa7\x58\x35\xdd\x68\x75\x33\xda\x75\x9e\xde\x75\xe6\x3d\xad\x8f\xed\xb1\x4e\x07\x97\x88\x1b\x7e\xe5\x2a\x3f\x09\x5b\xc7\xfd\x94\xe6\x8a\xee\xa2\x0a\x43\x1e\x86\x3d\x99\xdd\xc0\x09\x91\x92\x9f\xa2\x26\x61\x72\xab\x12\xfd\x5f\xaf\x5a\x16\xbd\x1c\x2a\x14\xeb\xcf\x41\xf1\xd0\xe2\x28\xaf\xd3\x61\xdc\x7a\xdb\x7c\x4e\x79\xab\xce\x6e\x2f\x41\x9b\xcd\x66\xd3\x64\x22\x24\x0e\x93\x9e\x55\xd4\x83\x79\x91\x8a\x28\x9b\x08\x2b\x98\x3e\xaf\x0c\x29\x42\xd9\x2e\xc7\x60\x61\x12\x14\xe4\xc0\x5e\xe8\x9f\x35\xcf\x37\xf8\xd9\x2a\x17\xcd\x25\xcc\x73\x26\x8a\x20\x9b\xef\xc8\x79\xa6\x8c\xfd\x17\x33\xbd\xb1\x94\x3f\x6c\xe9\xd8\x18\x7f\x67\x56\xe6\xd3\x94\x58\x8f\x31\x29\xe6\x68\xb6\x13\x97\xd5\x41\xaf\x1c\xd5\x69\x79\x2d\x6f\xe2\xf4\x8b\x71\x5d\x8b\x87\xa7\xa7\x39\x66\xb9\x8b\xab\x32\xdc\x27\xa5\xef\x1e\x9e\x9e\xae\xf0\x51\x7e\x9a\xa6\xf9\x5e\xfa\x78\x5e\xb0\xcf\x52\xbb\x44\xdc\x2e\xbb\x77\x85\x59\x76\xfa\xfc\xe5\x11\x9e\x15\x2a\x60\x54\xce\xf4\x94\xf8\x59\x4d\x3c\xf8\xd8\x42\x6d\xbb\xc9\x76\x7f\x05\x00\x00\xff\xff\xb7\xa3\xb3\xe0\xd2\x07\x00\x00"

func caffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_caffenetYml,
		"caffenet.yml",
	)
}

func caffenetYml() (*asset, error) {
	bytes, err := caffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "caffenet.yml", size: 2002, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inceptionv3Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x51\x6b\x2b\x37\x13\x7d\xdf\x5f\x71\xc0\x7c\xf0\x15\xe2\xdd\xd8\x4d\x5c\xd8\x87\x42\x9b\xa7\x40\xe3\x87\xdb\x52\x0a\xa5\x18\x59\x3b\x6b\xcf\xbd\x5a\x49\x48\xb3\x76\xf2\xef\x8b\xa4\xb5\xd7\x4d\xd3\x7b\xfd\x60\xa4\xd1\xd1\xcc\xd1\x9c\x99\x59\xab\x06\x6a\xf1\x6c\x35\x79\x61\x67\xb7\x24\x58\x20\x19\xe1\x7a\xbc\xb9\x31\x60\x70\x1d\x99\xaa\x0f\x6a\xa0\xb3\x0b\x5f\x5a\xbc\xfc\x51\x50\x57\x13\x7a\x17\x20\x47\x9a\xa0\x27\x0a\x91\x9d\x6d\xb1\xaa\xef\xb1\xc0\xb4\x05\xdb\xde\x85\x41\x49\x59\x23\xd2\xa0\xac\xb0\xbe\x9e\x97\xd3\x4a\x3b\x2b\x8a\x2d\x85\x16\x0b\x5c\x37\x11\x63\xa4\x0e\xe2\xe0\x29\x24\x64\x89\x05\x1f\xa8\x63\x9d\x7c\x56\x98\x7f\x0b\x0c\xa3\x11\xf6\x86\xe0\x8d\x92\x84\x8f\xd0\xca\x62\x4f\x88\x9e\x34\xf7\x4c\x5d\x05\xa8\xa1\xdb\x3c\xb4\xf9\xe6\xc1\x8f\x2d\x82\x62\x1f\xdc\x67\xd2\xd2\x68\x15\x06\xb3\x1c\x5e\x2d\x49\x9b\x61\x4b\xed\xc7\x8c\xd4\xdf\x44\x1e\x32\xd2\x7b\xbd\x79\x30\xd4\x7e\xf3\xd2\x04\x9c\xae\x7d\x9d\xca\x2d\xb6\xa3\xa8\x03\x67\xd9\x5a\xfc\x58\x01\x3f\x59\xf0\xa0\x0e\xb4\xd4\x46\xc5\xc8\x3d\xeb\x92\x6d\xed\xec\xc9\x99\x31\xad\x95\x81\x25\x49\xa2\xd5\x15\x66\xd9\xa1\xf4\x91\xe9\x44\x11\xeb\x55\xbd\xfe\x1f\xc4\xf9\xe5\x0a\xca\x76\x78\xac\x37\x65\xfb\x08\x0a\xc1\x05\x38\x9b\xa5\x7e\xfe\xe5\xd7\xdf\x3f\x3d\x61\x7d\xbf\x5a\xe3\xa4\x0c\x77\x25\x54\xa7\x44\x45\x92\xec\x5c\x52\xe0\xc8\x51\x62\xaa\xa5\x9e\xce\x94\xaa\x44\x59\xac\x1f\x5f\xe0\x55\xaa\x1e\xa1\x10\xeb\x2a\x50\x4f\x81\xac\xa6\x98\x34\x9f\x77\x59\x6e\xe5\x93\xfa\x0d\xce\xb4\x8f\x2c\x94\x96\x24\xba\xae\x51\x9e\xbf\x67\x7b\xb8\xa9\x3d\x60\x89\xa3\x88\x8f\x6d\xd3\xa8\xf0\xca\xa7\xda\x85\x43\xe3\xbb\xbe\x59\x3d\xae\xd6\xf5\xfd\xfd\xe3\xe6\x87\xda\x77\x7d\xb5\x80\x61\x4d\x36\xe6\x3a\x9f\xef\x4f\xc6\x16\x2f\xcf\xbf\x55\x0b\xb0\xf5\xa3\x64\x1e\x57\x08\xaa\x62\x4c\xba\x2e\xd0\x73\x88\x52\x60\x90\x37\x4f\xef\x5a\x21\xd1\x49\xe6\xb6\x08\x53\x95\xe2\xbc\x11\xee\x12\xfd\xc6\x4f\x06\xfd\x43\xdb\x04\x28\x21\x66\x2f\x73\xfe\x52\xce\x72\xe8\xd9\x34\xf5\x42\xc7\x03\xd9\xd4\x5b\xb1\xc5\x9f\xab\x3b\x7c\x7f\x87\xf5\xfa\x21\xff\xfd\x55\xb9\x51\xfc\x28\xe5\x15\x29\x40\x76\x31\xb1\x29\x67\x15\x26\xee\x3d\x29\x19\x03\x65\xa8\xfa\x88\x7d\xc1\xcf\x04\xaa\x0f\x1e\x30\x61\x8c\xda\xe7\xbc\xdc\xf0\x9f\xb2\xf2\xee\x0d\xc8\xe6\x29\x74\xdc\x8d\xc1\xb4\x59\xd9\xb6\x69\x52\x91\xd5\xdd\x60\x74\x3d\x98\x26\xf7\x45\x93\xd3\x1d\x9b\x9c\x9f\xb4\x8f\x6f\x36\x95\xa1\xbc\x4a\x95\x8f\x52\x92\x2e\x9d\x1f\x27\x21\x0f\x41\xf9\x63\x2e\xf2\x33\xf1\xe1\x28\x11\x81\xa2\x1b\x83\xa6\x94\xc0\xbd\x8a\xf4\x95\xa8\xef\xe2\xf1\xa5\x93\x96\x7b\xdb\x54\x28\xbe\x77\x5e\xc9\xf1\x66\xb8\x2e\x7f\xde\x2e\xe3\xdb\xb0\x77\xa6\xfe\x1c\xf3\xc4\x9a\x02\x7f\x04\xbc\x5f\xad\x37\x75\x4e\x47\x62\xc3\x71\xa7\x82\x3e\xf2\x29\xc9\xa1\x4c\x24\x2c\xc0\x3d\x22\xc9\x5d\xca\x6e\xe9\xc9\x0b\x65\x70\x84\x42\x5a\x88\x83\xb2\x98\x6e\xde\x4e\xc8\x9b\x51\x99\x6e\xce\x74\x6f\xf3\x51\x0c\xd9\x7d\x47\xd6\x09\x65\xec\x7f\xb8\xe9\xd9\x50\xfe\x70\xc4\x4b\x55\xfc\x3b\xbf\x67\x96\x23\x17\xae\x17\x4e\x4a\x24\xf0\x7e\x94\xd2\xfb\xf4\x2a\x41\x5d\x26\x14\xe6\xb3\x14\xf4\x0b\xdb\xae\xc5\xd3\x76\x3b\x71\x4e\xfb\x14\xca\xd2\x18\xe6\xb1\x86\xff\x3f\x6d\xb7\x77\xf8\x94\xfe\xea\xba\xfe\x2e\x15\x71\x50\x6c\xd9\x1e\x76\xd3\x70\x6a\xf1\x9c\x64\x2b\x1f\xb1\xc9\x76\xfd\xbc\xe4\xfe\x9d\x2e\x54\xc0\xa0\x2c\xf7\x14\x65\xa7\x46\x39\xba\xd0\x42\xed\xbb\xd1\x74\x7f\x07\x00\x00\xff\xff\x34\xe0\x3b\x8c\x36\x07\x00\x00"

func inceptionv3YmlBytes() ([]byte, error) {
	return bindataRead(
		_inceptionv3Yml,
		"inceptionv3.yml",
	)
}

func inceptionv3Yml() (*asset, error) {
	bytes, err := inceptionv3YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inceptionv3.yml", size: 1846, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _locationnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4f\x6f\xe3\xb8\x0f\xbd\xfb\x53\x10\x08\x06\xf8\xfd\x80\xc4\x4e\x9a\x4c\xa7\xf5\x61\x81\x45\xb1\x0b\x14\xd8\xe6\x30\x98\xc3\x00\x8b\x41\xc0\xc8\xb4\xad\xa9\x2c\x09\x22\xdd\xb4\xf3\xe9\x17\x92\x9c\x3f\xed\x74\x77\x7a\x48\x6d\xf1\x89\x7c\x24\x1f\x69\x8b\x03\xd5\xf0\x97\x53\x28\xda\xd9\x2d\x09\xcc\x20\x9e\x81\x6b\xe1\xc5\x8d\x01\x06\xd7\x90\x29\xda\x80\x03\x1d\x5c\x78\xac\xe1\xe1\x6b\x46\x9d\x8e\xa0\x75\x01\xa4\xa7\x09\xfa\x44\x81\xb5\xb3\x35\xac\xca\x25\xcc\x60\x7a\x05\x6d\x5b\x17\x86\x14\x05\xb4\x05\xa6\x01\xad\x68\x75\xb2\x67\x6b\xa1\x9c\x15\xd4\x96\x42\x0d\x33\x38\xbd\x30\x8c\x4c\x0d\x88\x03\x4f\x21\x22\x73\x2c\xf0\x81\x1a\xad\xa2\xcf\x02\xce\x7f\x33\x18\x46\x23\xda\x1b\x02\x6f\x50\x22\x9e\x41\xa1\x85\x3d\x01\x7b\x52\xba\xd5\xd4\x14\x00\x38\x34\xd7\x9b\x3a\xdd\xec\xfc\x58\x43\x40\xed\x83\xfb\x4e\x4a\x2a\x85\x61\x30\x8b\xe1\xd9\x92\xd4\x09\xb6\x50\x7e\x4c\x48\xf5\x4b\x64\x97\x90\xde\xab\xeb\x8d\xa1\xfa\x97\x97\x26\xe0\x74\xed\xbf\xa9\x5c\x62\x1b\x62\x15\xb4\x97\x54\xeb\xdf\x0a\x80\xdf\xc1\xf7\x4e\xdc\xc2\x38\x85\x46\xff\xc8\xa5\x56\xce\x3e\x39\x33\xc6\x67\x34\x60\x69\x0c\xe9\x9f\xa4\xc6\xed\x31\x56\xd5\xd9\xd4\xbd\x7b\xab\x28\x79\x03\x0c\xaa\xd7\x42\x4a\xc6\x40\x65\x01\xaf\xd4\xa1\x19\x70\x6f\x28\xb6\x62\x8a\x43\xb0\x2e\xaf\x3f\x44\xbd\xe8\x01\x3b\x62\x40\x01\x96\x40\x24\x60\xe8\x89\xcc\x1c\xd0\x36\xb0\xb9\xf9\x10\x0d\xb1\xa3\xda\x92\x9d\x6c\xd1\xfb\x97\x9e\x4e\x84\x0e\xc8\x20\x21\xb6\x3c\xd1\x5a\xdd\x3e\xc0\x1f\x5f\xef\xff\x84\x8e\x9c\x60\xd7\x51\x93\x53\xe4\xe4\x52\x39\xcb\x9a\x85\x63\xe8\xdb\x4f\xf3\xf5\xd5\x6a\xbe\xdc\xdc\x80\xc7\x28\x4c\xa1\xc0\x65\x11\xa8\xa5\x40\x56\x11\x47\x39\x9d\xdf\x92\x92\xd0\x47\x61\x55\x70\xa0\x3d\x6b\xa1\xf8\x48\xa2\xca\x12\x72\x65\xf7\xda\x76\x17\xb2\x06\x58\x40\x2f\xe2\xb9\xae\x2a\x16\x14\xad\xca\xce\xb9\xce\xd0\xc8\x14\x62\x5a\x64\xa5\x54\x6e\xa8\x06\x6a\x34\x56\x81\x98\x62\x1d\x27\x50\xb2\x90\xad\x2a\x3f\xee\xb9\x4a\x05\x7e\xa2\x6a\xf3\x71\x73\x73\x53\xfa\xa6\x2d\x66\x60\xb4\x22\xcb\x69\xee\xce\x41\xa7\xc3\x1a\x1e\xee\xbf\x14\x33\xd0\xd6\x8f\x92\xc8\x9f\x20\x50\xe4\xc3\xa8\xb3\x19\xb4\x3a\xb0\x64\x18\xc8\x8b\xa7\x37\xa3\x19\x73\x88\xc7\x75\x6e\x55\x91\x87\xe5\x42\x48\xc7\xe8\x17\x7e\x12\xe8\x95\xd6\x22\x20\x87\x38\x7b\x39\x17\x3d\x16\x3a\x85\x3e\x1f\x4d\xb3\xd9\xe8\x81\x6c\x9c\x75\xae\xe1\xef\xd5\x1c\xd6\x73\xb8\xba\xda\xa4\x9f\x6f\x85\x1b\xc5\x8f\x92\xb3\x88\x01\x92\x8b\x89\x4d\xb6\x15\x30\x71\x57\xce\x85\x46\x5b\x14\xe2\x04\xc7\xf7\x32\xc8\x77\xce\x24\x8a\x77\x92\x98\x30\xaf\xfd\x5d\x64\x32\xd5\xe7\x4d\x36\x90\x8e\x5b\xc2\x38\x1e\xbc\x1b\x83\xa9\x4f\xc2\x08\x78\x28\x3b\x2d\xfd\xb8\xff\x49\x15\x71\x23\x25\x69\x2c\xf6\x14\x1e\xc9\xd0\x4b\x25\xa3\xb8\xa0\xd1\x70\x35\x20\x0b\x85\xaa\x0b\xba\xe1\x52\x9e\xa5\x18\x08\xed\x2e\x95\x37\xd6\xea\x6a\x5d\x5e\xdf\xcc\x61\xb5\xba\x2e\x3f\x7d\xba\x9d\xc3\x6a\xb9\x2e\x6f\xd7\xb7\xdf\x8a\xd4\xd6\x58\xf1\xe3\x5a\xe3\x49\x15\x5d\x40\xdf\xa7\x29\x39\x90\xee\x7a\x61\x08\xc4\x6e\x0c\x2a\xe5\x18\xe7\xfe\x35\x71\x5e\x97\x38\xe0\x0f\x67\xf1\xc0\x99\xef\xa0\xdc\x30\x38\xcb\x8b\x23\xcb\x2a\x79\xe6\xaa\x80\xec\x7d\xe7\x51\xfa\x1a\x3e\x6f\x57\xcb\xd5\xe2\xe3\xe3\xc7\xe5\x72\xc1\x2f\xc3\xde\x99\xf2\x3b\xa7\x7d\x3c\x45\x7e\x07\xb7\x5c\xae\xae\xca\x54\xd1\xc8\x46\xf3\x6e\x1a\x88\x1a\x5a\x34\x4c\x30\x03\xdd\x02\x93\xcc\x63\x9b\xf2\x76\x3a\x52\x4e\x0b\x08\xe2\x83\x38\xc0\x69\x57\x3d\xd1\xe5\xfa\xbf\xf8\x0e\xc4\x9b\x67\xb2\x97\xf5\xc8\x07\xc9\x7d\x43\xd6\x09\x25\xec\xbf\xb8\x69\xb5\xa1\xf4\x55\xe4\xa3\xbc\x7e\xae\xef\x41\x4b\xaf\x33\xd7\x23\x27\x14\x09\x7a\x3f\x4a\xde\x3e\xf4\x2c\x01\x4f\x9b\xee\x6c\x8b\x41\x1f\xb5\x6d\x6a\xb8\xdb\x6e\x27\xce\xf1\x3d\x86\x7a\xb3\xaf\xff\x77\xb7\xdd\xce\xe1\x73\xfc\x29\xcb\xf2\xff\x71\x22\xe2\xb2\xd4\xb6\xdb\x35\x28\xc8\x24\x35\x3c\x9c\x84\x76\x97\x1b\x18\x27\x3c\x1b\x4f\x1f\xd1\xb4\x15\xa6\x9b\x05\xc0\x80\x56\xb7\xc4\xb2\xc3\x51\x7a\x17\x6a\xc0\x7d\x33\x9a\xe6\x9f\x00\x00\x00\xff\xff\x2e\x42\x66\x13\x1b\x08\x00\x00"

func locationnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_locationnetYml,
		"locationnet.yml",
	)
}

func locationnetYml() (*asset, error) {
	bytes, err := locationnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locationnet.yml", size: 2075, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ninYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8b\xe3\x46\x10\xbe\xeb\x57\x7c\x60\x02\xbb\x60\x4b\xf6\xd8\x59\x88\x0e\x81\x65\x21\x30\x87\xf5\x61\xd9\x43\x20\x84\xa1\xdc\x2a\x59\xb5\xd3\x6a\x35\xdd\x25\x7b\xe6\xdf\x87\x6e\xc9\x8f\x4c\x36\xbb\x3e\x98\xee\xaa\xaf\xeb\xf1\xd5\x43\x8e\x7a\xae\xb1\x67\x3d\x0f\xe1\x19\xe2\xae\xc7\x77\x7b\xd9\xbf\xc7\x02\x09\x80\xa1\xc5\xeb\x30\x06\xf4\x43\xc3\xb6\x68\x03\xf5\x9c\x40\x35\x3e\xff\xb9\x67\xc5\x02\x57\x11\xda\x21\x40\x3b\x9e\xa1\x27\x0e\x51\x06\x57\x63\x53\xae\xb1\xc0\x7c\x85\xb8\x76\x08\x3d\xe9\x74\x46\xe4\x9e\x9c\x8a\xb9\xea\x27\x6d\x61\x06\xa7\x24\x8e\x43\x8d\x05\xae\x97\x88\x31\x72\x03\x1d\xe0\x39\x24\xe4\xe4\x0b\x3e\x70\x23\x26\xd9\x2c\x70\xfb\x2d\xd0\x8f\x56\xc5\x5b\x86\xb7\xa4\x09\x1f\x61\xc8\xe1\xc0\x88\x9e\x8d\xb4\xc2\x4d\x01\x50\xdf\x7c\xd8\xd5\xf9\xe5\xd1\x8f\x35\x02\x89\x0f\xc3\x37\x36\x5a\x19\x0a\xbd\x5d\xf5\x2f\x8e\xb5\xce\xb0\x95\xf1\x63\x46\x9a\x9f\x22\x8f\x19\xe9\xbd\xf9\xb0\xb3\x5c\xff\xf4\xd1\x0c\x9c\x9f\xfd\x38\x94\x7b\x6c\xc3\xd1\x04\xf1\x9a\xb9\xfe\xbd\x00\x3e\x3a\x48\x4f\x47\x5e\x19\x4b\x31\x4a\x2b\x66\x62\xdb\xcd\xe5\x8d\x1a\x46\x1d\x03\xe3\xdc\x71\x60\xc4\x9e\xac\x4d\x7c\x1a\xf6\x1a\x06\x17\x11\xad\x34\x8c\xe1\xc4\x01\xe2\xfc\xa8\xe8\xc9\xc7\x25\xa2\xf4\x62\x29\x24\xf6\x09\x9f\xf6\xfb\xb2\x00\xbe\x76\x12\xc1\xae\x23\x67\x38\xc2\x0e\x86\xec\x54\x12\x71\xc7\x25\xc8\xda\xe1\x2c\xee\x98\x3b\x23\x4a\xef\x2d\x07\xbc\x89\xca\xd2\x6b\xaa\xab\x76\xa4\xa0\xc0\x60\x8a\xc2\xd9\x89\x38\xe5\xe0\x03\xeb\xe4\x88\xaf\x09\x98\xc1\x45\x89\x1a\x53\x6f\x6e\x11\x95\xcc\x33\x37\xb3\xa1\x25\x98\x4c\x97\x34\xe7\x4e\x4c\x07\x89\x20\x6c\x57\x59\x79\x97\x64\x32\xb9\x7f\xdc\x83\x4c\x27\x7c\xe2\x06\xdb\x5f\xcb\x0f\xbf\xfd\x82\xc1\xe1\xf1\x8f\x8f\x5f\x56\x9b\xf5\x3a\x75\xe7\xc3\x7a\xb3\x2b\x8b\xc0\x2d\x07\x4e\x19\xa6\x66\xbc\xdd\x72\x1f\x92\x4f\xe1\x57\x38\xf3\x21\x8a\x72\x3a\xb2\x9a\xb2\xc4\x54\x97\x43\x4a\xff\x36\x14\xc0\x0a\x9d\xaa\x8f\x75\x55\x51\x78\x91\x53\x39\x84\x63\xe5\x9b\xb6\xda\x6c\x37\x0f\xe5\x6e\xb7\x5e\x9f\xb6\xa5\x6f\xda\x62\x01\x2b\x86\x5d\xcc\x13\x78\x33\x30\x0b\x6b\x7c\x7e\xfc\x5a\x2c\xa6\xfa\xe4\x40\xae\x10\x14\x93\x30\x75\xdc\x02\xad\x84\xa8\x73\x19\xf5\xd5\xf3\x9b\x21\x4d\xf1\x24\x71\x3d\xb5\x4c\x31\x8d\xcd\x5d\x4b\x5d\xbc\xdf\xd9\xc9\xa0\x7f\x75\x5d\x02\x4c\x2e\x6e\x56\x3c\xa5\xbd\xa0\x1c\x32\x69\xd9\xf5\x4d\x34\x4f\x69\x23\x3d\xbb\x34\xf5\xb1\xc6\x5f\x9b\x25\xb6\x4b\x3c\x3c\xec\xf2\xdf\xdf\xc5\x30\xaa\x1f\x75\xca\x22\x39\xc8\x26\xe6\x68\x26\x5d\x81\x39\xf6\x96\x29\x35\x74\x86\xd2\xf7\xa2\x9f\xf0\xb7\x00\x8a\xef\x24\x30\x63\x2c\x1d\x32\x2f\x77\xf1\xcf\xac\xbc\xc9\x01\x59\x3c\xbb\x8e\x4f\x63\xb0\x75\x2e\x6d\x5d\x55\x0d\x29\x95\x4d\x6f\x4d\xd9\xdb\x2a\x4f\x6c\x95\xe9\x8e\x55\xe6\x27\xdd\xe3\xab\x8b\xac\xa5\xbe\x68\x91\x55\x89\xa4\xcb\x4e\x8a\x73\x21\x8f\x81\x7c\x07\x72\x0d\xce\x2c\xc7\x4e\x23\x02\xc7\x61\x0c\x86\x13\x81\x07\x8a\xfc\x03\xaf\x6f\xfc\x39\x71\x55\x81\xc9\xe4\x93\x27\xed\x6a\x38\x71\xab\xf8\xda\x1f\x06\x5b\x7e\x8b\x79\x73\xce\x6e\xee\xf4\xeb\xf5\x7a\x5d\xe6\x9c\x93\x4b\x89\x4f\x14\x4c\x27\xa7\xc4\x39\xd9\xc8\x58\x40\x5a\x44\xd6\x65\xa2\xd0\x65\x1e\x2f\x71\x4d\xa3\x97\x0e\x69\x61\x38\xcc\x2f\xef\x17\xf4\xdd\xa6\x4e\x2f\x6f\xc1\xdd\x27\x3d\x09\xb2\xf9\x86\xdd\xa0\x9c\xb1\xff\x63\xa6\x15\xcb\xf9\xbb\x15\x2f\xa5\xff\x2f\x89\x67\xd1\x4e\xa6\x58\x2f\x31\x91\x6a\x90\xc3\xa8\xd3\x84\xf3\x8b\x06\xba\x6e\x9b\x9b\x2e\x39\x7d\x16\xd7\xd4\x69\xfb\xcd\x31\xa7\x7b\x72\xe5\x78\x0c\x64\xaf\x8f\xde\x7d\xda\xef\x97\xf8\x92\xfe\xca\xb2\x7c\x9f\x3a\x35\x90\x38\x71\xc7\xa7\x54\xa6\xc8\x5a\xe3\x31\xd5\x66\xfa\x86\xce\xb2\xeb\xd7\x2d\x0f\xe9\xfc\xa0\x00\x7a\x72\xd2\x72\xd4\x27\x1a\xb5\x1b\x42\x0d\x3a\x34\xa3\x6d\xfe\x09\x00\x00\xff\xff\x67\x6f\x12\x47\xc1\x07\x00\x00"

func ninYmlBytes() ([]byte, error) {
	return bindataRead(
		_ninYml,
		"nin.yml",
	)
}

func ninYml() (*asset, error) {
	bytes, err := ninYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nin.yml", size: 1985, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet152Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4b\x8f\xe3\x36\x0c\xbe\xfb\x57\x10\x08\x0a\xb4\xc0\x44\x4e\x32\x9b\x6d\xe1\x43\x81\x62\x4e\x03\x74\x73\x98\x2e\x8a\x02\x45\x31\xa0\x65\x3a\xd6\xae\x2c\x09\x22\x3d\x8f\x7f\x5f\xe8\x91\x47\x77\xa7\xbb\x39\x38\x16\xf5\x91\xfc\xf4\x91\x94\x1d\xce\xd4\xc1\x03\xb1\x19\x16\xb4\x07\x92\xed\x7e\x07\x2b\x48\x66\xf0\x23\xbc\xfa\x25\xc2\xec\x07\xb2\xcd\x18\x71\xa6\x67\x1f\x3f\x77\xf0\xe1\xaf\x03\x09\xac\xe0\x6c\x82\xd1\x47\x90\x89\x2a\xf4\x89\x22\x1b\xef\x3a\xd8\xaa\x0d\xac\xa0\x2e\xc1\xb8\xd1\xc7\x19\xa5\xbc\x03\xd3\x8c\x4e\x8c\x3e\xef\x97\xdd\x46\x7b\x27\x68\x1c\xc5\x0e\x56\x70\x5e\x30\x2c\x4c\x03\x88\x87\x40\x31\x21\x4b\x2e\x08\x91\x06\xa3\x53\xcc\x06\x2e\xbf\x15\xcc\x8b\x15\x13\x2c\x41\xb0\x28\x09\xcf\xa0\xd1\x41\x4f\xc0\x81\xb4\x19\x0d\x0d\x0d\x00\xce\xc3\xfb\x77\x5d\xf6\x3c\x86\xa5\x83\x88\x26\x44\xff\x89\xb4\xb4\x1a\xe3\x6c\xd7\xf3\x8b\x23\xe9\x32\x6c\xad\xc3\x92\x91\xfa\xbb\xc8\x63\x46\x86\xa0\xdf\xbf\xb3\xd4\x7d\xd7\xa9\x02\xab\xdb\xb7\xa9\x5c\x63\x07\x62\x1d\x4d\x90\xac\xf5\xaf\x0d\xc0\x6f\x0e\xcc\x8c\x47\x5a\x6b\x8b\xcc\x66\x34\xba\xa8\xed\x48\x72\x99\xfa\xc5\x58\x49\x75\xb5\xf8\x9a\x24\x95\x09\x05\x2c\x61\x74\x10\x6b\x0b\xc0\xb8\xb8\x2c\x27\xc3\xb3\x8a\x4a\x0a\x14\x8c\x0b\x8b\xb0\x6a\x00\x3e\x4e\x86\xcf\x01\xb5\x77\x6c\x58\x38\xc5\x4c\x9d\x53\xe2\xaa\x42\x85\x1c\xd3\xdc\xdb\xdc\x48\x32\x11\xd3\xc9\x8d\x01\xf5\x64\xe8\x89\x18\x6e\xd5\xfe\xe7\x1f\x80\x62\xf4\x11\x22\x0a\x81\x77\x70\xff\xfb\x1f\x7f\x3e\xdc\xad\x77\x9b\xed\x5e\x35\x91\x46\x8a\xe4\x34\x71\x6a\x87\xcb\x2a\x77\x02\x86\x74\x8a\x16\x9e\xa9\x67\x23\x94\x5e\x49\xb4\x52\x50\x94\xe9\x8d\x3b\x5e\xb5\x25\xc0\x1a\x26\x91\xc0\x5d\xdb\x62\x7c\x31\x4f\xca\xc7\x63\x1b\x86\xb1\xdd\xee\xb7\x3b\xb5\xb9\xbd\xfd\x65\xff\xb4\x55\x61\x18\x9b\x15\x58\xa3\x13\xff\xca\xbd\x46\xa8\xc6\x0e\x3e\xdc\x7f\x6c\x56\x55\x94\xc4\xe4\x0c\x81\xa6\x18\x53\xd1\x57\x30\x9a\xc8\x52\x60\x20\xaf\x81\xbe\x98\x93\x44\x28\x99\xbb\x52\xb5\xa6\x74\xee\x55\x55\x4f\xd9\xaf\xe2\x64\xd0\x7f\x0a\x9f\x00\x25\xc5\x25\x4a\xc0\x34\x9a\x42\x31\xab\x96\x53\x5f\x4c\x75\x50\x06\x33\x93\x4b\x83\xc7\x1d\xfc\xbd\xbd\x81\xdb\x1b\xd8\xed\xde\xe5\xc7\x3f\x8d\x5f\x24\x2c\x52\x4e\x91\x12\xe4\x10\x95\x4d\xd9\x6b\xa0\x72\x1f\x09\x65\x89\x94\xa1\xf8\x16\xfb\x82\xbf\x10\x68\xde\x38\x40\xc5\x58\xec\xb3\x2e\x57\xfc\xab\x2a\x5f\x9c\x01\xb2\xb9\xa6\xe6\xc7\x25\xda\x2e\xd7\xb6\x6b\xdb\x01\x05\xd5\x30\x5b\xad\x66\xdb\xe6\xa1\x69\xb3\xdc\xdc\x66\x7d\xd2\x3a\x12\xa7\x3f\x7e\x75\x4c\xa2\xe4\x45\x9a\x8c\x48\x5a\x9d\x6e\x07\xae\xf5\x3c\x46\x0c\x13\xa0\x1b\xe0\x99\xcc\x71\x12\x4e\x93\xe2\x97\xa8\x29\xe9\xd8\x23\xd3\x37\x92\xbf\x9d\x76\xbb\xdf\xad\xcb\xa0\xb4\x0d\x94\x04\x8f\x01\x65\xea\xa0\x00\xd6\x09\xc0\xaf\x73\xef\xad\xfa\xc4\xf9\x62\xab\xb9\xbf\x86\x6d\x36\x9b\x8d\xca\xb2\x24\x3a\x86\x1f\x31\xea\xc9\x3c\xa5\xb2\xa0\x65\x82\x15\x98\x11\x98\xe4\x26\xa9\xec\xb2\xd4\x27\xce\x60\x18\x10\xd2\x8b\x78\x40\x07\xd5\xf3\xfa\x1a\xbd\xba\x4f\x93\xe7\x85\xea\xb5\x20\xc5\x90\xc3\x0f\xe4\xbc\x50\xc6\xfe\x4f\x98\xd1\x58\xca\x5f\x17\x3e\x75\xc7\xd7\x02\x3f\x1b\x99\x4c\xe1\x7a\xe2\x84\x22\xd1\xf4\x8b\x94\x5b\x80\x5e\x24\xe2\xf9\x0e\xba\xec\xa5\xa4\x9f\x8d\x1b\x3a\xb8\x3b\x1c\x2a\xe7\xb4\x4e\xa9\x1c\x2d\x11\xed\xd9\xe9\xc7\xbb\xc3\xe1\x06\x1e\xd2\x43\x29\xf5\x53\x6a\xe6\x88\xc6\x19\x77\x7c\x4c\x25\x64\x92\x0e\xee\x53\xdd\xca\x97\xae\xda\xce\xdf\xa0\x3c\xc7\xd5\xa1\x01\x98\xd1\x99\x91\x58\x1e\x71\x91\xc9\xc7\x0e\xb0\x1f\x16\x3b\xfc\x1b\x00\x00\xff\xff\x94\x2b\xcb\x3a\x5d\x07\x00\x00"

func residualnet152YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet152Yml,
		"residualNet152.yml",
	)
}

func residualnet152Yml() (*asset, error) {
	bytes, err := residualnet152YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "residualNet152.yml", size: 1885, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeeznetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x49\xaf\xdb\x36\x10\xbe\xeb\x57\x0c\x60\x04\x68\x01\x3f\x49\x4e\xde\x7b\x29\x74\x28\x50\xe4\x94\x43\x7c\x68\x7b\x28\x50\x14\xc6\x98\x1a\x59\x4c\xb8\x85\x1c\x7a\xc9\xaf\x2f\x86\x92\x2d\xf7\x35\x8b\x0f\x06\x67\xf8\xcd\xc2\x6f\x16\x39\xb4\xd4\xc1\x1f\x9f\x33\xd1\x17\xda\x12\xc3\x0a\x44\x05\x7e\x80\x8b\xcf\x11\xac\xef\xc9\x54\x43\x44\x4b\x27\x1f\x3f\x75\xf0\xe1\xaf\x09\x75\x53\xc1\xe0\x23\xf0\x48\x33\xf4\x48\x31\x69\xef\x3a\xd8\xd4\x2d\xac\x60\x16\x41\xbb\xc1\x47\x8b\x3c\x9d\x21\x91\x45\xc7\x5a\xdd\xee\xa7\xdb\x4a\x79\xc7\xa8\x1d\xc5\x0e\x56\x70\x13\x12\xe4\x44\x3d\xb0\x87\x40\x51\x90\x53\x2c\x08\x91\x7a\xad\xc4\x67\x05\xcb\x6f\x05\x36\x1b\xd6\xc1\x10\x04\x83\x2c\xf8\x04\x0a\x1d\xec\x09\x52\x20\xa5\x07\x4d\x7d\x05\x80\xb6\x7f\x7e\xec\x8a\xe5\x21\xe4\x0e\x22\xea\x10\xfd\x47\x52\xdc\x28\x8c\xd6\x3c\xd8\xb3\x23\xee\x0a\xec\x41\x85\x5c\x90\xea\x87\xc8\x43\x41\x86\xa0\x9e\x1f\x0d\x75\x3f\x34\x9a\x81\xb3\xd9\xf7\x53\xb9\xc7\xf6\x94\x54\xd4\x81\x0b\xd7\xbf\x56\x70\xad\xa1\x23\x06\x54\xa3\xa6\x23\x25\x48\xda\x6a\x83\x11\x22\xa5\x6c\x38\x09\x83\xbf\x19\x3a\x6f\x89\xd7\x80\x0c\x4f\xed\x19\x06\x3a\x51\x84\x80\x52\x4e\x16\xaa\xd1\xf5\xb0\x69\x9e\xda\x96\xc7\x52\xd6\xa4\xbf\x50\x2d\xfe\x2d\x1a\x33\x11\x9f\x00\xa3\xd4\x3b\x12\x0c\x84\x49\xef\x0d\x89\xeb\x9e\x82\xf1\x17\xf0\x0e\x46\x8c\xfd\x49\x30\x27\xcd\x23\x18\x6d\x35\x53\x0f\x96\xac\x8f\x97\x35\x44\xfa\x9c\x75\x24\x30\x94\x52\x05\xa0\xbc\xb5\xd9\x69\x35\x35\x47\x9f\xa3\x76\x07\xe8\x75\xe2\xa8\xf7\x59\xec\x38\xa2\x76\xda\x1d\xd6\x25\x37\x71\x2b\x41\x29\x96\x98\x37\x9c\x48\xca\x68\x72\x9c\xea\x85\x8e\xed\x3d\x1d\x4f\x6f\xeb\xa7\x57\xc5\xc9\x2f\x6d\xfd\xe6\x15\xb0\x0f\x0f\x9b\x22\xcb\xe9\x09\x50\xe5\x88\x8a\xcb\x13\xde\x5b\x3c\x88\x75\x5d\x45\x1a\x28\x92\x53\x94\xa4\x29\x17\xa9\xf4\x23\x06\xe1\xac\x81\x13\xed\x93\x66\x92\x23\xb1\xaa\x6b\x98\xea\xb3\x97\xb7\x2c\xc3\x01\xf0\x00\x23\x73\x48\x5d\xd3\x60\x3c\xeb\x63\xed\xe3\xa1\x09\xfd\xd0\x6c\x9e\xdb\xd7\x75\xfb\xf6\xcd\x73\x7b\x7c\xac\x43\x3f\x54\x2b\x30\x5a\x91\x4b\x65\x14\x17\x0f\xb3\xb2\x83\x0f\xef\xff\xac\x56\xa0\x5d\xc8\x53\x5d\x6f\x10\xa8\x26\xa5\xb4\xde\x0a\x06\x1d\x13\x4f\x30\xe0\x4b\xa0\x17\xd3\x2a\x09\x89\xba\x03\x2d\xef\xad\xa6\xf9\xb9\xeb\xad\x6b\xf4\x3b\x3f\x05\xf4\x9f\xf6\x13\xc0\x14\x62\xf1\xb2\x74\x94\xb0\x56\x42\x2f\xaa\x79\x5c\x7b\x6d\xc9\xc9\xf8\xa7\x0e\xfe\xde\xac\xe1\xcd\x1a\x5e\xbf\x7e\x2c\x7f\xff\x54\x3e\x73\xc8\x3c\xbd\x42\x02\x14\x17\x73\x36\xd3\x5d\x05\x73\xee\x03\x21\xe7\x48\x05\x8a\x5f\xcb\x7e\xc2\x2f\x09\x54\x5f\x79\xc0\x8c\x31\xb8\x2f\xbc\xdc\xe5\x3f\xb3\xf2\xe2\x0d\x50\xd4\x73\xe8\xb4\xcb\xd1\x74\xa5\xb6\x5d\xd3\xf4\xc8\x58\xf7\xd6\xa8\xda\x9a\xa6\x8c\x6e\x33\xcd\x4d\x53\xf8\x11\x39\x5d\x5c\x22\xae\xf9\xcc\x55\xb9\x12\x92\xae\xcb\x29\xcd\x85\x3c\x44\x0c\x63\x69\xcf\x13\xe9\xc3\xc8\x49\xe6\xd8\xe7\xa8\x48\x08\xdc\x63\xa2\xef\x44\x7d\x19\xef\xb6\x1d\x9a\x0a\x26\xcf\xbb\x80\x3c\x76\xb0\xdc\xec\x8e\x9b\x7a\xf3\x90\x2e\x76\xef\x4d\xfd\x31\x95\xad\x3a\x47\xfe\x06\xb6\x6d\xdb\xb6\x2e\x94\x48\x46\x3a\xed\x30\xaa\x51\x1f\xa5\x24\x68\x12\xc1\x0a\xf4\x00\x49\xb6\x0d\x8f\xe4\x0a\xcd\xd7\xb4\x41\x27\x40\x90\x03\x7b\x40\x07\xb3\xe5\xfd\x22\xbf\xdb\xe8\x62\xb9\x24\x7d\xcf\xc9\xa4\x28\xee\x7b\x72\x5e\xf6\xc0\x48\xf0\x0d\x37\x83\x36\x54\xbe\x6f\xe9\xda\x19\xff\xe7\x58\x56\x96\x9e\x72\xbd\xe6\x84\x3c\xef\x98\xd2\xcb\x74\xe6\x88\xe0\x88\xcb\xd7\x6f\xb9\x93\xa0\x9f\xb4\xeb\x3b\x78\xb7\xdd\xce\x39\x8b\x2c\xa1\x1c\xe5\x88\xe6\x66\xf4\xd3\xbb\xed\x76\x0d\xbf\xcb\x5f\x5d\xd7\x3f\x4b\x23\xcf\x3b\x6e\x27\x55\x4c\xc4\xdd\x6d\x01\xc9\x3c\x4e\xba\xdb\x57\xb0\xcc\xf0\x6c\x50\x01\x58\x74\x7a\xa0\xc4\x3b\xcc\x3c\xfa\xd8\x01\xee\xfb\x6c\xfa\xea\xdf\x00\x00\x00\xff\xff\x74\xbc\xc7\xec\xdc\x07\x00\x00"

func squeeznetYmlBytes() ([]byte, error) {
	return bindataRead(
		_squeeznetYml,
		"squeeznet.yml",
	)
}

func squeeznetYml() (*asset, error) {
	bytes, err := squeeznetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "squeeznet.yml", size: 2012, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg16Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\xdf\x8b\xe3\x36\x10\x7e\xf7\x5f\xf1\x81\x29\xb4\xb0\xb1\x93\xdd\x4d\x68\xfd\x50\x28\xf7\x70\xdc\xc3\xed\x43\x29\xa5\x50\xca\xa2\xc8\x63\x5b\x77\xb2\x24\xa4\x71\x76\xf3\xdf\x97\x91\x9d\x38\xb7\xbd\xde\xe5\x21\x48\xa3\x4f\x33\x9f\xbe\xf9\x61\xa7\x46\x6a\xf0\xe7\xfb\xf7\xbb\x03\x4a\xc8\x0e\xbe\xc3\xd9\x4f\x11\xa3\x6f\xc9\x16\x5d\x54\x23\xbd\xf8\xf8\xb9\xc1\xc7\xbf\x9e\x88\x51\xe2\x6a\x42\xe7\x23\x78\xa0\x05\x7a\xa2\x98\x8c\x77\x0d\x76\xd5\x16\x25\x96\x2d\x8c\xeb\x7c\x1c\x15\xcf\x6b\x24\x1a\x95\x63\xa3\xaf\xe7\xf3\x69\xa1\xbd\x63\x65\x1c\xc5\x06\x25\xae\x9b\x84\x29\x51\x0b\xf6\x08\x14\x05\x39\xc7\x42\x88\xd4\x1a\x2d\x3e\x0b\xac\xbf\x12\xe3\x64\xd9\x04\x4b\x08\x56\xb1\xe0\x13\xb4\x72\x38\x12\x52\x20\x6d\x3a\x43\x6d\x01\xa8\xb1\x3d\x3c\x36\xf9\x66\x1f\xa6\x06\x51\x99\x10\xfd\x27\xd2\x5c\x6b\x15\x47\xbb\x19\x5f\x1d\x71\x93\x61\x1b\x1d\xa6\x8c\xd4\xdf\x45\xf6\x19\x19\x82\x3e\x3c\x5a\x6a\xbe\x7b\x69\x01\x2e\xd7\xbe\x4d\xe5\x16\xdb\x52\xd2\xd1\x04\xce\x5a\xff\x5a\x00\xbf\x39\x98\x51\xf5\xb4\xd1\x56\xa5\x64\x3a\xa3\x67\xb5\xb5\x77\x27\x6f\x27\x59\x2b\x0b\x47\x2c\x49\xab\x0a\x48\xbe\x45\xd7\x04\x75\xb1\xe2\xc5\xf0\x80\xdd\x01\x56\x9d\x45\x75\xdf\xe1\xe1\xf5\xe1\xd6\x03\x3a\x63\x99\x62\xba\xdc\x57\x7a\x30\x74\xa2\x84\xfb\x7d\xb5\xff\x01\xec\xc3\x66\x07\x8a\xd1\x47\x28\xd7\xe2\xe7\x6a\x3b\x1b\xf7\x8b\xd1\xbb\x5c\x2a\x1f\x84\xa8\xd4\x91\x1e\x94\xb5\xe4\x7a\x42\xab\x58\x25\x62\x29\x8e\xfb\xed\x6e\x5f\x15\x91\x3a\x8a\xe4\x34\x25\xa9\x85\x75\x97\xcb\x40\x05\xe1\x57\xe3\x85\x8e\xc9\x30\xc9\x92\x58\x57\x15\x66\x59\x8e\xc6\xf5\x37\x35\x09\x6c\x30\x30\x87\xd4\xd4\xb5\x8a\xaf\xe6\x54\xf9\xd8\xd7\xa1\xed\xea\xdd\xe3\xf6\x97\x6a\xb7\xdf\x1f\x4e\x87\x2a\xb4\x5d\x51\xc2\x1a\x4d\x2e\xe5\x06\x58\x1d\x2c\xc6\x06\x1f\x3f\xfc\x51\x94\x30\x2e\x4c\x9c\x89\x5c\x21\x28\x66\xa3\x24\xbc\x44\x67\x62\xe2\x19\x06\x3e\x07\x7a\xd3\x23\xc2\x47\xcc\xcd\x9c\xb1\x62\xae\xda\x9b\x8c\x5e\xa2\xdf\xf8\xc9\xa0\x2f\x92\x2e\x80\x39\xc4\xea\x25\x28\x69\x4b\xc9\x90\x88\x96\x43\xaf\xa6\xa5\x49\x5a\x33\x92\x93\xa6\x4b\x0d\xfe\xde\xdd\xe1\xe1\x0e\xf7\xf7\x8f\xf9\xef\x9f\xc2\x4f\x1c\x26\x9e\x5f\x21\x01\xb2\x8b\x85\xcd\x7c\x56\x60\xe1\xde\x91\xe2\x29\x52\x86\xaa\xaf\xb1\x9f\xf1\x2b\x81\xe2\x2b\x0f\x58\x30\x56\x1d\xb3\x2e\x37\xfc\x17\x55\xde\xbc\x01\xd9\xbc\x84\x4e\xcf\x53\xb4\x4d\x4e\x6d\x53\xd7\x52\x41\x55\x3b\x5a\x5d\x8d\xb6\xce\x0d\x53\x67\xb9\x53\x9d\xf5\x91\x7d\x3a\xbb\x44\x5c\xf1\x2b\x17\xf9\x48\x44\xba\x8c\x84\xb4\x24\xb2\x8f\x2a\x0c\xb9\x7a\x5f\xc8\xf4\x03\x27\x44\x4a\x7e\x8a\x9a\x44\xc0\xa3\x4a\xf4\x8d\xa8\x6f\xe2\x9d\xfa\xbe\x2e\x30\xbb\x7c\x0e\x8a\x87\x06\xa7\xbe\xdf\x1d\x36\xe9\x3c\x1e\xbd\xad\x3e\xa5\x3c\xba\x96\x40\x5f\x20\xb6\xdb\xed\xb6\xca\xef\x96\xb0\x26\x3d\xab\xa8\x07\x73\x12\xdd\x95\x4d\x84\x12\xa6\x43\x22\xbe\x13\x19\xe7\xae\xba\x70\x83\x91\x9e\x96\x05\x7b\x28\x87\xe5\xe6\xed\x8c\xbc\x19\x96\x72\x73\x25\x78\xfb\xf0\xd9\x90\xdd\xb7\xe4\x3c\x53\xc6\xfe\x8f\x9b\xce\x58\xca\x9f\x8e\x74\x49\xff\x7f\x85\x94\xf1\x62\x66\xae\x17\x4e\x8a\x39\x9a\xe3\xc4\x73\x97\xd3\x2b\xc7\x75\x1a\xad\x67\x12\xf4\xb3\x71\x6d\x83\x77\x4f\x4f\x0b\x67\xd9\x4b\x28\x47\x53\x5c\x07\x1b\x7e\x7c\xf7\xf4\x74\x87\xdf\xe5\xaf\xaa\xaa\x9f\xa4\x5a\xa3\x32\xce\xb8\xfe\x79\x19\x31\xcd\x3a\x7e\xca\xeb\xd8\xb9\x7c\x60\x72\xa3\x2e\x17\x0a\x60\x54\xce\x74\x94\xf8\x59\x4d\x3c\xf8\xd8\x40\x1d\xdb\xc9\xb6\xff\x06\x00\x00\xff\xff\x70\xf9\x9b\x1b\x31\x07\x00\x00"

func vgg16YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg16Yml,
		"vgg16.yml",
	)
}

func vgg16Yml() (*asset, error) {
	bytes, err := vgg16YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg16.yml", size: 1841, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x4d\x8b\xe4\x36\x10\xbd\xfb\x57\x3c\x30\x81\x04\xa6\xed\xee\x99\xe9\x21\xe3\x43\x20\xec\x61\xd9\xc3\xce\x21\x84\x10\x08\x61\x50\xcb\x65\x5b\xbb\xb2\x24\xa4\x72\xcf\xf4\xbf\x0f\x25\xbb\xdb\xbd\x93\xfd\xe8\x43\x23\x95\x9e\xaa\x9e\x5e\x7d\xd8\xa9\x91\x1a\xfc\xf5\xfe\xfd\xee\x11\x25\x64\x07\xdf\xe1\xe4\xa7\x88\xd1\xb7\x64\x8b\x2e\xaa\x91\x5e\x7c\xfc\xdc\xe0\xe3\xdf\x4f\xc4\x28\x71\x31\xa1\xf3\x11\x3c\xd0\x02\x3d\x52\x4c\xc6\xbb\x06\xbb\x6a\x8b\x12\xcb\x16\xc6\x75\x3e\x8e\x8a\xe7\x35\x12\x8d\xca\xb1\xd1\x97\xf3\xf9\xb4\xd0\xde\xb1\x32\x8e\x62\x83\x12\x97\x4d\xc2\x94\xa8\x05\x7b\x04\x8a\x82\x9c\x63\x21\x44\x6a\x8d\x16\x9f\x05\xd6\x5f\x89\x71\xb2\x6c\x82\x25\x04\xab\x58\xf0\x09\x5a\x39\x1c\x08\x29\x90\x36\x9d\xa1\xb6\x00\xd4\xd8\x3e\xdc\x37\xf9\x66\x1f\xa6\x06\x51\x99\x10\xfd\x27\xd2\x5c\x6b\x15\x47\xbb\x19\x5f\x1d\x71\x93\x61\x1b\x1d\xa6\x8c\xd4\x3f\x44\xf6\x19\x19\x82\x7e\xb8\xb7\xd4\xfc\xf0\xd2\x02\x5c\xae\x7d\x9f\xca\x35\xb6\xa5\xa4\xa3\x09\x9c\xb5\xfe\xad\x00\x7e\x77\x30\xa3\xea\x69\xa3\xad\x4a\xc9\x74\x46\xcf\x6a\x6b\xef\x8e\xde\x4e\xb2\x56\x16\x8e\x58\x92\x56\x15\x90\x7c\x8b\xae\x09\xea\x6c\xc5\x8b\xe1\x01\xbb\x47\x58\x75\x12\xd5\x7d\x87\xbb\xd7\xbb\x6b\x0f\xe8\x8c\x65\x8a\xe9\x7c\x5f\xe9\xc1\xd0\x91\x12\x6e\xf7\xd5\xfe\x27\xb0\x0f\x9b\x1d\x28\x46\x1f\xa1\x5c\x8b\x5f\xab\xed\x6c\xdc\x2f\x46\xef\x72\xa9\x7c\x10\xa2\x52\x47\x7a\x50\xd6\x92\xeb\x09\xad\x62\x95\x88\xa5\x38\x6e\xb7\xbb\x7d\x55\x44\xea\x28\x92\xd3\x94\xa4\x16\xd6\x5d\x2e\x03\x15\x84\x5f\x8d\x17\x3a\x24\xc3\x24\x4b\x62\x5d\x55\x98\x65\x39\x18\xd7\x5f\xd5\x24\xb0\xc1\xc0\x1c\x52\x53\xd7\x2a\xbe\x9a\x63\xe5\x63\x5f\x87\xb6\xab\x77\xf7\xdb\xc7\x6a\xb7\xdf\x3f\x1c\x1f\xaa\xd0\x76\x45\x09\x6b\x34\xb9\x94\x1b\x60\x75\xb0\x18\x1b\x7c\xfc\xf0\x67\x51\xc2\xb8\x30\x71\x26\x72\x81\xa0\x98\x8d\x92\xf0\x12\x9d\x89\x89\x67\x18\xf8\x14\xe8\x4d\x8f\x08\x1f\x31\x37\x73\xc6\x8a\xb9\x6a\xaf\x32\x7a\x8e\x7e\xe5\x27\x83\xbe\x48\xba\x00\xe6\x10\xab\x97\xa0\xa4\x2d\x25\x43\x22\x5a\x0e\xbd\x9a\x96\x26\x69\xcd\x48\x4e\x9a\x2e\x35\xf8\x67\x77\x83\xbb\x1b\xdc\xde\xde\xe7\xbf\x7f\x0b\x3f\x71\x98\x78\x7e\x85\x04\xc8\x2e\x16\x36\xf3\x59\x81\x85\x7b\x47\x8a\xa7\x48\x19\xaa\xbe\xc6\x7e\xc6\xaf\x04\x8a\xaf\x3c\x60\xc1\x58\x75\xc8\xba\x5c\xf1\x5f\x54\x79\xf3\x06\x64\xf3\x12\x3a\x3d\x4f\xd1\x36\x39\xb5\x4d\x5d\x4b\x05\x55\xed\x68\x75\x35\xda\x3a\x37\x4c\x9d\xe5\x4e\x75\xd6\x47\xf6\xe9\xe4\x12\x71\xc5\xaf\x5c\xe4\x23\x11\xe9\x3c\x12\xd2\x92\xc8\x3e\xaa\x30\xe4\xea\x7d\x21\xd3\x0f\x9c\x10\x29\xf9\x29\x6a\x12\x01\x0f\x2a\xd1\x77\xa2\xbe\x89\x77\xec\xfb\xba\xc0\xec\xf2\x39\x28\x1e\x1a\x1c\xfb\x7e\xf7\xb8\x49\xa7\xf1\xe0\x6d\xf5\x29\xe5\xd1\xb5\x04\xfa\x02\xb1\xdd\x6e\xb7\x55\x7e\xb7\x84\x35\xe9\x59\x45\x3d\x98\xa3\xe8\xae\x6c\x22\x94\x30\x1d\x12\xf1\x8d\xc8\x38\x77\xd5\x99\x1b\x8c\xf4\xb4\x2c\xd8\x43\x39\x2c\x37\xaf\x67\xe4\xd5\xb0\x94\x9b\x2b\xc1\xeb\x87\xcf\x86\xec\xbe\x25\xe7\x99\x32\xf6\x1b\x6e\x3a\x63\x29\x7f\x3a\xd2\x39\xfd\xff\x17\x52\xc6\x8b\x99\xb9\x9e\x39\x29\xe6\x68\x0e\x13\xcf\x5d\x4e\xaf\x1c\xd7\x69\xb4\x9e\x49\xd0\xcf\xc6\xb5\x0d\xde\x3d\x3d\x2d\x9c\x65\x2f\xa1\x1c\x4d\x71\x1d\x6c\xf8\xf9\xdd\xd3\xd3\x0d\xfe\x90\xbf\xaa\xaa\x7e\x91\x6a\x8d\xca\x38\xe3\xfa\xe7\x65\xc4\x34\xeb\xf8\x29\x2f\x63\xe7\xfc\x81\xc9\x8d\xba\x5c\x28\x80\x51\x39\xd3\x51\xe2\x67\x35\xf1\xe0\x63\x03\x75\x68\x27\xdb\xfe\x17\x00\x00\xff\xff\x2c\x28\xff\x68\x31\x07\x00\x00"

func vgg19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg19Yml,
		"vgg19.yml",
	)
}

func vgg19Yml() (*asset, error) {
	bytes, err := vgg19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg19.yml", size: 1841, mode: os.FileMode(420), modTime: time.Unix(1497483730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"ResNeXt101.yml": resnext101Yml,
	"ResNeXt50.yml": resnext50Yml,
	"ResidualNet101.yml": residualnet101Yml,
	"ResidualNet18.yml": residualnet18Yml,
	"ResidualNet200.yml": residualnet200Yml,
	"ResidualNet34.yml": residualnet34Yml,
	"ResidualNet50.yml": residualnet50Yml,
	"Resnet152_11k.yml": resnet152_11kYml,
	"caffenet.yml": caffenetYml,
	"inceptionv3.yml": inceptionv3Yml,
	"locationnet.yml": locationnetYml,
	"nin.yml": ninYml,
	"residualNet152.yml": residualnet152Yml,
	"squeeznet.yml": squeeznetYml,
	"vgg16.yml": vgg16Yml,
	"vgg19.yml": vgg19Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"ResNeXt101.yml": &bintree{resnext101Yml, map[string]*bintree{}},
	"ResNeXt50.yml": &bintree{resnext50Yml, map[string]*bintree{}},
	"ResidualNet101.yml": &bintree{residualnet101Yml, map[string]*bintree{}},
	"ResidualNet18.yml": &bintree{residualnet18Yml, map[string]*bintree{}},
	"ResidualNet200.yml": &bintree{residualnet200Yml, map[string]*bintree{}},
	"ResidualNet34.yml": &bintree{residualnet34Yml, map[string]*bintree{}},
	"ResidualNet50.yml": &bintree{residualnet50Yml, map[string]*bintree{}},
	"Resnet152_11k.yml": &bintree{resnet152_11kYml, map[string]*bintree{}},
	"caffenet.yml": &bintree{caffenetYml, map[string]*bintree{}},
	"inceptionv3.yml": &bintree{inceptionv3Yml, map[string]*bintree{}},
	"locationnet.yml": &bintree{locationnetYml, map[string]*bintree{}},
	"nin.yml": &bintree{ninYml, map[string]*bintree{}},
	"residualNet152.yml": &bintree{residualnet152Yml, map[string]*bintree{}},
	"squeeznet.yml": &bintree{squeeznetYml, map[string]*bintree{}},
	"vgg16.yml": &bintree{vgg16Yml, map[string]*bintree{}},
	"vgg19.yml": &bintree{vgg19Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

