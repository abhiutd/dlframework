// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Wed, 07 Jun 2017 16:53:37 BST.
// By https://git.io/c-for-go. DO NOT EDIT.

package gomxnet

/*
#cgo LDFLAGS: -lmxnet
#cgo CFLAGS: -I..
#include "c_api.h"
#include "c_predict_api.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// GetLastError function as declared in bindingsgen/c_api.h:161
func GetLastError() string {
	__ret := C.MXGetLastError()
	__v := packPCharString(__ret)
	return __v
}

// RandomSeed function as declared in bindingsgen/c_api.h:171
func RandomSeed(seed int32) int32 {
	cseed, _ := (C.int)(seed), cgoAllocsUnknown
	__ret := C.MXRandomSeed(cseed)
	__v := (int32)(__ret)
	return __v
}

// NotifyShutdown function as declared in bindingsgen/c_api.h:179
func NotifyShutdown() int32 {
	__ret := C.MXNotifyShutdown()
	__v := (int32)(__ret)
	return __v
}

// SetProfilerConfig function as declared in bindingsgen/c_api.h:188
func SetProfilerConfig(mode int32, filename string) int32 {
	cmode, _ := (C.int)(mode), cgoAllocsUnknown
	filename = safeString(filename)
	cfilename, _ := unpackPCharString(filename)
	__ret := C.MXSetProfilerConfig(cmode, cfilename)
	runtime.KeepAlive(filename)
	__v := (int32)(__ret)
	return __v
}

// SetProfilerState function as declared in bindingsgen/c_api.h:196
func SetProfilerState(state int32) int32 {
	cstate, _ := (C.int)(state), cgoAllocsUnknown
	__ret := C.MXSetProfilerState(cstate)
	__v := (int32)(__ret)
	return __v
}

// DumpProfile function as declared in bindingsgen/c_api.h:199
func DumpProfile() int32 {
	__ret := C.MXDumpProfile()
	__v := (int32)(__ret)
	return __v
}

// SetNumOMPThreads function as declared in bindingsgen/c_api.h:202
func SetNumOMPThreads(threadNum int32) int32 {
	cthreadNum, _ := (C.int)(threadNum), cgoAllocsUnknown
	__ret := C.MXSetNumOMPThreads(cthreadNum)
	__v := (int32)(__ret)
	return __v
}

// NDArrayCreateNone function as declared in bindingsgen/c_api.h:214
func NDArrayCreateNone(out []NDArrayHandle) int32 {
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayCreateNone(cout)
	__v := (int32)(__ret)
	return __v
}

// NDArrayCreate function as declared in bindingsgen/c_api.h:226
func NDArrayCreate(shape []uint32, ndim uint32, devType int32, devId int32, delayAlloc int32, out []NDArrayHandle) int32 {
	cshape, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&shape)).Data)), cgoAllocsUnknown
	cndim, _ := (C.mx_uint)(ndim), cgoAllocsUnknown
	cdevType, _ := (C.int)(devType), cgoAllocsUnknown
	cdevId, _ := (C.int)(devId), cgoAllocsUnknown
	cdelayAlloc, _ := (C.int)(delayAlloc), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayCreate(cshape, cndim, cdevType, cdevId, cdelayAlloc, cout)
	__v := (int32)(__ret)
	return __v
}

// NDArrayCreateEx function as declared in bindingsgen/c_api.h:245
func NDArrayCreateEx(shape []uint32, ndim uint32, devType int32, devId int32, delayAlloc int32, dtype int32, out []NDArrayHandle) int32 {
	cshape, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&shape)).Data)), cgoAllocsUnknown
	cndim, _ := (C.mx_uint)(ndim), cgoAllocsUnknown
	cdevType, _ := (C.int)(devType), cgoAllocsUnknown
	cdevId, _ := (C.int)(devId), cgoAllocsUnknown
	cdelayAlloc, _ := (C.int)(delayAlloc), cgoAllocsUnknown
	cdtype, _ := (C.int)(dtype), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayCreateEx(cshape, cndim, cdevType, cdevId, cdelayAlloc, cdtype, cout)
	__v := (int32)(__ret)
	return __v
}

// NDArrayLoadFromRawBytes function as declared in bindingsgen/c_api.h:259
func NDArrayLoadFromRawBytes(buf unsafe.Pointer, size uint, out []NDArrayHandle) int32 {
	cbuf, _ := (unsafe.Pointer)(unsafe.Pointer(buf)), cgoAllocsUnknown
	csize, _ := (C.size_t)(size), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayLoadFromRawBytes(cbuf, csize, cout)
	__v := (int32)(__ret)
	return __v
}

// NDArraySaveRawBytes function as declared in bindingsgen/c_api.h:269
func NDArraySaveRawBytes(handle NDArrayHandle, outSize []uint, outBuf []string) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	coutSize, _ := (*C.size_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	coutBuf, _ := unpackArgSString(outBuf)
	__ret := C.MXNDArraySaveRawBytes(chandle, coutSize, coutBuf)
	packSString(outBuf, coutBuf)
	__v := (int32)(__ret)
	return __v
}

// NDArraySave function as declared in bindingsgen/c_api.h:280
func NDArraySave(fname string, numArgs uint32, args []NDArrayHandle, keys []string) int32 {
	fname = safeString(fname)
	cfname, _ := unpackPCharString(fname)
	cnumArgs, _ := (C.mx_uint)(numArgs), cgoAllocsUnknown
	cargs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&args)).Data)), cgoAllocsUnknown
	ckeys, _ := unpackArgSString(keys)
	__ret := C.MXNDArraySave(cfname, cnumArgs, cargs, ckeys)
	packSString(keys, ckeys)
	runtime.KeepAlive(fname)
	__v := (int32)(__ret)
	return __v
}

// NDArrayLoad function as declared in bindingsgen/c_api.h:293
func NDArrayLoad(fname string, outSize []uint32, outArr [][]NDArrayHandle, outNameSize []uint32, outNames [][]string) int32 {
	fname = safeString(fname)
	cfname, _ := unpackPCharString(fname)
	coutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	coutArr, _ := unpackArgSSNDArrayHandle(outArr)
	coutNameSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outNameSize)).Data)), cgoAllocsUnknown
	coutNames, _ := unpackArgSSString(outNames)
	__ret := C.MXNDArrayLoad(cfname, coutSize, coutArr, coutNameSize, coutNames)
	packSSString(outNames, coutNames)
	packSSNDArrayHandle(outArr, coutArr)
	runtime.KeepAlive(fname)
	__v := (int32)(__ret)
	return __v
}

// NDArraySyncCopyFromCPU function as declared in bindingsgen/c_api.h:309
func NDArraySyncCopyFromCPU(handle NDArrayHandle, data unsafe.Pointer, size uint) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	cdata, _ := (unsafe.Pointer)(unsafe.Pointer(data)), cgoAllocsUnknown
	csize, _ := (C.size_t)(size), cgoAllocsUnknown
	__ret := C.MXNDArraySyncCopyFromCPU(chandle, cdata, csize)
	__v := (int32)(__ret)
	return __v
}

// NDArraySyncCopyToCPU function as declared in bindingsgen/c_api.h:323
func NDArraySyncCopyToCPU(handle NDArrayHandle, data unsafe.Pointer, size uint) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	cdata, _ := (unsafe.Pointer)(unsafe.Pointer(data)), cgoAllocsUnknown
	csize, _ := (C.size_t)(size), cgoAllocsUnknown
	__ret := C.MXNDArraySyncCopyToCPU(chandle, cdata, csize)
	__v := (int32)(__ret)
	return __v
}

// NDArrayWaitToRead function as declared in bindingsgen/c_api.h:332
func NDArrayWaitToRead(handle NDArrayHandle) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	__ret := C.MXNDArrayWaitToRead(chandle)
	__v := (int32)(__ret)
	return __v
}

// NDArrayWaitToWrite function as declared in bindingsgen/c_api.h:339
func NDArrayWaitToWrite(handle NDArrayHandle) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	__ret := C.MXNDArrayWaitToWrite(chandle)
	__v := (int32)(__ret)
	return __v
}

// NDArrayWaitAll function as declared in bindingsgen/c_api.h:345
func NDArrayWaitAll() int32 {
	__ret := C.MXNDArrayWaitAll()
	__v := (int32)(__ret)
	return __v
}

// NDArrayFree function as declared in bindingsgen/c_api.h:351
func NDArrayFree(handle NDArrayHandle) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	__ret := C.MXNDArrayFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// NDArraySlice function as declared in bindingsgen/c_api.h:360
func NDArraySlice(handle NDArrayHandle, sliceBegin uint32, sliceEnd uint32, out []NDArrayHandle) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	csliceBegin, _ := (C.mx_uint)(sliceBegin), cgoAllocsUnknown
	csliceEnd, _ := (C.mx_uint)(sliceEnd), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArraySlice(chandle, csliceBegin, csliceEnd, cout)
	__v := (int32)(__ret)
	return __v
}

// NDArrayAt function as declared in bindingsgen/c_api.h:371
func NDArrayAt(handle NDArrayHandle, idx uint32, out []NDArrayHandle) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	cidx, _ := (C.mx_uint)(idx), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayAt(chandle, cidx, cout)
	__v := (int32)(__ret)
	return __v
}

// NDArrayReshape function as declared in bindingsgen/c_api.h:382
func NDArrayReshape(handle NDArrayHandle, ndim int32, dims []int32, out []NDArrayHandle) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	cndim, _ := (C.int)(ndim), cgoAllocsUnknown
	cdims, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&dims)).Data)), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayReshape(chandle, cndim, cdims, cout)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetShape function as declared in bindingsgen/c_api.h:393
func NDArrayGetShape(handle NDArrayHandle, outDim []uint32, outPdata [][]uint32) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	coutDim, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outDim)).Data)), cgoAllocsUnknown
	coutPdata, _ := unpackArgSSUUint32(outPdata)
	__ret := C.MXNDArrayGetShape(chandle, coutDim, coutPdata)
	packSSUUint32(outPdata, coutPdata)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetData function as declared in bindingsgen/c_api.h:402
func NDArrayGetData(handle NDArrayHandle, outPdata []unsafe.Pointer) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	coutPdata, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outPdata)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayGetData(chandle, coutPdata)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetDType function as declared in bindingsgen/c_api.h:410
func NDArrayGetDType(handle NDArrayHandle, outDtype []int32) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	coutDtype, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outDtype)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayGetDType(chandle, coutDtype)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetContext function as declared in bindingsgen/c_api.h:419
func NDArrayGetContext(handle NDArrayHandle, outDevType []int32, outDevId []int32) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	coutDevType, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outDevType)).Data)), cgoAllocsUnknown
	coutDevId, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outDevId)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayGetContext(chandle, coutDevType, coutDevId)
	__v := (int32)(__ret)
	return __v
}

// NDArrayDetach function as declared in bindingsgen/c_api.h:427
func NDArrayDetach(handle NDArrayHandle, out []NDArrayHandle) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayDetach(chandle, cout)
	__v := (int32)(__ret)
	return __v
}

// NDArraySetGradState function as declared in bindingsgen/c_api.h:434
func NDArraySetGradState(handle NDArrayHandle, state int32) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	cstate, _ := (C.int)(state), cgoAllocsUnknown
	__ret := C.MXNDArraySetGradState(chandle, cstate)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetGradState function as declared in bindingsgen/c_api.h:441
func NDArrayGetGradState(handle NDArrayHandle, out []int32) int32 {
	chandle, _ := (C.NDArrayHandle)(handle), cgoAllocsUnknown
	cout, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayGetGradState(chandle, cout)
	__v := (int32)(__ret)
	return __v
}

// FuncGetInfo function as declared in bindingsgen/c_api.h:474
func FuncGetInfo(fun unsafe.Pointer, name []string, description []string, numArgs []uint32, argNames [][]string, argTypeInfos [][]string, argDescriptions [][]string, returnType []string) int32 {
	cfun, _ := (C.FunctionHandle)(fun), cgoAllocsUnknown
	cname, _ := unpackArgSString(name)
	cdescription, _ := unpackArgSString(description)
	cnumArgs, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numArgs)).Data)), cgoAllocsUnknown
	cargNames, _ := unpackArgSSString(argNames)
	cargTypeInfos, _ := unpackArgSSString(argTypeInfos)
	cargDescriptions, _ := unpackArgSSString(argDescriptions)
	creturnType, _ := unpackArgSString(returnType)
	__ret := C.MXFuncGetInfo(cfun, cname, cdescription, cnumArgs, cargNames, cargTypeInfos, cargDescriptions, creturnType)
	packSString(returnType, creturnType)
	packSSString(argDescriptions, cargDescriptions)
	packSSString(argTypeInfos, cargTypeInfos)
	packSSString(argNames, cargNames)
	packSString(description, cdescription)
	packSString(name, cname)
	__v := (int32)(__ret)
	return __v
}

// FuncDescribe function as declared in bindingsgen/c_api.h:492
func FuncDescribe(fun unsafe.Pointer, numUseVars []uint32, numScalars []uint32, numMutateVars []uint32, typeMask []int32) int32 {
	cfun, _ := (C.FunctionHandle)(fun), cgoAllocsUnknown
	cnumUseVars, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numUseVars)).Data)), cgoAllocsUnknown
	cnumScalars, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numScalars)).Data)), cgoAllocsUnknown
	cnumMutateVars, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numMutateVars)).Data)), cgoAllocsUnknown
	ctypeMask, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&typeMask)).Data)), cgoAllocsUnknown
	__ret := C.MXFuncDescribe(cfun, cnumUseVars, cnumScalars, cnumMutateVars, ctypeMask)
	__v := (int32)(__ret)
	return __v
}

// FuncInvoke function as declared in bindingsgen/c_api.h:507
func FuncInvoke(fun unsafe.Pointer, useVars []NDArrayHandle, scalarArgs []float32, mutateVars []NDArrayHandle) int32 {
	cfun, _ := (C.FunctionHandle)(fun), cgoAllocsUnknown
	cuseVars, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&useVars)).Data)), cgoAllocsUnknown
	cscalarArgs, _ := (*C.mx_float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&scalarArgs)).Data)), cgoAllocsUnknown
	cmutateVars, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&mutateVars)).Data)), cgoAllocsUnknown
	__ret := C.MXFuncInvoke(cfun, cuseVars, cscalarArgs, cmutateVars)
	__v := (int32)(__ret)
	return __v
}

// FuncInvokeEx function as declared in bindingsgen/c_api.h:524
func FuncInvokeEx(fun unsafe.Pointer, useVars []NDArrayHandle, scalarArgs []float32, mutateVars []NDArrayHandle, numParams int32, paramKeys [][]byte, paramVals [][]byte) int32 {
	cfun, _ := (C.FunctionHandle)(fun), cgoAllocsUnknown
	cuseVars, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&useVars)).Data)), cgoAllocsUnknown
	cscalarArgs, _ := (*C.mx_float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&scalarArgs)).Data)), cgoAllocsUnknown
	cmutateVars, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&mutateVars)).Data)), cgoAllocsUnknown
	cnumParams, _ := (C.int)(numParams), cgoAllocsUnknown
	cparamKeys, _ := unpackArgSSByte(paramKeys)
	cparamVals, _ := unpackArgSSByte(paramVals)
	__ret := C.MXFuncInvokeEx(cfun, cuseVars, cscalarArgs, cmutateVars, cnumParams, cparamKeys, cparamVals)
	packSSByte(paramVals, cparamVals)
	packSSByte(paramKeys, cparamKeys)
	__v := (int32)(__ret)
	return __v
}

// ImperativeInvoke function as declared in bindingsgen/c_api.h:543
func ImperativeInvoke(creator unsafe.Pointer, numInputs int32, inputs []NDArrayHandle, numOutputs []int32, outputs [][]NDArrayHandle, numParams int32, paramKeys []string, paramVals []string) int32 {
	ccreator, _ := (C.AtomicSymbolCreator)(creator), cgoAllocsUnknown
	cnumInputs, _ := (C.int)(numInputs), cgoAllocsUnknown
	cinputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inputs)).Data)), cgoAllocsUnknown
	cnumOutputs, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numOutputs)).Data)), cgoAllocsUnknown
	coutputs, _ := unpackArgSSNDArrayHandle(outputs)
	cnumParams, _ := (C.int)(numParams), cgoAllocsUnknown
	cparamKeys, _ := unpackArgSString(paramKeys)
	cparamVals, _ := unpackArgSString(paramVals)
	__ret := C.MXImperativeInvoke(ccreator, cnumInputs, cinputs, cnumOutputs, coutputs, cnumParams, cparamKeys, cparamVals)
	packSString(paramVals, cparamVals)
	packSString(paramKeys, cparamKeys)
	packSSNDArrayHandle(outputs, coutputs)
	__v := (int32)(__ret)
	return __v
}

// AutogradSetIsTraining function as declared in bindingsgen/c_api.h:557
func AutogradSetIsTraining(isTraining int32, prev []int32) int32 {
	cisTraining, _ := (C.int)(isTraining), cgoAllocsUnknown
	cprev, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&prev)).Data)), cgoAllocsUnknown
	__ret := C.MXAutogradSetIsTraining(cisTraining, cprev)
	__v := (int32)(__ret)
	return __v
}

// AutogradMarkVariables function as declared in bindingsgen/c_api.h:564
func AutogradMarkVariables(numVar uint32, varHandles []NDArrayHandle, reqsArray []uint32, gradHandles []NDArrayHandle) int32 {
	cnumVar, _ := (C.mx_uint)(numVar), cgoAllocsUnknown
	cvarHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&varHandles)).Data)), cgoAllocsUnknown
	creqsArray, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&reqsArray)).Data)), cgoAllocsUnknown
	cgradHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&gradHandles)).Data)), cgoAllocsUnknown
	__ret := C.MXAutogradMarkVariables(cnumVar, cvarHandles, creqsArray, cgradHandles)
	__v := (int32)(__ret)
	return __v
}

// AutogradComputeGradient function as declared in bindingsgen/c_api.h:574
func AutogradComputeGradient(numOutput uint32, outputHandles []NDArrayHandle) int32 {
	cnumOutput, _ := (C.mx_uint)(numOutput), cgoAllocsUnknown
	coutputHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outputHandles)).Data)), cgoAllocsUnknown
	__ret := C.MXAutogradComputeGradient(cnumOutput, coutputHandles)
	__v := (int32)(__ret)
	return __v
}

// AutogradBackward function as declared in bindingsgen/c_api.h:584
func AutogradBackward(numOutput uint32, outputHandles []NDArrayHandle, ogradHandles []NDArrayHandle, retainGraph int32) int32 {
	cnumOutput, _ := (C.mx_uint)(numOutput), cgoAllocsUnknown
	coutputHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outputHandles)).Data)), cgoAllocsUnknown
	cogradHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ogradHandles)).Data)), cgoAllocsUnknown
	cretainGraph, _ := (C.int)(retainGraph), cgoAllocsUnknown
	__ret := C.MXAutogradBackward(cnumOutput, coutputHandles, cogradHandles, cretainGraph)
	__v := (int32)(__ret)
	return __v
}

// CachedCreateOp function as declared in bindingsgen/c_api.h:591
func CachedCreateOp(creator unsafe.Pointer, numInputs int32, numParams int32, paramKeys []string, paramVals []string, out []unsafe.Pointer) int32 {
	ccreator, _ := (C.AtomicSymbolCreator)(creator), cgoAllocsUnknown
	cnumInputs, _ := (C.int)(numInputs), cgoAllocsUnknown
	cnumParams, _ := (C.int)(numParams), cgoAllocsUnknown
	cparamKeys, _ := unpackArgSString(paramKeys)
	cparamVals, _ := unpackArgSString(paramVals)
	cout, _ := (*C.CachedOpHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXCachedCreateOp(ccreator, cnumInputs, cnumParams, cparamKeys, cparamVals, cout)
	packSString(paramVals, cparamVals)
	packSString(paramKeys, cparamKeys)
	__v := (int32)(__ret)
	return __v
}

// CachedFree function as declared in bindingsgen/c_api.h:600
func CachedFree(handle unsafe.Pointer) int32 {
	chandle, _ := (C.CachedOpHandle)(handle), cgoAllocsUnknown
	__ret := C.MXCachedFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// CachedInvoke function as declared in bindingsgen/c_api.h:604
func CachedInvoke(handle unsafe.Pointer, numInputs int32, inputs []NDArrayHandle, numOutputs []int32, outputs [][]NDArrayHandle) int32 {
	chandle, _ := (C.CachedOpHandle)(handle), cgoAllocsUnknown
	cnumInputs, _ := (C.int)(numInputs), cgoAllocsUnknown
	cinputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inputs)).Data)), cgoAllocsUnknown
	cnumOutputs, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numOutputs)).Data)), cgoAllocsUnknown
	coutputs, _ := unpackArgSSNDArrayHandle(outputs)
	__ret := C.MXCachedInvoke(chandle, cnumInputs, cinputs, cnumOutputs, coutputs)
	packSSNDArrayHandle(outputs, coutputs)
	__v := (int32)(__ret)
	return __v
}

// ListAllOpNames function as declared in bindingsgen/c_api.h:618
func ListAllOpNames(outSize []uint32, outArray [][]string) int32 {
	coutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	coutArray, _ := unpackArgSSString(outArray)
	__ret := C.MXListAllOpNames(coutSize, coutArray)
	packSSString(outArray, coutArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetAtomicSymbolName function as declared in bindingsgen/c_api.h:634
func SymbolGetAtomicSymbolName(creator unsafe.Pointer, name []string) int32 {
	ccreator, _ := (C.AtomicSymbolCreator)(creator), cgoAllocsUnknown
	cname, _ := unpackArgSString(name)
	__ret := C.MXSymbolGetAtomicSymbolName(ccreator, cname)
	packSString(name, cname)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetAtomicSymbolInfo function as declared in bindingsgen/c_api.h:653
func SymbolGetAtomicSymbolInfo(creator unsafe.Pointer, name []string, description []string, numArgs []uint32, argNames [][]string, argTypeInfos [][]string, argDescriptions [][]string, keyVarNumArgs []string, returnType []string) int32 {
	ccreator, _ := (C.AtomicSymbolCreator)(creator), cgoAllocsUnknown
	cname, _ := unpackArgSString(name)
	cdescription, _ := unpackArgSString(description)
	cnumArgs, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numArgs)).Data)), cgoAllocsUnknown
	cargNames, _ := unpackArgSSString(argNames)
	cargTypeInfos, _ := unpackArgSSString(argTypeInfos)
	cargDescriptions, _ := unpackArgSSString(argDescriptions)
	ckeyVarNumArgs, _ := unpackArgSString(keyVarNumArgs)
	creturnType, _ := unpackArgSString(returnType)
	__ret := C.MXSymbolGetAtomicSymbolInfo(ccreator, cname, cdescription, cnumArgs, cargNames, cargTypeInfos, cargDescriptions, ckeyVarNumArgs, creturnType)
	packSString(returnType, creturnType)
	packSString(keyVarNumArgs, ckeyVarNumArgs)
	packSSString(argDescriptions, cargDescriptions)
	packSSString(argTypeInfos, cargTypeInfos)
	packSSString(argNames, cargNames)
	packSString(description, cdescription)
	packSString(name, cname)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateAtomicSymbol function as declared in bindingsgen/c_api.h:671
func SymbolCreateAtomicSymbol(creator unsafe.Pointer, numParam uint32, keys []string, vals []string, out []unsafe.Pointer) int32 {
	ccreator, _ := (C.AtomicSymbolCreator)(creator), cgoAllocsUnknown
	cnumParam, _ := (C.mx_uint)(numParam), cgoAllocsUnknown
	ckeys, _ := unpackArgSString(keys)
	cvals, _ := unpackArgSString(vals)
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateAtomicSymbol(ccreator, cnumParam, ckeys, cvals, cout)
	packSString(vals, cvals)
	packSString(keys, ckeys)
	__v := (int32)(__ret)
	return __v
}

// CachedCreateSymbol function as declared in bindingsgen/c_api.h:684
func CachedCreateSymbol(handle unsafe.Pointer, name string, numArgs uint32, args []unsafe.Pointer, out []unsafe.Pointer) int32 {
	chandle, _ := (C.CachedOpHandle)(handle), cgoAllocsUnknown
	name = safeString(name)
	cname, _ := unpackPCharString(name)
	cnumArgs, _ := (C.mx_uint)(numArgs), cgoAllocsUnknown
	cargs, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&args)).Data)), cgoAllocsUnknown
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXCachedCreateSymbol(chandle, cname, cnumArgs, cargs, cout)
	runtime.KeepAlive(name)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateVariable function as declared in bindingsgen/c_api.h:695
func SymbolCreateVariable(name string, out []unsafe.Pointer) int32 {
	name = safeString(name)
	cname, _ := unpackPCharString(name)
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateVariable(cname, cout)
	runtime.KeepAlive(name)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateGroup function as declared in bindingsgen/c_api.h:703
func SymbolCreateGroup(numSymbols uint32, symbols []unsafe.Pointer, out []unsafe.Pointer) int32 {
	cnumSymbols, _ := (C.mx_uint)(numSymbols), cgoAllocsUnknown
	csymbols, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&symbols)).Data)), cgoAllocsUnknown
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateGroup(cnumSymbols, csymbols, cout)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateFromFile function as declared in bindingsgen/c_api.h:712
func SymbolCreateFromFile(fname string, out []unsafe.Pointer) int32 {
	fname = safeString(fname)
	cfname, _ := unpackPCharString(fname)
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateFromFile(cfname, cout)
	runtime.KeepAlive(fname)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateFromJSON function as declared in bindingsgen/c_api.h:719
func SymbolCreateFromJSON(json string, out []unsafe.Pointer) int32 {
	json = safeString(json)
	cjson, _ := unpackPCharString(json)
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateFromJSON(cjson, cout)
	runtime.KeepAlive(json)
	__v := (int32)(__ret)
	return __v
}

// SymbolSaveToFile function as declared in bindingsgen/c_api.h:726
func SymbolSaveToFile(symbol unsafe.Pointer, fname string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	fname = safeString(fname)
	cfname, _ := unpackPCharString(fname)
	__ret := C.MXSymbolSaveToFile(csymbol, cfname)
	runtime.KeepAlive(fname)
	__v := (int32)(__ret)
	return __v
}

// SymbolSaveToJSON function as declared in bindingsgen/c_api.h:733
func SymbolSaveToJSON(symbol unsafe.Pointer, outJson []string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	coutJson, _ := unpackArgSString(outJson)
	__ret := C.MXSymbolSaveToJSON(csymbol, coutJson)
	packSString(outJson, coutJson)
	__v := (int32)(__ret)
	return __v
}

// SymbolFree function as declared in bindingsgen/c_api.h:739
func SymbolFree(symbol unsafe.Pointer) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	__ret := C.MXSymbolFree(csymbol)
	__v := (int32)(__ret)
	return __v
}

// SymbolCopy function as declared in bindingsgen/c_api.h:746
func SymbolCopy(symbol unsafe.Pointer, out []unsafe.Pointer) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCopy(csymbol, cout)
	__v := (int32)(__ret)
	return __v
}

// SymbolPrint function as declared in bindingsgen/c_api.h:753
func SymbolPrint(symbol unsafe.Pointer, outStr []string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	coutStr, _ := unpackArgSString(outStr)
	__ret := C.MXSymbolPrint(csymbol, coutStr)
	packSString(outStr, coutStr)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetName function as declared in bindingsgen/c_api.h:761
func SymbolGetName(symbol unsafe.Pointer, out []string, success []int32) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	cout, _ := unpackArgSString(out)
	csuccess, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&success)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetName(csymbol, cout, csuccess)
	packSString(out, cout)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetAttr function as declared in bindingsgen/c_api.h:772
func SymbolGetAttr(symbol unsafe.Pointer, key string, out []string, success []int32) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	key = safeString(key)
	ckey, _ := unpackPCharString(key)
	cout, _ := unpackArgSString(out)
	csuccess, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&success)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetAttr(csymbol, ckey, cout, csuccess)
	packSString(out, cout)
	runtime.KeepAlive(key)
	__v := (int32)(__ret)
	return __v
}

// SymbolSetAttr function as declared in bindingsgen/c_api.h:792
func SymbolSetAttr(symbol unsafe.Pointer, key string, value string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	key = safeString(key)
	ckey, _ := unpackPCharString(key)
	value = safeString(value)
	cvalue, _ := unpackPCharString(value)
	__ret := C.MXSymbolSetAttr(csymbol, ckey, cvalue)
	runtime.KeepAlive(value)
	runtime.KeepAlive(key)
	__v := (int32)(__ret)
	return __v
}

// SymbolListAttr function as declared in bindingsgen/c_api.h:802
func SymbolListAttr(symbol unsafe.Pointer, outSize []uint32, out [][]string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	coutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	cout, _ := unpackArgSSString(out)
	__ret := C.MXSymbolListAttr(csymbol, coutSize, cout)
	packSSString(out, cout)
	__v := (int32)(__ret)
	return __v
}

// SymbolListAttrShallow function as declared in bindingsgen/c_api.h:812
func SymbolListAttrShallow(symbol unsafe.Pointer, outSize []uint32, out [][]string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	coutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	cout, _ := unpackArgSSString(out)
	__ret := C.MXSymbolListAttrShallow(csymbol, coutSize, cout)
	packSSString(out, cout)
	__v := (int32)(__ret)
	return __v
}

// SymbolListArguments function as declared in bindingsgen/c_api.h:822
func SymbolListArguments(symbol unsafe.Pointer, outSize []uint32, outStrArray [][]string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	coutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	coutStrArray, _ := unpackArgSSString(outStrArray)
	__ret := C.MXSymbolListArguments(csymbol, coutSize, coutStrArray)
	packSSString(outStrArray, coutStrArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolListOutputs function as declared in bindingsgen/c_api.h:832
func SymbolListOutputs(symbol unsafe.Pointer, outSize []uint32, outStrArray [][]string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	coutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	coutStrArray, _ := unpackArgSSString(outStrArray)
	__ret := C.MXSymbolListOutputs(csymbol, coutSize, coutStrArray)
	packSSString(outStrArray, coutStrArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetInternals function as declared in bindingsgen/c_api.h:841
func SymbolGetInternals(symbol unsafe.Pointer, out []unsafe.Pointer) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetInternals(csymbol, cout)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetChildren function as declared in bindingsgen/c_api.h:849
func SymbolGetChildren(symbol unsafe.Pointer, out []unsafe.Pointer) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetChildren(csymbol, cout)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetOutput function as declared in bindingsgen/c_api.h:858
func SymbolGetOutput(symbol unsafe.Pointer, index uint32, out []unsafe.Pointer) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	cindex, _ := (C.mx_uint)(index), cgoAllocsUnknown
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetOutput(csymbol, cindex, cout)
	__v := (int32)(__ret)
	return __v
}

// SymbolListAuxiliaryStates function as declared in bindingsgen/c_api.h:868
func SymbolListAuxiliaryStates(symbol unsafe.Pointer, outSize []uint32, outStrArray [][]string) int32 {
	csymbol, _ := (C.SymbolHandle)(symbol), cgoAllocsUnknown
	coutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	coutStrArray, _ := unpackArgSSString(outStrArray)
	__ret := C.MXSymbolListAuxiliaryStates(csymbol, coutSize, coutStrArray)
	packSSString(outStrArray, coutStrArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolCompose function as declared in bindingsgen/c_api.h:885
func SymbolCompose(sym unsafe.Pointer, name string, numArgs uint32, keys []string, args []unsafe.Pointer) int32 {
	csym, _ := (C.SymbolHandle)(sym), cgoAllocsUnknown
	name = safeString(name)
	cname, _ := unpackPCharString(name)
	cnumArgs, _ := (C.mx_uint)(numArgs), cgoAllocsUnknown
	ckeys, _ := unpackArgSString(keys)
	cargs, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&args)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCompose(csym, cname, cnumArgs, ckeys, cargs)
	packSString(keys, ckeys)
	runtime.KeepAlive(name)
	__v := (int32)(__ret)
	return __v
}

// SymbolGrad function as declared in bindingsgen/c_api.h:899
func SymbolGrad(sym unsafe.Pointer, numWrt uint32, wrt []string, out []unsafe.Pointer) int32 {
	csym, _ := (C.SymbolHandle)(sym), cgoAllocsUnknown
	cnumWrt, _ := (C.mx_uint)(numWrt), cgoAllocsUnknown
	cwrt, _ := unpackArgSString(wrt)
	cout, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGrad(csym, cnumWrt, cwrt, cout)
	packSString(wrt, cwrt)
	__v := (int32)(__ret)
	return __v
}

// SymbolInferShape function as declared in bindingsgen/c_api.h:925
func SymbolInferShape(sym unsafe.Pointer, numArgs uint32, keys []string, argIndPtr []uint32, argShapeData []uint32, inShapeSize []uint32, inShapeNdim [][]uint32, inShapeData [][][]uint32, outShapeSize []uint32, outShapeNdim [][]uint32, outShapeData [][][]uint32, auxShapeSize []uint32, auxShapeNdim [][]uint32, auxShapeData [][][]uint32, complete []int32) int32 {
	csym, _ := (C.SymbolHandle)(sym), cgoAllocsUnknown
	cnumArgs, _ := (C.mx_uint)(numArgs), cgoAllocsUnknown
	ckeys, _ := unpackArgSString(keys)
	cargIndPtr, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&argIndPtr)).Data)), cgoAllocsUnknown
	cargShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&argShapeData)).Data)), cgoAllocsUnknown
	cinShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inShapeSize)).Data)), cgoAllocsUnknown
	cinShapeNdim, _ := unpackArgSSUUint32(inShapeNdim)
	cinShapeData, _ := unpackArgSSSUUint32(inShapeData)
	coutShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outShapeSize)).Data)), cgoAllocsUnknown
	coutShapeNdim, _ := unpackArgSSUUint32(outShapeNdim)
	coutShapeData, _ := unpackArgSSSUUint32(outShapeData)
	cauxShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&auxShapeSize)).Data)), cgoAllocsUnknown
	cauxShapeNdim, _ := unpackArgSSUUint32(auxShapeNdim)
	cauxShapeData, _ := unpackArgSSSUUint32(auxShapeData)
	ccomplete, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&complete)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolInferShape(csym, cnumArgs, ckeys, cargIndPtr, cargShapeData, cinShapeSize, cinShapeNdim, cinShapeData, coutShapeSize, coutShapeNdim, coutShapeData, cauxShapeSize, cauxShapeNdim, cauxShapeData, ccomplete)
	packSSSUUint32(auxShapeData, cauxShapeData)
	packSSUUint32(auxShapeNdim, cauxShapeNdim)
	packSSSUUint32(outShapeData, coutShapeData)
	packSSUUint32(outShapeNdim, coutShapeNdim)
	packSSSUUint32(inShapeData, cinShapeData)
	packSSUUint32(inShapeNdim, cinShapeNdim)
	packSString(keys, ckeys)
	__v := (int32)(__ret)
	return __v
}

// SymbolInferShapePartial function as declared in bindingsgen/c_api.h:964
func SymbolInferShapePartial(sym unsafe.Pointer, numArgs uint32, keys []string, argIndPtr []uint32, argShapeData []uint32, inShapeSize []uint32, inShapeNdim [][]uint32, inShapeData [][][]uint32, outShapeSize []uint32, outShapeNdim [][]uint32, outShapeData [][][]uint32, auxShapeSize []uint32, auxShapeNdim [][]uint32, auxShapeData [][][]uint32, complete []int32) int32 {
	csym, _ := (C.SymbolHandle)(sym), cgoAllocsUnknown
	cnumArgs, _ := (C.mx_uint)(numArgs), cgoAllocsUnknown
	ckeys, _ := unpackArgSString(keys)
	cargIndPtr, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&argIndPtr)).Data)), cgoAllocsUnknown
	cargShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&argShapeData)).Data)), cgoAllocsUnknown
	cinShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inShapeSize)).Data)), cgoAllocsUnknown
	cinShapeNdim, _ := unpackArgSSUUint32(inShapeNdim)
	cinShapeData, _ := unpackArgSSSUUint32(inShapeData)
	coutShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outShapeSize)).Data)), cgoAllocsUnknown
	coutShapeNdim, _ := unpackArgSSUUint32(outShapeNdim)
	coutShapeData, _ := unpackArgSSSUUint32(outShapeData)
	cauxShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&auxShapeSize)).Data)), cgoAllocsUnknown
	cauxShapeNdim, _ := unpackArgSSUUint32(auxShapeNdim)
	cauxShapeData, _ := unpackArgSSSUUint32(auxShapeData)
	ccomplete, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&complete)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolInferShapePartial(csym, cnumArgs, ckeys, cargIndPtr, cargShapeData, cinShapeSize, cinShapeNdim, cinShapeData, coutShapeSize, coutShapeNdim, coutShapeData, cauxShapeSize, cauxShapeNdim, cauxShapeData, ccomplete)
	packSSSUUint32(auxShapeData, cauxShapeData)
	packSSUUint32(auxShapeNdim, cauxShapeNdim)
	packSSSUUint32(outShapeData, coutShapeData)
	packSSUUint32(outShapeNdim, coutShapeNdim)
	packSSSUUint32(inShapeData, cinShapeData)
	packSSUUint32(inShapeNdim, cinShapeNdim)
	packSString(keys, ckeys)
	__v := (int32)(__ret)
	return __v
}

// SymbolInferType function as declared in bindingsgen/c_api.h:998
func SymbolInferType(sym unsafe.Pointer, numArgs uint32, keys []string, argTypeData []int32, inTypeSize []uint32, inTypeData [][]int32, outTypeSize []uint32, outTypeData [][]int32, auxTypeSize []uint32, auxTypeData [][]int32, complete []int32) int32 {
	csym, _ := (C.SymbolHandle)(sym), cgoAllocsUnknown
	cnumArgs, _ := (C.mx_uint)(numArgs), cgoAllocsUnknown
	ckeys, _ := unpackArgSString(keys)
	cargTypeData, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&argTypeData)).Data)), cgoAllocsUnknown
	cinTypeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inTypeSize)).Data)), cgoAllocsUnknown
	cinTypeData, _ := unpackArgSSInt32(inTypeData)
	coutTypeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outTypeSize)).Data)), cgoAllocsUnknown
	coutTypeData, _ := unpackArgSSInt32(outTypeData)
	cauxTypeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&auxTypeSize)).Data)), cgoAllocsUnknown
	cauxTypeData, _ := unpackArgSSInt32(auxTypeData)
	ccomplete, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&complete)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolInferType(csym, cnumArgs, ckeys, cargTypeData, cinTypeSize, cinTypeData, coutTypeSize, coutTypeData, cauxTypeSize, cauxTypeData, ccomplete)
	packSSInt32(auxTypeData, cauxTypeData)
	packSSInt32(outTypeData, coutTypeData)
	packSSInt32(inTypeData, cinTypeData)
	packSString(keys, ckeys)
	__v := (int32)(__ret)
	return __v
}

// ExecutorFree function as declared in bindingsgen/c_api.h:1017
func ExecutorFree(handle unsafe.Pointer) int32 {
	chandle, _ := (C.ExecutorHandle)(handle), cgoAllocsUnknown
	__ret := C.MXExecutorFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// ExecutorPrint function as declared in bindingsgen/c_api.h:1024
func ExecutorPrint(handle unsafe.Pointer, outStr []string) int32 {
	chandle, _ := (C.ExecutorHandle)(handle), cgoAllocsUnknown
	coutStr, _ := unpackArgSString(outStr)
	__ret := C.MXExecutorPrint(chandle, coutStr)
	packSString(outStr, coutStr)
	__v := (int32)(__ret)
	return __v
}

// ExecutorForward function as declared in bindingsgen/c_api.h:1032
func ExecutorForward(handle unsafe.Pointer, isTrain int32) int32 {
	chandle, _ := (C.ExecutorHandle)(handle), cgoAllocsUnknown
	cisTrain, _ := (C.int)(isTrain), cgoAllocsUnknown
	__ret := C.MXExecutorForward(chandle, cisTrain)
	__v := (int32)(__ret)
	return __v
}

// ExecutorBackward function as declared in bindingsgen/c_api.h:1042
func ExecutorBackward(handle unsafe.Pointer, len uint32, headGrads []NDArrayHandle) int32 {
	chandle, _ := (C.ExecutorHandle)(handle), cgoAllocsUnknown
	clen, _ := (C.mx_uint)(len), cgoAllocsUnknown
	cheadGrads, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&headGrads)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorBackward(chandle, clen, cheadGrads)
	__v := (int32)(__ret)
	return __v
}

// ExecutorOutputs function as declared in bindingsgen/c_api.h:1054
func ExecutorOutputs(handle unsafe.Pointer, outSize []uint32, out [][]NDArrayHandle) int32 {
	chandle, _ := (C.ExecutorHandle)(handle), cgoAllocsUnknown
	coutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	cout, _ := unpackArgSSNDArrayHandle(out)
	__ret := C.MXExecutorOutputs(chandle, coutSize, cout)
	packSSNDArrayHandle(out, cout)
	__v := (int32)(__ret)
	return __v
}

// ExecutorBind function as declared in bindingsgen/c_api.h:1073
func ExecutorBind(symbolHandle unsafe.Pointer, devType int32, devId int32, len uint32, inArgs []NDArrayHandle, argGradStore []NDArrayHandle, gradReqType []uint32, auxStatesLen uint32, auxStates []NDArrayHandle, out []unsafe.Pointer) int32 {
	csymbolHandle, _ := (C.SymbolHandle)(symbolHandle), cgoAllocsUnknown
	cdevType, _ := (C.int)(devType), cgoAllocsUnknown
	cdevId, _ := (C.int)(devId), cgoAllocsUnknown
	clen, _ := (C.mx_uint)(len), cgoAllocsUnknown
	cinArgs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inArgs)).Data)), cgoAllocsUnknown
	cargGradStore, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&argGradStore)).Data)), cgoAllocsUnknown
	cgradReqType, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&gradReqType)).Data)), cgoAllocsUnknown
	cauxStatesLen, _ := (C.mx_uint)(auxStatesLen), cgoAllocsUnknown
	cauxStates, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&auxStates)).Data)), cgoAllocsUnknown
	cout, _ := (*C.ExecutorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorBind(csymbolHandle, cdevType, cdevId, clen, cinArgs, cargGradStore, cgradReqType, cauxStatesLen, cauxStates, cout)
	__v := (int32)(__ret)
	return __v
}

// ExecutorBindX function as declared in bindingsgen/c_api.h:1104
func ExecutorBindX(symbolHandle unsafe.Pointer, devType int32, devId int32, numMapKeys uint32, mapKeys []string, mapDevTypes []int32, mapDevIds []int32, len uint32, inArgs []NDArrayHandle, argGradStore []NDArrayHandle, gradReqType []uint32, auxStatesLen uint32, auxStates []NDArrayHandle, out []unsafe.Pointer) int32 {
	csymbolHandle, _ := (C.SymbolHandle)(symbolHandle), cgoAllocsUnknown
	cdevType, _ := (C.int)(devType), cgoAllocsUnknown
	cdevId, _ := (C.int)(devId), cgoAllocsUnknown
	cnumMapKeys, _ := (C.mx_uint)(numMapKeys), cgoAllocsUnknown
	cmapKeys, _ := unpackArgSString(mapKeys)
	cmapDevTypes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&mapDevTypes)).Data)), cgoAllocsUnknown
	cmapDevIds, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&mapDevIds)).Data)), cgoAllocsUnknown
	clen, _ := (C.mx_uint)(len), cgoAllocsUnknown
	cinArgs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inArgs)).Data)), cgoAllocsUnknown
	cargGradStore, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&argGradStore)).Data)), cgoAllocsUnknown
	cgradReqType, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&gradReqType)).Data)), cgoAllocsUnknown
	cauxStatesLen, _ := (C.mx_uint)(auxStatesLen), cgoAllocsUnknown
	cauxStates, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&auxStates)).Data)), cgoAllocsUnknown
	cout, _ := (*C.ExecutorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorBindX(csymbolHandle, cdevType, cdevId, cnumMapKeys, cmapKeys, cmapDevTypes, cmapDevIds, clen, cinArgs, cargGradStore, cgradReqType, cauxStatesLen, cauxStates, cout)
	packSString(mapKeys, cmapKeys)
	__v := (int32)(__ret)
	return __v
}

// ExecutorBindEX function as declared in bindingsgen/c_api.h:1140
func ExecutorBindEX(symbolHandle unsafe.Pointer, devType int32, devId int32, numMapKeys uint32, mapKeys []string, mapDevTypes []int32, mapDevIds []int32, len uint32, inArgs []NDArrayHandle, argGradStore []NDArrayHandle, gradReqType []uint32, auxStatesLen uint32, auxStates []NDArrayHandle, sharedExec unsafe.Pointer, out []unsafe.Pointer) int32 {
	csymbolHandle, _ := (C.SymbolHandle)(symbolHandle), cgoAllocsUnknown
	cdevType, _ := (C.int)(devType), cgoAllocsUnknown
	cdevId, _ := (C.int)(devId), cgoAllocsUnknown
	cnumMapKeys, _ := (C.mx_uint)(numMapKeys), cgoAllocsUnknown
	cmapKeys, _ := unpackArgSString(mapKeys)
	cmapDevTypes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&mapDevTypes)).Data)), cgoAllocsUnknown
	cmapDevIds, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&mapDevIds)).Data)), cgoAllocsUnknown
	clen, _ := (C.mx_uint)(len), cgoAllocsUnknown
	cinArgs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inArgs)).Data)), cgoAllocsUnknown
	cargGradStore, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&argGradStore)).Data)), cgoAllocsUnknown
	cgradReqType, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&gradReqType)).Data)), cgoAllocsUnknown
	cauxStatesLen, _ := (C.mx_uint)(auxStatesLen), cgoAllocsUnknown
	cauxStates, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&auxStates)).Data)), cgoAllocsUnknown
	csharedExec, _ := (C.ExecutorHandle)(sharedExec), cgoAllocsUnknown
	cout, _ := (*C.ExecutorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorBindEX(csymbolHandle, cdevType, cdevId, cnumMapKeys, cmapKeys, cmapDevTypes, cmapDevIds, clen, cinArgs, cargGradStore, cgradReqType, cauxStatesLen, cauxStates, csharedExec, cout)
	packSString(mapKeys, cmapKeys)
	__v := (int32)(__ret)
	return __v
}

// ExecutorSimpleBind function as declared in bindingsgen/c_api.h:1156
func ExecutorSimpleBind(symbolHandle unsafe.Pointer, devType int32, devId int32, numG2cKeys uint32, g2cKeys []string, g2cDevTypes []int32, g2cDevIds []int32, providedGradReqListLen uint32, providedGradReqNames []string, providedGradReqTypes []string, numProvidedArgShapes uint32, providedArgShapeNames []string, providedArgShapeData []uint32, providedArgShapeIdx []uint32, numProvidedArgDtypes uint32, providedArgDtypeNames []string, providedArgDtypes []int32, numSharedArgNames uint32, sharedArgNameList []string, sharedBufferLen []int32, sharedBufferNameList []string, sharedBufferHandleList []NDArrayHandle, updatedSharedBufferNameList [][]string, updatedSharedBufferHandleList [][]NDArrayHandle, numInArgs []uint32, inArgs [][]NDArrayHandle, argGrads [][]NDArrayHandle, numAuxStates []uint32, auxStates [][]NDArrayHandle, sharedExecHandle unsafe.Pointer, out []unsafe.Pointer) int32 {
	csymbolHandle, _ := (C.SymbolHandle)(symbolHandle), cgoAllocsUnknown
	cdevType, _ := (C.int)(devType), cgoAllocsUnknown
	cdevId, _ := (C.int)(devId), cgoAllocsUnknown
	cnumG2cKeys, _ := (C.mx_uint)(numG2cKeys), cgoAllocsUnknown
	cg2cKeys, _ := unpackArgSString(g2cKeys)
	cg2cDevTypes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&g2cDevTypes)).Data)), cgoAllocsUnknown
	cg2cDevIds, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&g2cDevIds)).Data)), cgoAllocsUnknown
	cprovidedGradReqListLen, _ := (C.mx_uint)(providedGradReqListLen), cgoAllocsUnknown
	cprovidedGradReqNames, _ := unpackArgSString(providedGradReqNames)
	cprovidedGradReqTypes, _ := unpackArgSString(providedGradReqTypes)
	cnumProvidedArgShapes, _ := (C.mx_uint)(numProvidedArgShapes), cgoAllocsUnknown
	cprovidedArgShapeNames, _ := unpackArgSString(providedArgShapeNames)
	cprovidedArgShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&providedArgShapeData)).Data)), cgoAllocsUnknown
	cprovidedArgShapeIdx, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&providedArgShapeIdx)).Data)), cgoAllocsUnknown
	cnumProvidedArgDtypes, _ := (C.mx_uint)(numProvidedArgDtypes), cgoAllocsUnknown
	cprovidedArgDtypeNames, _ := unpackArgSString(providedArgDtypeNames)
	cprovidedArgDtypes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&providedArgDtypes)).Data)), cgoAllocsUnknown
	cnumSharedArgNames, _ := (C.mx_uint)(numSharedArgNames), cgoAllocsUnknown
	csharedArgNameList, _ := unpackArgSString(sharedArgNameList)
	csharedBufferLen, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&sharedBufferLen)).Data)), cgoAllocsUnknown
	csharedBufferNameList, _ := unpackArgSString(sharedBufferNameList)
	csharedBufferHandleList, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&sharedBufferHandleList)).Data)), cgoAllocsUnknown
	cupdatedSharedBufferNameList, _ := unpackArgSSString(updatedSharedBufferNameList)
	cupdatedSharedBufferHandleList, _ := unpackArgSSNDArrayHandle(updatedSharedBufferHandleList)
	cnumInArgs, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numInArgs)).Data)), cgoAllocsUnknown
	cinArgs, _ := unpackArgSSNDArrayHandle(inArgs)
	cargGrads, _ := unpackArgSSNDArrayHandle(argGrads)
	cnumAuxStates, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numAuxStates)).Data)), cgoAllocsUnknown
	cauxStates, _ := unpackArgSSNDArrayHandle(auxStates)
	csharedExecHandle, _ := (C.ExecutorHandle)(sharedExecHandle), cgoAllocsUnknown
	cout, _ := (*C.ExecutorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorSimpleBind(csymbolHandle, cdevType, cdevId, cnumG2cKeys, cg2cKeys, cg2cDevTypes, cg2cDevIds, cprovidedGradReqListLen, cprovidedGradReqNames, cprovidedGradReqTypes, cnumProvidedArgShapes, cprovidedArgShapeNames, cprovidedArgShapeData, cprovidedArgShapeIdx, cnumProvidedArgDtypes, cprovidedArgDtypeNames, cprovidedArgDtypes, cnumSharedArgNames, csharedArgNameList, csharedBufferLen, csharedBufferNameList, csharedBufferHandleList, cupdatedSharedBufferNameList, cupdatedSharedBufferHandleList, cnumInArgs, cinArgs, cargGrads, cnumAuxStates, cauxStates, csharedExecHandle, cout)
	packSSNDArrayHandle(auxStates, cauxStates)
	packSSNDArrayHandle(argGrads, cargGrads)
	packSSNDArrayHandle(inArgs, cinArgs)
	packSSNDArrayHandle(updatedSharedBufferHandleList, cupdatedSharedBufferHandleList)
	packSSString(updatedSharedBufferNameList, cupdatedSharedBufferNameList)
	packSString(sharedBufferNameList, csharedBufferNameList)
	packSString(sharedArgNameList, csharedArgNameList)
	packSString(providedArgDtypeNames, cprovidedArgDtypeNames)
	packSString(providedArgShapeNames, cprovidedArgShapeNames)
	packSString(providedGradReqTypes, cprovidedGradReqTypes)
	packSString(providedGradReqNames, cprovidedGradReqNames)
	packSString(g2cKeys, cg2cKeys)
	__v := (int32)(__ret)
	return __v
}

// ExecutorSetMonitorCallback function as declared in bindingsgen/c_api.h:1190
func ExecutorSetMonitorCallback(handle unsafe.Pointer, callback ExecutorMonitorCallback, callbackHandle unsafe.Pointer) int32 {
	chandle, _ := (C.ExecutorHandle)(handle), cgoAllocsUnknown
	ccallback, _ := callback.PassValue()
	ccallbackHandle, _ := (unsafe.Pointer)(unsafe.Pointer(callbackHandle)), cgoAllocsUnknown
	__ret := C.MXExecutorSetMonitorCallback(chandle, ccallback, ccallbackHandle)
	__v := (int32)(__ret)
	return __v
}

// DataIterCreateIter function as declared in bindingsgen/c_api.h:1214
func DataIterCreateIter(handle unsafe.Pointer, numParam uint32, keys []string, vals []string, out []unsafe.Pointer) int32 {
	chandle, _ := (C.DataIterCreator)(handle), cgoAllocsUnknown
	cnumParam, _ := (C.mx_uint)(numParam), cgoAllocsUnknown
	ckeys, _ := unpackArgSString(keys)
	cvals, _ := unpackArgSString(vals)
	cout, _ := (*C.DataIterHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterCreateIter(chandle, cnumParam, ckeys, cvals, cout)
	packSString(vals, cvals)
	packSString(keys, ckeys)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetIterInfo function as declared in bindingsgen/c_api.h:1230
func DataIterGetIterInfo(creator unsafe.Pointer, name []string, description []string, numArgs []uint32, argNames [][]string, argTypeInfos [][]string, argDescriptions [][]string) int32 {
	ccreator, _ := (C.DataIterCreator)(creator), cgoAllocsUnknown
	cname, _ := unpackArgSString(name)
	cdescription, _ := unpackArgSString(description)
	cnumArgs, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&numArgs)).Data)), cgoAllocsUnknown
	cargNames, _ := unpackArgSSString(argNames)
	cargTypeInfos, _ := unpackArgSSString(argTypeInfos)
	cargDescriptions, _ := unpackArgSSString(argDescriptions)
	__ret := C.MXDataIterGetIterInfo(ccreator, cname, cdescription, cnumArgs, cargNames, cargTypeInfos, cargDescriptions)
	packSSString(argDescriptions, cargDescriptions)
	packSSString(argTypeInfos, cargTypeInfos)
	packSSString(argNames, cargNames)
	packSString(description, cdescription)
	packSString(name, cname)
	__v := (int32)(__ret)
	return __v
}

// DataIterFree function as declared in bindingsgen/c_api.h:1242
func DataIterFree(handle unsafe.Pointer) int32 {
	chandle, _ := (C.DataIterHandle)(handle), cgoAllocsUnknown
	__ret := C.MXDataIterFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// DataIterNext function as declared in bindingsgen/c_api.h:1249
func DataIterNext(handle unsafe.Pointer, out []int32) int32 {
	chandle, _ := (C.DataIterHandle)(handle), cgoAllocsUnknown
	cout, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterNext(chandle, cout)
	__v := (int32)(__ret)
	return __v
}

// DataIterBeforeFirst function as declared in bindingsgen/c_api.h:1256
func DataIterBeforeFirst(handle unsafe.Pointer) int32 {
	chandle, _ := (C.DataIterHandle)(handle), cgoAllocsUnknown
	__ret := C.MXDataIterBeforeFirst(chandle)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetData function as declared in bindingsgen/c_api.h:1264
func DataIterGetData(handle unsafe.Pointer, out []NDArrayHandle) int32 {
	chandle, _ := (C.DataIterHandle)(handle), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterGetData(chandle, cout)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetIndex function as declared in bindingsgen/c_api.h:1273
func DataIterGetIndex(handle unsafe.Pointer, outIndex [][]uint64, outSize []uint64) int32 {
	chandle, _ := (C.DataIterHandle)(handle), cgoAllocsUnknown
	coutIndex, _ := unpackArgSSUUint64(outIndex)
	coutSize, _ := (*C.uint64_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outSize)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterGetIndex(chandle, coutIndex, coutSize)
	packSSUUint64(outIndex, coutIndex)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetPadNum function as declared in bindingsgen/c_api.h:1282
func DataIterGetPadNum(handle unsafe.Pointer, pad []int32) int32 {
	chandle, _ := (C.DataIterHandle)(handle), cgoAllocsUnknown
	cpad, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&pad)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterGetPadNum(chandle, cpad)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetLabel function as declared in bindingsgen/c_api.h:1291
func DataIterGetLabel(handle unsafe.Pointer, out []NDArrayHandle) int32 {
	chandle, _ := (C.DataIterHandle)(handle), cgoAllocsUnknown
	cout, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterGetLabel(chandle, cout)
	__v := (int32)(__ret)
	return __v
}

// InitPSEnv function as declared in bindingsgen/c_api.h:1302
func InitPSEnv(numVars uint32, keys []string, vals []string) int32 {
	cnumVars, _ := (C.mx_uint)(numVars), cgoAllocsUnknown
	ckeys, _ := unpackArgSString(keys)
	cvals, _ := unpackArgSString(vals)
	__ret := C.MXInitPSEnv(cnumVars, ckeys, cvals)
	packSString(vals, cvals)
	packSString(keys, ckeys)
	__v := (int32)(__ret)
	return __v
}

// KVStoreCreate function as declared in bindingsgen/c_api.h:1313
func KVStoreCreate(kind string, out []unsafe.Pointer) int32 {
	kind = safeString(kind)
	ckind, _ := unpackPCharString(kind)
	cout, _ := (*C.KVStoreHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreCreate(ckind, cout)
	runtime.KeepAlive(kind)
	__v := (int32)(__ret)
	return __v
}

// KVStoreFree function as declared in bindingsgen/c_api.h:1320
func KVStoreFree(handle unsafe.Pointer) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	__ret := C.MXKVStoreFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// KVStoreInit function as declared in bindingsgen/c_api.h:1329
func KVStoreInit(handle unsafe.Pointer, num uint32, keys []int32, vals []NDArrayHandle) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	cnum, _ := (C.mx_uint)(num), cgoAllocsUnknown
	ckeys, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&keys)).Data)), cgoAllocsUnknown
	cvals, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&vals)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreInit(chandle, cnum, ckeys, cvals)
	__v := (int32)(__ret)
	return __v
}

// KVStorePush function as declared in bindingsgen/c_api.h:1343
func KVStorePush(handle unsafe.Pointer, num uint32, keys []int32, vals []NDArrayHandle, priority int32) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	cnum, _ := (C.mx_uint)(num), cgoAllocsUnknown
	ckeys, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&keys)).Data)), cgoAllocsUnknown
	cvals, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&vals)).Data)), cgoAllocsUnknown
	cpriority, _ := (C.int)(priority), cgoAllocsUnknown
	__ret := C.MXKVStorePush(chandle, cnum, ckeys, cvals, cpriority)
	__v := (int32)(__ret)
	return __v
}

// KVStorePull function as declared in bindingsgen/c_api.h:1357
func KVStorePull(handle unsafe.Pointer, num uint32, keys []int32, vals []NDArrayHandle, priority int32) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	cnum, _ := (C.mx_uint)(num), cgoAllocsUnknown
	ckeys, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&keys)).Data)), cgoAllocsUnknown
	cvals, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&vals)).Data)), cgoAllocsUnknown
	cpriority, _ := (C.int)(priority), cgoAllocsUnknown
	__ret := C.MXKVStorePull(chandle, cnum, ckeys, cvals, cpriority)
	__v := (int32)(__ret)
	return __v
}

// KVStoreSetUpdater function as declared in bindingsgen/c_api.h:1381
func KVStoreSetUpdater(handle unsafe.Pointer, updater MXKVStoreUpdater, updaterHandle unsafe.Pointer) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	cupdater, _ := updater.PassValue()
	cupdaterHandle, _ := (unsafe.Pointer)(unsafe.Pointer(updaterHandle)), cgoAllocsUnknown
	__ret := C.MXKVStoreSetUpdater(chandle, cupdater, cupdaterHandle)
	__v := (int32)(__ret)
	return __v
}

// KVStoreGetType function as declared in bindingsgen/c_api.h:1390
func KVStoreGetType(handle unsafe.Pointer, kind []string) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	ckind, _ := unpackArgSString(kind)
	__ret := C.MXKVStoreGetType(chandle, ckind)
	packSString(kind, ckind)
	__v := (int32)(__ret)
	return __v
}

// KVStoreGetRank function as declared in bindingsgen/c_api.h:1403
func KVStoreGetRank(handle unsafe.Pointer, ret []int32) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	cret, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreGetRank(chandle, cret)
	__v := (int32)(__ret)
	return __v
}

// KVStoreGetGroupSize function as declared in bindingsgen/c_api.h:1415
func KVStoreGetGroupSize(handle unsafe.Pointer, ret []int32) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	cret, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreGetGroupSize(chandle, cret)
	__v := (int32)(__ret)
	return __v
}

// KVStoreIsWorkerNode function as declared in bindingsgen/c_api.h:1423
func KVStoreIsWorkerNode(ret []int32) int32 {
	cret, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreIsWorkerNode(cret)
	__v := (int32)(__ret)
	return __v
}

// KVStoreIsServerNode function as declared in bindingsgen/c_api.h:1431
func KVStoreIsServerNode(ret []int32) int32 {
	cret, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreIsServerNode(cret)
	__v := (int32)(__ret)
	return __v
}

// KVStoreIsSchedulerNode function as declared in bindingsgen/c_api.h:1439
func KVStoreIsSchedulerNode(ret []int32) int32 {
	cret, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreIsSchedulerNode(cret)
	__v := (int32)(__ret)
	return __v
}

// KVStoreBarrier function as declared in bindingsgen/c_api.h:1447
func KVStoreBarrier(handle unsafe.Pointer) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	__ret := C.MXKVStoreBarrier(chandle)
	__v := (int32)(__ret)
	return __v
}

// KVStoreSetBarrierBeforeExit function as declared in bindingsgen/c_api.h:1456
func KVStoreSetBarrierBeforeExit(handle unsafe.Pointer, barrierBeforeExit int32) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	cbarrierBeforeExit, _ := (C.int)(barrierBeforeExit), cgoAllocsUnknown
	__ret := C.MXKVStoreSetBarrierBeforeExit(chandle, cbarrierBeforeExit)
	__v := (int32)(__ret)
	return __v
}

// KVStoreRunServer function as declared in bindingsgen/c_api.h:1477
func KVStoreRunServer(handle unsafe.Pointer, controller MXKVStoreServerController, controllerHandle unsafe.Pointer) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	ccontroller, _ := controller.PassValue()
	ccontrollerHandle, _ := (unsafe.Pointer)(unsafe.Pointer(controllerHandle)), cgoAllocsUnknown
	__ret := C.MXKVStoreRunServer(chandle, ccontroller, ccontrollerHandle)
	__v := (int32)(__ret)
	return __v
}

// KVStoreSendCommmandToServers function as declared in bindingsgen/c_api.h:1489
func KVStoreSendCommmandToServers(handle unsafe.Pointer, cmdId int32, cmdBody string) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	ccmdId, _ := (C.int)(cmdId), cgoAllocsUnknown
	cmdBody = safeString(cmdBody)
	ccmdBody, _ := unpackPCharString(cmdBody)
	__ret := C.MXKVStoreSendCommmandToServers(chandle, ccmdId, ccmdBody)
	runtime.KeepAlive(cmdBody)
	__v := (int32)(__ret)
	return __v
}

// KVStoreGetNumDeadNode function as declared in bindingsgen/c_api.h:1503
func KVStoreGetNumDeadNode(handle unsafe.Pointer, nodeId int32, number []int32, timeoutSec int32) int32 {
	chandle, _ := (C.KVStoreHandle)(handle), cgoAllocsUnknown
	cnodeId, _ := (C.int)(nodeId), cgoAllocsUnknown
	cnumber, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&number)).Data)), cgoAllocsUnknown
	ctimeoutSec, _ := (C.int)(timeoutSec), cgoAllocsUnknown
	__ret := C.MXKVStoreGetNumDeadNode(chandle, cnodeId, cnumber, ctimeoutSec)
	__v := (int32)(__ret)
	return __v
}

// RecordIOWriterCreate function as declared in bindingsgen/c_api.h:1514
func RecordIOWriterCreate(uri string, out []unsafe.Pointer) int32 {
	uri = safeString(uri)
	curi, _ := unpackPCharString(uri)
	cout, _ := (*C.RecordIOHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXRecordIOWriterCreate(curi, cout)
	runtime.KeepAlive(uri)
	__v := (int32)(__ret)
	return __v
}

// RecordIOWriterFree function as declared in bindingsgen/c_api.h:1521
func RecordIOWriterFree(handle unsafe.Pointer) int32 {
	chandle, _ := (C.RecordIOHandle)(handle), cgoAllocsUnknown
	__ret := C.MXRecordIOWriterFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// RecordIOWriterWriteRecord function as declared in bindingsgen/c_api.h:1530
func RecordIOWriterWriteRecord(handle unsafe.Pointer, buf string, size uint) int32 {
	chandle, _ := (C.RecordIOHandle)(handle), cgoAllocsUnknown
	buf = safeString(buf)
	cbuf, _ := unpackPCharString(buf)
	csize, _ := (C.size_t)(size), cgoAllocsUnknown
	__ret := C.MXRecordIOWriterWriteRecord(chandle, cbuf, csize)
	runtime.KeepAlive(buf)
	__v := (int32)(__ret)
	return __v
}

// RecordIOWriterTell function as declared in bindingsgen/c_api.h:1539
func RecordIOWriterTell(handle unsafe.Pointer, pos []uint) int32 {
	chandle, _ := (C.RecordIOHandle)(handle), cgoAllocsUnknown
	cpos, _ := (*C.size_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&pos)).Data)), cgoAllocsUnknown
	__ret := C.MXRecordIOWriterTell(chandle, cpos)
	__v := (int32)(__ret)
	return __v
}

// RecordIOReaderCreate function as declared in bindingsgen/c_api.h:1547
func RecordIOReaderCreate(uri string, out []unsafe.Pointer) int32 {
	uri = safeString(uri)
	curi, _ := unpackPCharString(uri)
	cout, _ := (*C.RecordIOHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXRecordIOReaderCreate(curi, cout)
	runtime.KeepAlive(uri)
	__v := (int32)(__ret)
	return __v
}

// RecordIOReaderFree function as declared in bindingsgen/c_api.h:1554
func RecordIOReaderFree(handle unsafe.Pointer) int32 {
	chandle, _ := (C.RecordIOHandle)(handle), cgoAllocsUnknown
	__ret := C.MXRecordIOReaderFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// RecordIOReaderReadRecord function as declared in bindingsgen/c_api.h:1563
func RecordIOReaderReadRecord(handle unsafe.Pointer, buf []string, size []uint) int32 {
	chandle, _ := (C.RecordIOHandle)(handle), cgoAllocsUnknown
	cbuf, _ := unpackArgSString(buf)
	csize, _ := (*C.size_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&size)).Data)), cgoAllocsUnknown
	__ret := C.MXRecordIOReaderReadRecord(chandle, cbuf, csize)
	packSString(buf, cbuf)
	__v := (int32)(__ret)
	return __v
}

// RecordIOReaderSeek function as declared in bindingsgen/c_api.h:1572
func RecordIOReaderSeek(handle unsafe.Pointer, pos uint) int32 {
	chandle, _ := (C.RecordIOHandle)(handle), cgoAllocsUnknown
	cpos, _ := (C.size_t)(pos), cgoAllocsUnknown
	__ret := C.MXRecordIOReaderSeek(chandle, cpos)
	__v := (int32)(__ret)
	return __v
}

// RtcCreate function as declared in bindingsgen/c_api.h:1577
func RtcCreate(name []byte, numInput uint32, numOutput uint32, inputNames [][]byte, outputNames [][]byte, inputs []NDArrayHandle, outputs []NDArrayHandle, kernel []byte, out []unsafe.Pointer) int32 {
	cname, _ := (*C.char)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&name)).Data)), cgoAllocsUnknown
	cnumInput, _ := (C.mx_uint)(numInput), cgoAllocsUnknown
	cnumOutput, _ := (C.mx_uint)(numOutput), cgoAllocsUnknown
	cinputNames, _ := unpackArgSSByte(inputNames)
	coutputNames, _ := unpackArgSSByte(outputNames)
	cinputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inputs)).Data)), cgoAllocsUnknown
	coutputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outputs)).Data)), cgoAllocsUnknown
	ckernel, _ := (*C.char)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&kernel)).Data)), cgoAllocsUnknown
	cout, _ := (*C.RtcHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXRtcCreate(cname, cnumInput, cnumOutput, cinputNames, coutputNames, cinputs, coutputs, ckernel, cout)
	packSSByte(outputNames, coutputNames)
	packSSByte(inputNames, cinputNames)
	__v := (int32)(__ret)
	return __v
}

// RtcPush function as declared in bindingsgen/c_api.h:1585
func RtcPush(handle unsafe.Pointer, numInput uint32, numOutput uint32, inputs []NDArrayHandle, outputs []NDArrayHandle, gridDimX uint32, gridDimY uint32, gridDimZ uint32, blockDimX uint32, blockDimY uint32, blockDimZ uint32) int32 {
	chandle, _ := (C.RtcHandle)(handle), cgoAllocsUnknown
	cnumInput, _ := (C.mx_uint)(numInput), cgoAllocsUnknown
	cnumOutput, _ := (C.mx_uint)(numOutput), cgoAllocsUnknown
	cinputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inputs)).Data)), cgoAllocsUnknown
	coutputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outputs)).Data)), cgoAllocsUnknown
	cgridDimX, _ := (C.mx_uint)(gridDimX), cgoAllocsUnknown
	cgridDimY, _ := (C.mx_uint)(gridDimY), cgoAllocsUnknown
	cgridDimZ, _ := (C.mx_uint)(gridDimZ), cgoAllocsUnknown
	cblockDimX, _ := (C.mx_uint)(blockDimX), cgoAllocsUnknown
	cblockDimY, _ := (C.mx_uint)(blockDimY), cgoAllocsUnknown
	cblockDimZ, _ := (C.mx_uint)(blockDimZ), cgoAllocsUnknown
	__ret := C.MXRtcPush(chandle, cnumInput, cnumOutput, cinputs, coutputs, cgridDimX, cgridDimY, cgridDimZ, cblockDimX, cblockDimY, cblockDimZ)
	__v := (int32)(__ret)
	return __v
}

// RtcFree function as declared in bindingsgen/c_api.h:1597
func RtcFree(handle unsafe.Pointer) int32 {
	chandle, _ := (C.RtcHandle)(handle), cgoAllocsUnknown
	__ret := C.MXRtcFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// CustomOpRegister function as declared in bindingsgen/c_api.h:1599
func CustomOpRegister(opType string, creator CustomOpPropCreator) int32 {
	opType = safeString(opType)
	copType, _ := unpackPCharString(opType)
	ccreator, _ := creator.PassValue()
	__ret := C.MXCustomOpRegister(copType, ccreator)
	runtime.KeepAlive(opType)
	__v := (int32)(__ret)
	return __v
}

// GetLastError function as declared in bindingsgen/c_predict_api.h:34
func GetLastError() string {
	__ret := C.MXGetLastError()
	__v := packPCharString(__ret)
	return __v
}

// PredCreate function as declared in bindingsgen/c_predict_api.h:55
func PredCreate(symbolJsonStr string, paramBytes unsafe.Pointer, paramSize int32, devType int32, devId int32, numInputNodes uint32, inputKeys []string, inputShapeIndptr []uint32, inputShapeData []uint32, out []unsafe.Pointer) int32 {
	symbolJsonStr = safeString(symbolJsonStr)
	csymbolJsonStr, _ := unpackPCharString(symbolJsonStr)
	cparamBytes, _ := (unsafe.Pointer)(unsafe.Pointer(paramBytes)), cgoAllocsUnknown
	cparamSize, _ := (C.int)(paramSize), cgoAllocsUnknown
	cdevType, _ := (C.int)(devType), cgoAllocsUnknown
	cdevId, _ := (C.int)(devId), cgoAllocsUnknown
	cnumInputNodes, _ := (C.mx_uint)(numInputNodes), cgoAllocsUnknown
	cinputKeys, _ := unpackArgSString(inputKeys)
	cinputShapeIndptr, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inputShapeIndptr)).Data)), cgoAllocsUnknown
	cinputShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inputShapeData)).Data)), cgoAllocsUnknown
	cout, _ := (*C.PredictorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXPredCreate(csymbolJsonStr, cparamBytes, cparamSize, cdevType, cdevId, cnumInputNodes, cinputKeys, cinputShapeIndptr, cinputShapeData, cout)
	packSString(inputKeys, cinputKeys)
	runtime.KeepAlive(symbolJsonStr)
	__v := (int32)(__ret)
	return __v
}

// PredCreatePartialOut function as declared in bindingsgen/c_predict_api.h:88
func PredCreatePartialOut(symbolJsonStr string, paramBytes unsafe.Pointer, paramSize int32, devType int32, devId int32, numInputNodes uint32, inputKeys []string, inputShapeIndptr []uint32, inputShapeData []uint32, numOutputNodes uint32, outputKeys []string, out []unsafe.Pointer) int32 {
	symbolJsonStr = safeString(symbolJsonStr)
	csymbolJsonStr, _ := unpackPCharString(symbolJsonStr)
	cparamBytes, _ := (unsafe.Pointer)(unsafe.Pointer(paramBytes)), cgoAllocsUnknown
	cparamSize, _ := (C.int)(paramSize), cgoAllocsUnknown
	cdevType, _ := (C.int)(devType), cgoAllocsUnknown
	cdevId, _ := (C.int)(devId), cgoAllocsUnknown
	cnumInputNodes, _ := (C.mx_uint)(numInputNodes), cgoAllocsUnknown
	cinputKeys, _ := unpackArgSString(inputKeys)
	cinputShapeIndptr, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inputShapeIndptr)).Data)), cgoAllocsUnknown
	cinputShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&inputShapeData)).Data)), cgoAllocsUnknown
	cnumOutputNodes, _ := (C.mx_uint)(numOutputNodes), cgoAllocsUnknown
	coutputKeys, _ := unpackArgSString(outputKeys)
	cout, _ := (*C.PredictorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	__ret := C.MXPredCreatePartialOut(csymbolJsonStr, cparamBytes, cparamSize, cdevType, cdevId, cnumInputNodes, cinputKeys, cinputShapeIndptr, cinputShapeData, cnumOutputNodes, coutputKeys, cout)
	packSString(outputKeys, coutputKeys)
	packSString(inputKeys, cinputKeys)
	runtime.KeepAlive(symbolJsonStr)
	__v := (int32)(__ret)
	return __v
}

// PredGetOutputShape function as declared in bindingsgen/c_predict_api.h:108
func PredGetOutputShape(handle unsafe.Pointer, index uint32, shapeData [][]uint32, shapeNdim []uint32) int32 {
	chandle, _ := (C.PredictorHandle)(handle), cgoAllocsUnknown
	cindex, _ := (C.mx_uint)(index), cgoAllocsUnknown
	cshapeData, _ := unpackArgSSUUint32(shapeData)
	cshapeNdim, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&shapeNdim)).Data)), cgoAllocsUnknown
	__ret := C.MXPredGetOutputShape(chandle, cindex, cshapeData, cshapeNdim)
	packSSUUint32(shapeData, cshapeData)
	__v := (int32)(__ret)
	return __v
}

// PredSetInput function as declared in bindingsgen/c_predict_api.h:121
func PredSetInput(handle unsafe.Pointer, key string, data []float32, size uint32) int32 {
	chandle, _ := (C.PredictorHandle)(handle), cgoAllocsUnknown
	key = safeString(key)
	ckey, _ := unpackPCharString(key)
	cdata, _ := (*C.mx_float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&data)).Data)), cgoAllocsUnknown
	csize, _ := (C.mx_uint)(size), cgoAllocsUnknown
	__ret := C.MXPredSetInput(chandle, ckey, cdata, csize)
	runtime.KeepAlive(key)
	__v := (int32)(__ret)
	return __v
}

// PredForward function as declared in bindingsgen/c_predict_api.h:130
func PredForward(handle unsafe.Pointer) int32 {
	chandle, _ := (C.PredictorHandle)(handle), cgoAllocsUnknown
	__ret := C.MXPredForward(chandle)
	__v := (int32)(__ret)
	return __v
}

// PredPartialForward function as declared in bindingsgen/c_predict_api.h:147
func PredPartialForward(handle unsafe.Pointer, step int32, stepLeft []int32) int32 {
	chandle, _ := (C.PredictorHandle)(handle), cgoAllocsUnknown
	cstep, _ := (C.int)(step), cgoAllocsUnknown
	cstepLeft, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&stepLeft)).Data)), cgoAllocsUnknown
	__ret := C.MXPredPartialForward(chandle, cstep, cstepLeft)
	__v := (int32)(__ret)
	return __v
}

// PredGetOutput function as declared in bindingsgen/c_predict_api.h:156
func PredGetOutput(handle unsafe.Pointer, index uint32, data []float32, size uint32) int32 {
	chandle, _ := (C.PredictorHandle)(handle), cgoAllocsUnknown
	cindex, _ := (C.mx_uint)(index), cgoAllocsUnknown
	cdata, _ := (*C.mx_float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&data)).Data)), cgoAllocsUnknown
	csize, _ := (C.mx_uint)(size), cgoAllocsUnknown
	__ret := C.MXPredGetOutput(chandle, cindex, cdata, csize)
	__v := (int32)(__ret)
	return __v
}

// PredFree function as declared in bindingsgen/c_predict_api.h:165
func PredFree(handle unsafe.Pointer) int32 {
	chandle, _ := (C.PredictorHandle)(handle), cgoAllocsUnknown
	__ret := C.MXPredFree(chandle)
	__v := (int32)(__ret)
	return __v
}

// NDListCreate function as declared in bindingsgen/c_predict_api.h:175
func NDListCreate(ndFileBytes string, ndFileSize int32, out []NDListHandle, outLength []uint32) int32 {
	ndFileBytes = safeString(ndFileBytes)
	cndFileBytes, _ := unpackPCharString(ndFileBytes)
	cndFileSize, _ := (C.int)(ndFileSize), cgoAllocsUnknown
	cout, _ := (*C.NDListHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&out)).Data)), cgoAllocsUnknown
	coutLength, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outLength)).Data)), cgoAllocsUnknown
	__ret := C.MXNDListCreate(cndFileBytes, cndFileSize, cout, coutLength)
	runtime.KeepAlive(ndFileBytes)
	__v := (int32)(__ret)
	return __v
}

// NDListGet function as declared in bindingsgen/c_predict_api.h:189
func NDListGet(handle NDListHandle, index uint32, outKey []string, outData [][]float32, outShape [][]uint32, outNdim []uint32) int32 {
	chandle, _ := (C.NDListHandle)(handle), cgoAllocsUnknown
	cindex, _ := (C.mx_uint)(index), cgoAllocsUnknown
	coutKey, _ := unpackArgSString(outKey)
	coutData, _ := unpackArgSSFloat32(outData)
	coutShape, _ := unpackArgSSUUint32(outShape)
	coutNdim, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outNdim)).Data)), cgoAllocsUnknown
	__ret := C.MXNDListGet(chandle, cindex, coutKey, coutData, coutShape, coutNdim)
	packSSUUint32(outShape, coutShape)
	packSSFloat32(outData, coutData)
	packSString(outKey, coutKey)
	__v := (int32)(__ret)
	return __v
}

// NDListFree function as declared in bindingsgen/c_predict_api.h:200
func NDListFree(handle NDListHandle) int32 {
	chandle, _ := (C.NDListHandle)(handle), cgoAllocsUnknown
	__ret := C.MXNDListFree(chandle)
	__v := (int32)(__ret)
	return __v
}
