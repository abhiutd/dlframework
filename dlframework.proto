syntax = "proto3";

import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

option go_package = "dlframework";

// CarML DLFramework
//
// CarML (Cognitive ARtifacts for Machine Learning) is a framework allowing
// people to develop and deploy machine learning models. It allows machine
// learning (ML) developers to publish and evaluate their models, users to
// experiment with different models and frameworks through a web user
// interface or a REST api, and system architects to capture system resource
// usage to inform future system and hardware configuration.
package carml.org.dlframework;

message ErrorStatus {
  bool ok = 1 [ (gogoproto.moretags) = "yaml:\"ok,omitempty\"" ];
  string message = 2 [ (gogoproto.moretags) = "yaml:\"message,omitempty\"" ];
}

message ContainerHardware {
  string gpu = 1 [ (gogoproto.moretags) = "yaml:\"gpu,omitempty\"" ];
  string cpu = 2 [ (gogoproto.moretags) = "yaml:\"cpu,omitempty\"" ];
}

message FrameworkManifest {
  string name = 1 [ (gogoproto.moretags) = "yaml:\"name,omitempty\"" ];
  string version = 2 [ (gogoproto.moretags) = "yaml:\"version,omitempty\"" ];
  map<string, ContainerHardware> container = 3
      [ (gogoproto.moretags) = "yaml:\"container,omitempty\"" ];
}

message ModelManifest {
  message Type {
    message Parameter {
      string value = 1 [ (gogoproto.moretags) = "yaml:\",inline\"" ];
    }
    string type = 1 [ (gogoproto.moretags) = "yaml:\"type,omitempty\"" ];
    string description = 2
        [ (gogoproto.moretags) = "yaml:\"description,omitempty\"" ];
    map<string, Parameter> parameters = 3
        [ (gogoproto.moretags) = "yaml:\"parameters,omitempty\"" ];
  }

  message Model {
    string base_url = 1
        [ (gogoproto.moretags) = "yaml:\"base_url,omitempty\"" ];
    string weights_path = 2
        [ (gogoproto.moretags) = "yaml:\"weights_path,omitempty\"" ];
    string graph_path = 3
        [ (gogoproto.moretags) = "yaml:\"graph_path,omitempty\"" ];
    bool is_archive = 4
        [ (gogoproto.moretags) = "yaml:\"is_archive,omitempty\"" ];
  }

  string name = 1 [ (gogoproto.moretags) = "yaml:\"name,omitempty\"" ];
  string version = 2 [ (gogoproto.moretags) = "yaml:\"version,omitempty\"" ];
  FrameworkManifest framework = 3
      [ (gogoproto.moretags) = "yaml:\"framework,omitempty\"" ];
  map<string, ContainerHardware> container = 4
      [ (gogoproto.moretags) = "yaml:\"container,omitempty\"" ];
  string description = 5
      [ (gogoproto.moretags) = "yaml:\"description,omitempty\"" ];
  repeated string reference = 6
      [ (gogoproto.moretags) = "yaml:\"references,omitempty\"" ];
  string license = 7 [ (gogoproto.moretags) = "yaml:\"license,omitempty\"" ];
  repeated Type inputs = 8
      [ (gogoproto.moretags) = "yaml:\"inputs,omitempty\"" ];
  Type output = 9 [ (gogoproto.moretags) = "yaml:\"output,omitempty\"" ];
  string before_preprocess = 10
      [ (gogoproto.moretags) = "yaml:\"before_preprocess,omitempty\"" ];
  string preprocess = 11
      [ (gogoproto.moretags) = "yaml:\"preprocess,omitempty\"" ];
  string after_preprocess = 12
      [ (gogoproto.moretags) = "yaml:\"after_preprocess,omitempty\"" ];
  string before_postprocess = 13
      [ (gogoproto.moretags) = "yaml:\"before_postprocess,omitempty\"" ];
  string postprocess = 14
      [ (gogoproto.moretags) = "yaml:\"postprocess,omitempty\"" ];
  string after_postprocess = 15
      [ (gogoproto.moretags) = "yaml:\"after_postprocess,omitempty\"" ];
  Model model = 16 [ (gogoproto.moretags) = "yaml:\"model,omitempty\"" ];
  map<string, string> attributes = 17
      [ (gogoproto.moretags) = "yaml:\"attributes,omitempty\"" ];
  bool hidden = 18 [ (gogoproto.moretags) = "yaml:\"hidden,omitempty\"" ];
}

message FrameworkRequest {
  string framework_name = 1
      [ (gogoproto.moretags) = "yaml:\"framework_name,omitempty\"" ];
  string framework_version = 2
      [ (gogoproto.moretags) = "yaml:\"framework_version,omitempty\"" ];
}

message FrameworkManifestsResponse {
  repeated FrameworkManifest manifests = 1
      [ (gogoproto.moretags) = "yaml:\"manifests,omitempty\"" ];
}

message Agent {
  string host = 1 [ (gogoproto.moretags) = "yaml:\"host,omitempty\"" ];
  string port = 2 [ (gogoproto.moretags) = "yaml:\"port,omitempty\"" ];
}

message Agents {
  repeated Agent agents = 1
      [ (gogoproto.moretags) = "yaml:\"agents,omitempty\"" ];
}

message ModelRequest {
  string framework_name = 1
      [ (gogoproto.moretags) = "yaml:\"framework_name,omitempty\"" ];
  string framework_version = 2
      [ (gogoproto.moretags) = "yaml:\"framework_version,omitempty\"" ];
  string model_name = 3
      [ (gogoproto.moretags) = "yaml:\"model_name,omitempty\"" ];
  string model_version = 4
      [ (gogoproto.moretags) = "yaml:\"model_version,omitempty\"" ];
}

message ModelManifestsResponse {
  repeated ModelManifest manifests = 1
      [ (gogoproto.moretags) = "yaml:\"manifests,omitempty\"" ];
}

message PredictRequest {
  string model_name = 1
      [ (gogoproto.moretags) = "yaml:\"model_name,omitempty\"" ];
  string model_version = 2
      [ (gogoproto.moretags) = "yaml:\"model_version,omitempty\"" ];
  string framework_name = 3
      [ (gogoproto.moretags) = "yaml:\"framework_name,omitempty\"" ];
  string framework_version = 4
      [ (gogoproto.moretags) = "yaml:\"framework_version,omitempty\"" ];
  int32 limit = 5 [ (gogoproto.moretags) = "yaml:\"limit,omitempty\"" ];
  bytes data = 6 [ (gogoproto.moretags) = "yaml:\"data,omitempty\"" ];
}

message PredictURLRequest {
  string model_name = 1
      [ (gogoproto.moretags) = "yaml:\"model_name,omitempty\"" ];
  string model_version = 2
      [ (gogoproto.moretags) = "yaml:\"model_version,omitempty\"" ];
  string framework_name = 3
      [ (gogoproto.moretags) = "yaml:\"framework_name,omitempty\"" ];
  string framework_version = 4
      [ (gogoproto.moretags) = "yaml:\"framework_version,omitempty\"" ];
  int32 limit = 5 [ (gogoproto.moretags) = "yaml:\"limit,omitempty\"" ];
  string url = 6 [ (gogoproto.moretags) = "yaml:\"url,omitempty\"" ];
}

message PredictImageRequest {
  string model_name = 1
      [ (gogoproto.moretags) = "yaml:\"model_name,omitempty\"" ];
  string model_version = 2
      [ (gogoproto.moretags) = "yaml:\"model_version,omitempty\"" ];
  string framework_name = 3
      [ (gogoproto.moretags) = "yaml:\"framework_name,omitempty\"" ];
  string framework_version = 4
      [ (gogoproto.moretags) = "yaml:\"framework_version,omitempty\"" ];
  int32 limit = 5 [ (gogoproto.moretags) = "yaml:\"limit,omitempty\"" ];
  bytes image = 6 [ (gogoproto.moretags) = "yaml:\"image,omitempty\"" ];
}

message PredictDatasetRequest {
  string model_name = 1
      [ (gogoproto.moretags) = "yaml:\"model_name,omitempty\"" ];
  string model_version = 2
      [ (gogoproto.moretags) = "yaml:\"model_version,omitempty\"" ];
  string framework_name = 3
      [ (gogoproto.moretags) = "yaml:\"framework_name,omitempty\"" ];
  string framework_version = 4
      [ (gogoproto.moretags) = "yaml:\"framework_version,omitempty\"" ];
  int32 limit = 5 [ (gogoproto.moretags) = "yaml:\"limit,omitempty\"" ];
  string dataset_category = 6
      [ (gogoproto.moretags) = "yaml:\"dataset_category,omitempty\"" ];
  string dataset_name = 7
      [ (gogoproto.moretags) = "yaml:\"dataset_name,omitempty\"" ];
}

message PredictionFeature {
  int64 index = 1 [ (gogoproto.moretags) = "yaml:\"index,omitempty\"" ];
  string name = 2 [ (gogoproto.moretags) = "yaml:\"name,omitempty\"" ];
  float probability = 3
      [ (gogoproto.moretags) = "yaml:\"probability,omitempty\"" ];
}

message PredictResponse {
  string id = 1 [ (gogoproto.moretags) = "yaml:\"id,omitempty\"" ];
  repeated PredictionFeature features = 2
      [ (gogoproto.moretags) = "yaml:\"features,omitempty\"" ];
}

message PredictionFeatureResponse {
  string id = 1 [ (gogoproto.moretags) = "yaml:\"id,omitempty\"" ];
  string request_id = 2
      [ (gogoproto.moretags) = "yaml:\"request_id,omitempty\"" ];
  PredictionFeature features = 3
      [ (gogoproto.moretags) = "yaml:\"features,omitempty\"" ];
}

service Registry {
  rpc FrameworkManifests(FrameworkRequest)
      returns (FrameworkManifestsResponse) {
    option (google.api.http) = {
      get : "/v1/registry/frameworks/manifest",
    };
  }
  rpc FrameworkAgents(FrameworkRequest) returns (Agents) {
    option (google.api.http) = {
      get : "/v1/registry/frameworks/agent",
    };
  }
  rpc ModelManifests(ModelRequest) returns (ModelManifestsResponse) {
    option (google.api.http) = {
      get : "/v1/registry/models/manifest",
    };
  }
  rpc ModelAgents(ModelRequest) returns (Agents) {
    option (google.api.http) = {
      get : "/v1/registry/models/agent",
    };
  }
}
service Predictor {
  rpc URLs(stream PredictURLRequest)
      returns (stream PredictionFeatureResponse) {
    option (google.api.http) = {
      post : "/v1/predict/urls",
      body : "*"
    };
  }
  rpc Images(stream PredictImageRequest)
      returns (stream PredictionFeatureResponse) {
    option (google.api.http) = {
      post : "/v1/predict/images",
      body : "*"
    };
  }
  // Echo method receives a simple message and returns it.
  //
  // The message posted as the id parameter will also be
  // returned.
  rpc Dataset(PredictDatasetRequest)
      returns (stream PredictionFeatureResponse) {
    option (google.api.http) = {
      post : "/v1/predict/dataset",
      body : "*"
    };
  }
}
