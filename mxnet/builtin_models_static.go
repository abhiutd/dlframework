// Code generated by go-bindata.
// sources:
// builtin_models/README.md
// builtin_models/ResNeXt101.yml
// builtin_models/ResNeXt50.yml
// builtin_models/ResidualNet101.yml
// builtin_models/ResidualNet18.yml
// builtin_models/ResidualNet200.yml
// builtin_models/ResidualNet34.yml
// builtin_models/ResidualNet50.yml
// builtin_models/Resnet152_11k.yml
// builtin_models/caffenet.yml
// builtin_models/inceptionv3.yml
// builtin_models/locationnet.yml
// builtin_models/nin.yml
// builtin_models/residualNet152.yml
// builtin_models/squeeznet.yml
// builtin_models/vgg16.yml
// builtin_models/vgg19.yml
// DO NOT EDIT!

package mxnet

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xcb\xc1\x09\x03\x21\x10\x05\xd0\xbb\x55\x7c\xc8\x25\xb9\x58\x4c\x1a\xc8\x98\x75\x56\x06\xf4\x2b\x3a\xc2\x96\xbf\xb0\x05\xbc\x17\xfe\xdb\xaa\x1b\x7f\xad\x67\xad\x2b\x84\xef\x26\xa4\x74\x14\xa5\xce\xe4\x2a\x30\x42\xda\x45\x75\xc1\x5b\x62\x94\x0f\xd2\xe9\x3a\xb1\x47\x4e\x6e\x2c\x78\x28\xb2\xae\x63\xda\x70\xeb\x5c\xf1\x0e\x00\x00\xff\xff\x9f\xd3\x11\xba\x58\x00\x00\x00"

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 88, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnext101Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x3d\x6f\x1b\x31\x0c\xdd\xf5\x2b\xb8\x64\x8b\xa5\x93\x63\x7b\xb8\xa1\x7b\x51\x20\x43\xd1\xa1\x40\x51\x04\xaa\xc4\xbb\x53\xaa\x2f\x90\xb4\xe3\xeb\xaf\x2f\x74\x46\xd2\x0e\xed\x92\x45\x20\x1f\xf8\xf8\x48\x3d\x16\x97\x71\x84\xcf\xc8\x8f\xf8\x55\xec\x60\x95\xaf\x45\x5c\x2c\x48\xa3\x02\x70\x39\x9c\x0e\x3d\x00\x98\xdb\x79\x04\x72\xb1\x51\x7d\x46\x2f\x46\x6b\xbd\xe1\xfe\x9f\x78\x6b\xfe\x74\x48\xf8\x17\xb5\xe3\x13\xb9\x8c\x2f\x95\x7e\x8e\x90\xaf\x05\x45\x5d\x90\x38\xd6\x32\x82\xd5\x83\x92\xb5\xe1\x08\xbe\x14\x15\x4b\x3b\x4b\xe7\xde\xa0\x98\xdd\x8c\x0a\x20\xc4\x8c\xa5\xd7\xf3\x08\xdf\xec\x3d\x3c\xdc\xc3\x7e\x7f\xd8\x9e\xef\x2a\x38\x71\x8c\xf2\x74\x5b\xe8\x63\xa7\x3c\xa2\xa8\x09\x9d\x9c\x09\xf9\xe9\x4c\x69\x84\x45\xa4\x8d\xc6\xf4\x5a\x1d\x72\xf2\x3a\x27\xb3\x4d\x62\x72\x0d\x98\xd8\x6c\x52\x3d\x27\xe4\x82\x57\x31\xbc\x16\x46\xd1\x72\x15\x35\x93\x6b\xcb\x7b\xfb\xd8\xc1\xee\x92\x5b\x91\xf8\x15\xda\x75\x88\xd7\xfc\xa3\x26\xfd\xcc\xb5\xa8\x17\x8c\xf3\x22\xef\x9e\xf4\x3f\x0a\xc3\x30\x0c\xba\x39\x72\x99\x15\xe1\x84\x84\xc5\x23\xf7\xcf\xdd\x6d\x22\x3c\x1a\xe3\xe8\x1a\x2f\xba\xd2\x6c\x5a\x98\x8c\x3d\x59\xab\x87\xe3\xe1\xc1\xea\x16\x26\x15\x90\x3d\xc5\x26\x9b\x4f\x1f\x14\xbc\x1e\x0b\x44\x06\x07\x1c\x73\x4b\x78\x0f\x4b\x9c\x97\xb4\x42\xae\xe1\x9c\x1c\xc5\x5f\x18\xa0\xa0\x74\xaf\xc1\x91\x5f\xa2\xa0\xef\x3e\xc0\x54\xe9\xe6\x27\xf8\xe4\x98\xe3\x14\xbd\xeb\xad\xfb\xd1\x7c\x59\x22\xbf\xb1\x7c\x2d\x1c\x59\x18\xea\x04\x76\xb0\x70\x5b\x4d\xff\xd1\xef\xa0\xf3\x4b\xc4\x0b\x32\xec\xad\xde\xdf\x81\x2b\x01\x8e\xfa\x74\x07\x52\xdb\xce\x6e\x69\x8f\x8e\x80\x44\x95\xa0\x96\xb7\xbb\xb0\x9f\xb4\xfa\x1d\x00\x00\xff\xff\x20\x2b\x2e\xbb\xfb\x02\x00\x00"

func resnext101YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnext101Yml,
		"ResNeXt101.yml",
	)
}

func resnext101Yml() (*asset, error) {
	bytes, err := resnext101YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResNeXt101.yml", size: 763, mode: os.FileMode(420), modTime: time.Unix(1497136409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnext50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x3d\x6f\x1b\x31\x0c\xdd\xf5\x2b\xb8\x64\x8b\x25\x9d\xe3\xf3\x70\x43\xf7\xa2\x40\x86\xa2\x43\x81\xa2\x08\x54\x89\x77\xa7\x54\x5f\x20\x69\xc7\xee\xaf\x2f\x74\x46\xd2\x0e\x99\xb2\x08\xd2\x03\x1f\x1f\xa9\xf7\x8a\xcb\x38\xc1\x57\xe4\x47\xfc\x2e\xa3\x55\xbe\x16\x71\xb1\x20\x4d\x0a\xc0\xe5\x70\x3c\xf4\x0b\xc0\xd2\x4e\x13\x90\x8b\x8d\xea\x33\x7a\x31\x5a\xeb\x0d\xf7\xef\xe2\xad\xf9\xe3\x21\xe1\x7f\xd4\x8e\xcf\xe4\x32\xbe\x54\xfa\x3d\x41\xbe\x14\x14\x75\x46\xe2\x58\xcb\x04\x83\xb6\x4a\xae\x0d\x27\xf0\xa5\xa8\x58\xda\x49\x3a\xf7\x06\xc5\xec\x16\x54\x00\x21\x66\x2c\xbd\x9e\x27\xf8\x31\xdc\xc3\xc3\x3d\xec\xf7\x87\xed\xf8\xa9\x82\x13\xc7\x28\x4f\xb7\x7d\x3e\x77\xca\x23\x8a\x9a\xd1\xc9\x89\x90\x9f\x4e\x94\x26\x58\x45\xda\x64\x4c\xaf\xd5\x21\x27\xaf\x73\x32\xdb\x24\x26\xd7\x80\x89\xcd\x26\xd5\xdf\x84\x5c\xf0\x22\x86\xaf\x85\x51\xb4\x5c\x44\x2d\xe4\xda\xfa\xd1\x3e\xa3\xdd\x25\x77\x45\xe2\x57\x64\x37\xda\x1d\x5f\xf3\xaf\x9a\xf4\x33\xd7\xa2\x5e\x30\x2e\xab\x7c\x78\xce\x77\xfb\x5b\x6b\xad\x6e\x8e\x5c\x66\x45\x38\x23\x61\xf1\xc8\xfd\x63\x77\x9b\x04\x4f\xc6\x38\xba\xc4\xb3\xae\xb4\x98\x16\x66\x33\x1c\x87\x41\xdb\xf1\xf0\x30\xe8\x16\x66\x15\x90\x3d\xc5\x26\x9b\x47\x9f\x14\xbc\xe6\x04\x22\x83\x03\x8e\xb9\x25\xbc\x87\x35\x2e\x6b\xba\x42\xae\xe1\x94\x1c\xc5\x3f\x18\xa0\xa0\x74\x9f\xc1\x91\x5f\xa3\xa0\xef\x1e\xc0\x5c\xe9\xe6\x25\xf8\xe4\x98\xe3\x1c\xbd\xeb\xad\x7b\x60\xbe\xad\x91\xdf\x58\xbe\x16\x8e\x2c\x0c\x75\x86\xd1\xc2\x6d\x31\xfd\x4f\x7e\xb4\xe0\xfc\x1a\xf1\x8c\x0c\xfb\xbd\xde\xdf\x81\x2b\x01\x46\x7d\xbc\x03\xa9\x6d\x37\x00\x12\x55\x82\x5a\xde\x72\x30\x7c\xd1\xea\x6f\x00\x00\x00\xff\xff\xba\xd8\x28\xb0\xea\x02\x00\x00"

func resnext50YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnext50Yml,
		"ResNeXt50.yml",
	)
}

func resnext50Yml() (*asset, error) {
	bytes, err := resnext50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResNeXt50.yml", size: 746, mode: os.FileMode(420), modTime: time.Unix(1497136409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet101Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xcb\x8e\xd4\x30\x10\xbc\xfb\x2b\xfa\xc2\x6d\xc7\x89\xe7\xb1\xa0\x1c\x90\x10\xa7\x95\xd0\x1e\x16\xc4\x05\xa1\x95\xc7\xe9\x24\x5e\xfc\x52\x77\x67\x1e\x7f\x8f\x9c\x0c\x88\xc3\x6a\x25\x2e\x89\x5d\xdd\x55\x2e\xbb\x3a\xd9\x88\x1d\x3c\x21\xfb\x7e\xb6\xe1\x11\xc5\xb4\x46\xb9\x9c\xc4\xfa\x84\xd4\x29\x00\x1b\xfb\xfb\x7d\x5d\x00\x8c\x65\xee\x80\xac\x2f\x94\x5f\xd0\x49\xa3\xb5\x5e\x70\xf7\x2a\x5e\x8a\xbb\xdf\x07\xfc\x87\x5a\xf1\x81\x6c\xc4\x73\xa6\x5f\x1d\xc4\x4b\x42\x51\x27\x24\xf6\x39\x75\x60\x74\xab\xe4\x5a\xb0\x03\x97\x92\xf2\xa9\xcc\x52\xb9\x2b\xe4\xa3\x1d\x51\x01\xf4\x3e\x62\xaa\xfd\xdc\xc1\x0f\x73\x07\xbb\x3b\xd8\x6e\xf7\xcb\xe7\xa7\xea\xad\x58\x46\x79\x5e\x2f\xf5\x50\x29\x8f\x28\x6a\x40\x2b\x33\x21\x3f\xcf\x14\x3a\x98\x44\x4a\xd7\x34\xb5\x57\xf7\x31\x38\x1d\x43\xb3\x38\x69\x62\xee\x31\x70\xb3\x1c\x55\xf7\x84\x5c\x7f\x7c\x4d\x8c\xa2\xe5\x22\x6a\x24\x5b\xa6\x37\x64\x5e\x17\x30\xad\xd9\x04\x7b\x45\xe2\x1b\xb2\xa9\x08\x5f\xe3\x31\x07\xfd\xc2\x39\xa9\x33\xfa\x71\x92\xb7\x0c\xfe\x8f\x72\xdb\xb6\xad\x2e\x96\x6c\x64\x45\x38\x20\x61\x72\xc8\xf5\x2d\x37\x8b\x38\x77\x4d\x63\xe9\xe2\x4f\x3a\xd3\xd8\x94\x7e\x68\xcc\xc1\x6c\x75\xbb\xdb\x7d\x38\x9c\x8c\x2e\xfd\xa0\x7a\x64\x47\xbe\xc8\x12\xcc\x47\x05\xf0\x29\xad\x11\x6c\x5c\xb0\xcc\x7e\xf0\xce\xd6\x22\x24\x94\x1a\x26\x1c\x67\x1f\x04\xf2\x00\xab\x1d\x90\xc9\x0a\x04\xb4\x94\x80\x6e\xc3\x05\xc3\x9c\x5c\x25\x31\x9c\x35\x69\x59\x5b\x61\x09\x9a\xeb\xc0\x7c\x9b\x3c\xff\x15\x74\x39\xb1\x67\xe1\xaa\x69\x5a\x73\xd3\xd5\xab\x15\x4c\x8c\xf1\x18\xb0\x16\x65\x42\xc6\x3f\x34\x06\xeb\x26\x8f\x27\x64\xd8\xe9\xc3\xfb\x77\x80\x44\x99\x80\xac\x20\xe4\x04\x0f\x5f\xbe\x7e\x7f\xfa\xbc\xd9\xb6\xe6\xa0\xd5\xef\x00\x00\x00\xff\xff\xc5\xa4\x88\xc5\xfb\x02\x00\x00"

func residualnet101YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet101Yml,
		"ResidualNet101.yml",
	)
}

func residualnet101Yml() (*asset, error) {
	bytes, err := residualnet101YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet101.yml", size: 763, mode: os.FileMode(420), modTime: time.Unix(1497136409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet18Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xbb\x6e\xdd\x30\x0c\xdd\xf5\x15\x5c\xba\xc5\xb2\x7d\x1f\xe9\x85\x87\x02\x45\xa7\x00\x45\x86\xb4\xe8\x52\x14\x81\xae\x4c\xdb\x4a\xf5\x02\x49\xdf\xc7\xdf\x17\xb2\x6f\x8b\x0e\x41\x90\x45\x8f\x43\x9e\xa3\x23\x92\xd1\x04\xec\xe0\x09\xd9\xf5\xb3\xf1\x8f\x28\xed\x41\xd9\x14\xc5\xb8\x88\xd4\x29\x00\x13\xfa\xfb\x5d\x39\x00\x8c\x79\xee\x80\x8c\xcb\x94\x5e\xd0\x4a\xad\xb5\x5e\x70\xfb\x2a\x9e\xb3\xbd\xdf\x79\xfc\x8f\x5a\xf0\x81\x4c\xc0\x73\xa2\xdf\x1d\x84\x4b\x44\x51\x27\x24\x76\x29\x76\xd0\xea\x46\xc9\x35\x63\x07\x36\x46\xe5\x62\x9e\xa5\x70\x57\xc8\x05\x33\xa2\x02\xe8\x5d\xc0\x58\xf2\xb9\x83\x9f\xed\x1d\x6c\xef\x60\xb3\xd9\x2d\xcb\x2f\xd5\x1b\x31\x8c\xf2\xbc\xfe\xe9\xa1\x50\x1e\x51\xd4\x80\x46\x66\x42\x7e\x9e\xc9\x77\x30\x89\xe4\xae\xae\x4b\xae\xee\x83\xb7\x3a\xf8\x7a\x71\x52\x87\xd4\xa3\xe7\x7a\x79\xaa\xdc\x09\xb9\x6c\x7c\x8d\x8c\xa2\xe5\x22\x6a\x24\x93\xa7\x37\x64\x5e\x17\x68\x0f\x95\x37\x57\x24\xbe\x01\x55\x7b\xa8\xf8\x1a\x8e\xc9\xeb\x17\x4e\x51\x9d\xd1\x8d\x93\xbc\x65\xef\xfd\xba\x4d\xd3\x34\x3a\x1b\x32\x81\x15\xe1\x80\x84\xd1\x22\x97\x3a\x56\x8b\x34\x77\x75\x6d\xe8\xe2\x4e\x3a\xd1\x58\xe7\x7e\xa8\xdb\x7d\xbb\xd1\xcd\x76\x7b\xd8\x9f\x5a\x9d\xfb\x41\xf5\xc8\x96\x5c\x96\xa5\x29\x9f\x14\xc0\xe7\xb8\x96\xbf\xb2\xde\x30\xbb\xc1\x59\x53\x82\x10\x51\x4a\x23\xe1\x38\x3b\x2f\x90\x06\x58\xdd\x80\x4c\x46\xc0\xa3\xa1\x08\x74\x9b\x2b\x18\xe6\x68\x0b\x89\xe1\xac\x49\xcb\x9a\x0a\x4b\x93\xb9\x0c\xcb\xf7\xc9\xf1\x3f\x41\x9b\x22\x3b\x16\x2e\x9a\xed\xe1\x26\xab\x57\x27\x18\x19\xc3\xd1\x63\x89\xc9\x84\x8c\x7f\x59\x0c\xc6\x4e\x0e\x4f\xc8\xb0\xd5\xfb\x8f\x1f\x00\x89\x12\x01\x19\x41\x48\x11\x1e\xbe\x7e\xfb\xf1\xf4\xa5\xda\x34\xed\x5e\xab\x3f\x01\x00\x00\xff\xff\xa4\x37\x8c\xe5\xf5\x02\x00\x00"

func residualnet18YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet18Yml,
		"ResidualNet18.yml",
	)
}

func residualnet18Yml() (*asset, error) {
	bytes, err := residualnet18YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet18.yml", size: 757, mode: os.FileMode(420), modTime: time.Unix(1497136409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet200Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x3d\x8f\xd4\x30\x10\xed\xfd\x2b\xa6\xa1\xbb\x75\x9c\xec\xee\x81\x52\x20\x21\xaa\x93\xd0\x15\x07\xa2\x41\xe8\xe4\x75\x26\x1b\x1f\xfe\xd2\xcc\x64\x3f\xfe\x3d\x72\xb2\x20\x8a\xd3\x49\x34\x89\xfd\x66\xde\xf3\xb3\xdf\x24\x1b\xb1\x87\x27\x64\x3f\xcc\x36\x3c\xa2\x74\xc6\x28\x97\x93\x58\x9f\x90\x7a\x05\x60\xe3\x70\xbf\xab\x0b\x80\x63\x99\x7b\x20\xeb\x0b\xe5\x17\x74\xd2\x68\xad\x17\xdc\xbd\x8a\x97\xe2\xee\x77\x01\xff\xa1\x56\x7c\x24\x1b\xf1\x9c\xe9\x57\x0f\xf1\x92\x50\xd4\x09\x89\x7d\x4e\x3d\xb4\xda\x28\xb9\x16\xec\xc1\xa5\xa4\x7c\x2a\xb3\x54\xee\x0a\xf9\x68\x8f\xa8\x00\x06\x1f\x31\xd5\x7e\xee\xe1\x47\x7b\x07\xdb\x3b\xe8\xba\xdd\xf2\xf9\xa9\x06\x2b\x96\x51\x9e\xd7\x4b\x3d\x54\xca\x23\x8a\x1a\xd1\xca\x4c\xc8\xcf\x33\x85\x1e\x26\x91\xd2\x37\x4d\xed\xd5\x43\x0c\x4e\xc7\xd0\x2c\x4e\x9a\x98\x07\x0c\xdc\x2c\x47\xd5\x3d\x21\xd7\x1f\x5f\x13\xa3\x68\xb9\x88\x3a\x92\x2d\xd3\x1b\x32\xaf\x0b\x74\xc6\x6c\x82\xbd\x22\xf1\x0d\xd9\x54\x84\xaf\xf1\x90\x83\x7e\xe1\x9c\xd4\x19\xfd\x71\x92\xb7\x0c\xfe\x8f\xb2\x31\xc6\xe8\x62\xc9\x46\x56\x84\x23\x12\x26\x87\x5c\xdf\x72\xb3\x88\x73\xdf\x34\x96\x2e\xfe\xa4\x33\x1d\x9b\x32\x8c\x4d\xbb\x6f\x3b\x6d\xb6\xdb\x0f\xfb\x53\xab\xcb\x30\xaa\x01\xd9\x91\x2f\xb2\x04\xf3\x51\x01\x7c\x4a\x6b\x04\x1b\x17\x2c\xb3\x1f\xbd\xb3\xb5\x08\x09\xa5\x86\x09\x87\xd9\x07\x81\x3c\xc2\x6a\x07\x64\xb2\x02\x01\x2d\x25\xa0\xdb\x70\xc1\x38\x27\x57\x49\x0c\x67\x4d\x5a\xd6\x56\x58\x82\xe6\x3a\x30\xdf\x26\xcf\x7f\x05\x5d\x4e\xec\x59\xb8\x6a\x76\xc6\xdc\x74\xf5\x6a\x05\x13\x63\x3c\x04\xac\x45\x99\x90\xf1\x0f\x8d\xc1\xba\xc9\xe3\x09\x19\xb6\x7a\xff\xfe\x1d\x20\x51\x26\x20\x2b\x08\x39\xc1\xc3\x97\xaf\xdf\x9f\x3e\x6f\x3a\xd3\xee\xb5\xfa\x1d\x00\x00\xff\xff\xdd\x99\x5b\xb9\xfb\x02\x00\x00"

func residualnet200YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet200Yml,
		"ResidualNet200.yml",
	)
}

func residualnet200Yml() (*asset, error) {
	bytes, err := residualnet200YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet200.yml", size: 763, mode: os.FileMode(420), modTime: time.Unix(1497136409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet34Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x8f\xd4\x30\x0c\xbd\xe7\x57\xf8\xc2\x6d\x9b\xb6\xd3\xce\x82\x7a\x40\x42\x9c\x56\x42\x7b\x58\x10\x17\x84\x56\x99\xd4\x9d\x66\xc9\x97\x6c\x77\x3e\xfe\x3d\x4a\x3b\x20\x0e\xab\x15\x97\x7c\x3c\xfb\xbd\xbc\xd8\x8e\x26\xe0\x00\x4f\xc8\x6e\x5c\x8c\x7f\x44\xe9\x7a\x65\x53\x14\xe3\x22\xd2\xa0\x00\x4c\x18\xef\xfb\x72\x00\x38\xe6\x65\x00\x32\x2e\x53\x7a\x41\x2b\xb5\xd6\x7a\xc5\xed\xab\x78\xce\xf6\xbe\xf7\xf8\x0f\xb5\xe0\x13\x99\x80\xe7\x44\xbf\x06\x08\x97\x88\xa2\x4e\x48\xec\x52\x1c\xa0\xd5\x8d\x92\x6b\xc6\x01\x6c\x8c\xca\xc5\xbc\x48\xe1\x6e\x90\x0b\xe6\x88\x0a\x60\x74\x01\x63\xc9\xe7\x01\x7e\xb4\x77\xd0\xdd\xc1\x6e\xd7\xaf\xcb\x4f\x35\x1a\x31\x8c\xf2\xbc\xfd\xe9\xa1\x50\x1e\x51\xd4\x84\x46\x16\x42\x7e\x5e\xc8\x0f\x30\x8b\xe4\xa1\xae\x4b\xae\x1e\x83\xb7\x3a\xf8\x7a\x75\x52\x87\x34\xa2\xe7\x7a\x7d\xaa\xdc\x09\xb9\x6c\x7c\x8d\x8c\xa2\xe5\x22\xea\x48\x26\xcf\x6f\xc8\xbc\x2e\xd0\xf5\x95\x37\x57\x24\xbe\x01\x55\xd7\x57\x7c\x0d\x87\xe4\xf5\x0b\xa7\xa8\xce\xe8\x8e\xb3\xbc\x65\xef\xff\x75\x9b\xa6\x69\x74\x36\x64\x02\x2b\xc2\x09\x09\xa3\x45\x2e\x75\xac\x56\x69\x1e\xea\xda\xd0\xc5\x9d\x74\xa2\x63\x9d\xc7\xa9\x6e\xf7\xed\x4e\x37\x5d\xf7\x61\x7f\x6a\x75\x1e\x27\x35\x22\x5b\x72\x59\xd6\xa6\x7c\x54\x00\x9f\xe2\x56\xfe\xca\x7a\xc3\xec\x26\x67\x4d\x09\x42\x44\x29\x8d\x84\xc3\xe2\xbc\x40\x9a\x60\x73\x03\x32\x1b\x01\x8f\x86\x22\xd0\x6d\xae\x60\x5a\xa2\x2d\x24\x86\xb3\x26\x2d\x5b\x2a\xac\x4d\xe6\x32\x2c\xdf\x66\xc7\x7f\x05\x6d\x8a\xec\x58\xb8\x68\x76\xfd\x4d\x56\x6f\x4e\x30\x32\x86\x83\xc7\x12\x93\x19\x19\xff\xb0\x18\x8c\x9d\x1d\x9e\x90\xa1\xd3\xfb\xf7\xef\x00\x89\x12\x01\x19\x41\x48\x11\x1e\xbe\x7c\xfd\xfe\xf4\xb9\xda\x35\xed\x5e\xab\xdf\x01\x00\x00\xff\xff\xda\x61\x33\x88\xf5\x02\x00\x00"

func residualnet34YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet34Yml,
		"ResidualNet34.yml",
	)
}

func residualnet34Yml() (*asset, error) {
	bytes, err := residualnet34YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet34.yml", size: 757, mode: os.FileMode(420), modTime: time.Unix(1497136409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x3d\x6f\xdc\x30\x0c\xdd\xf5\x2b\xb8\x74\x8b\x65\xf9\x2e\x4e\x0b\x0f\x05\x8a\x4e\x01\x8a\x0c\x69\xd1\xa5\x28\x02\x45\xa6\xcf\x4a\xf5\x05\x92\xbe\x8f\x7f\x5f\xc8\xbe\x16\x1d\x82\xa0\x8b\x3e\x1e\xf9\x9e\x9e\x48\x26\x1b\x71\x80\x47\x64\x3f\x2e\x36\x3c\xa0\xf4\x46\xb9\x9c\xc4\xfa\x84\x34\x28\x00\x1b\xc7\xbb\xdb\x7a\x00\x38\x94\x65\x00\xb2\xbe\x50\x7e\x41\x27\xad\xd6\x7a\xc5\xdd\xab\x78\x29\xee\xee\x36\xe0\x3f\xd4\x8a\x4f\x64\x23\x9e\x32\xfd\x1a\x20\x9e\x13\x8a\x3a\x22\xb1\xcf\x69\x80\x4e\x1b\x25\x97\x82\x03\xb8\x94\x94\x4f\x65\x91\xca\xdd\x20\x1f\xed\x01\x15\xc0\xe8\x23\xa6\x9a\xcf\x03\xfc\xe8\x6e\x60\x7f\x03\xbb\xdd\xed\xba\xfc\x54\xa3\x15\xcb\x28\x4f\xdb\x9f\xee\x2b\xe5\x01\x45\x4d\x68\x65\x21\xe4\xa7\x85\xc2\x00\xb3\x48\x19\xda\xb6\xe6\xea\x31\x06\xa7\x63\x68\x57\x27\x6d\xcc\x23\x06\x6e\xd7\xa7\xea\x9d\x90\xeb\xc6\x97\xc4\x28\x5a\xce\xa2\x0e\x64\xcb\xfc\x86\xcc\xeb\x02\xbd\x69\x82\xbd\x20\xf1\x15\x68\x7a\xd3\xf0\x25\x3e\xe7\xa0\x5f\x38\x27\x75\x42\x7f\x98\xe5\x2d\x7b\xff\xaf\x6b\x8c\x31\xba\x58\xb2\x91\x15\xe1\x84\x84\xc9\x21\xd7\x3a\x36\xab\x34\x0f\x6d\x6b\xe9\xec\x8f\x3a\xd3\xa1\x2d\xe3\xd4\x76\x7d\xb7\xd3\x66\xbf\xff\xd0\x1f\x3b\x5d\xc6\x49\x8d\xc8\x8e\x7c\x91\xb5\x29\x1f\x15\xc0\xa7\xb4\x95\xbf\x71\xc1\x32\xfb\xc9\x3b\x5b\x83\x90\x50\x6a\x23\xe1\x79\xf1\x41\x20\x4f\xb0\xb9\x01\x99\xad\x40\x40\x4b\x09\xe8\x3a\x57\x30\x2d\xc9\x55\x12\xc3\x49\x93\x96\x2d\x15\xd6\x26\x73\x1d\x96\x6f\xb3\xe7\xbf\x82\x2e\x27\xf6\x2c\x5c\x35\x7b\x73\x95\xd5\x9b\x13\x4c\x8c\xf1\x39\x60\x8d\xc9\x8c\x8c\x7f\x58\x0c\xd6\xcd\x1e\x8f\xc8\xb0\xd7\xfd\xfb\x77\x80\x44\x99\x80\xac\x20\xe4\x04\xf7\x5f\xbe\x7e\x7f\xfc\xdc\xec\x4c\xd7\x6b\xf5\x3b\x00\x00\xff\xff\x14\x39\x87\xe2\xf5\x02\x00\x00"

func residualnet50YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet50Yml,
		"ResidualNet50.yml",
	)
}

func residualnet50Yml() (*asset, error) {
	bytes, err := residualnet50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet50.yml", size: 757, mode: os.FileMode(420), modTime: time.Unix(1497136409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnet152_11kYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x3d\x6f\xdd\x30\x0c\xdc\xf5\x2b\xb8\x74\x8b\xe5\x8f\x17\xa7\x85\x87\x02\x45\xd1\x21\x40\xd1\x21\x09\xb2\x14\x45\xc0\x27\xd3\xcf\x4a\x64\xc9\x20\xe9\xf7\xf1\xef\x0b\xd9\xfd\xc8\x90\x29\x8b\x41\x9c\x79\x27\x1e\x8f\x11\x27\xea\x80\x49\x22\x69\x51\xb7\x8d\x71\x29\x2a\xfa\x48\xdc\x19\x00\x9c\xfa\x9b\xeb\x5c\x00\x1c\xe6\xa5\x03\x46\x3f\x73\x7a\x26\xa7\xa5\xb5\x76\xc5\xdd\x9b\xf8\x3c\xbb\x9b\xeb\x40\xaf\xa8\x19\x1f\x18\x27\x3a\x25\x7e\xe9\x60\x3a\x47\x52\x73\x24\x16\x9f\x62\x07\xb5\xad\x8c\x5e\x66\xea\xc0\xc5\x68\x7c\x9c\x17\xcd\xdc\x0d\xf2\x13\x1e\xc8\x00\xf4\x7e\xa2\x98\xfb\xa5\x83\x9f\xf5\x15\xec\xae\xa0\x69\xae\xd7\xcf\x2f\xd3\xa3\xa2\x90\x3e\x6d\x86\x6e\x33\xe5\x47\xb6\x54\xbf\x98\x81\x50\x17\x26\x79\x5a\x38\x74\x30\xaa\xce\x5d\x59\xe6\x7e\xdb\x4f\xc1\xd9\x29\x94\xeb\x34\xe5\x94\x7a\x0a\x52\xae\xcf\xc5\x8d\x5b\xca\x25\x0a\xa9\xd5\xb3\x9a\x03\xe3\x3c\xbe\x47\xe3\xff\x76\x5f\x95\x85\x5c\xa6\x7d\x0a\xf6\x59\x52\x34\x27\xf2\x87\x51\xdf\x35\xe0\xdb\xe2\x55\x55\x55\x76\x46\xc6\x49\x0c\xd3\x40\x4c\xd1\x91\xe4\x95\x16\x7f\xf5\x91\xcf\xfe\x68\x13\x1f\x4a\xdc\x4b\x59\xb7\x75\x63\xab\xdd\xee\x53\x6b\x7a\x12\xc7\x7e\xd6\x35\x98\xcf\xe6\x4b\xdc\x02\x28\x5c\x40\x11\x3f\x78\x87\xf9\x17\x44\xd2\x1c\x25\xec\x17\x1f\x14\xd2\x00\x01\x2f\xc4\x02\x3a\xa2\x42\x20\xe4\x98\xcf\xca\xf7\x0b\x06\x18\x96\xe8\x32\x49\xe0\x64\xd9\xea\xd6\x0a\x6b\xcc\x92\xcf\xe5\x61\xf4\xf2\x4f\xd0\xa5\x28\x5e\x54\xb2\x66\x5b\x37\x7f\x74\xad\x81\xbb\xd5\x5f\xdd\x36\x80\x6e\xf4\x74\x24\x81\x66\x67\xab\x0f\xf0\x90\xe6\xa2\x86\x6f\xcc\x89\x01\x63\x0f\x37\xf6\xe3\x06\xb6\x40\x2b\x98\x22\xdc\x7e\xbf\x7f\xbc\xfb\xda\x54\x75\x5b\x3c\x62\xf0\xfd\x66\xe2\x9e\xd4\x1a\x30\xbf\x03\x00\x00\xff\xff\xe0\xf1\x90\x10\x06\x03\x00\x00"

func resnet152_11kYmlBytes() ([]byte, error) {
	return bindataRead(
		_resnet152_11kYml,
		"Resnet152_11k.yml",
	)
}

func resnet152_11kYml() (*asset, error) {
	bytes, err := resnet152_11kYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Resnet152_11k.yml", size: 774, mode: os.FileMode(420), modTime: time.Unix(1497136409, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _caffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x4d\x6f\xd4\x30\x10\xbd\xfb\x57\xcc\xa5\xb7\x8d\x93\xdd\xee\x2e\x6d\x0e\x48\xa8\x27\xc4\xc7\x01\x10\x17\x84\x2a\xe3\x4c\x36\x2e\xce\xd8\x9a\x99\xec\x76\xff\x3d\x72\xd2\x56\xa5\x42\x20\x2e\xc9\xf8\xf9\xbd\x67\xcf\x3c\x93\x1b\xb1\x85\x1b\xd7\xf7\xf8\x11\xd5\xf8\x44\xea\x02\x21\xb7\x06\xc0\x8d\xdd\x7e\x5b\x0a\x80\x43\x9e\x5a\x60\x17\x32\xa7\x3b\xf4\x5a\x5b\x6b\x67\xdc\xff\x11\xcf\xd9\xef\xb7\x11\x9f\x49\x0b\xde\xb3\x1b\xf1\x94\xf8\x67\x0b\xe3\x3d\xa1\x9a\x23\xb2\x84\x44\x2d\xac\x6d\x63\xf4\x9c\xb1\x05\x4f\x64\x02\xe5\x49\x8b\x76\x81\xc2\xe8\x0e\x68\x00\xba\x30\x22\x15\xbe\xb4\xf0\x6d\xbd\x82\xcb\x15\x6c\x36\xdb\xf9\xf3\xdd\x74\x4e\x9d\xa0\xde\x2e\xed\xbc\x2d\x92\xd2\x4e\x8f\x4e\x27\x46\xb9\x9d\x38\xb6\x30\xa8\xe6\xb6\xae\x0b\xd7\x76\x63\xf4\x76\x8c\xf5\x7c\x93\x7a\x4c\x1d\x46\xa9\xe7\xa3\xca\x5a\xce\x24\xa8\x56\xef\xd5\x1c\xd8\xe5\xe1\x7f\xf5\xbe\xcc\xf3\x79\x51\xc9\x79\xfc\x91\xa2\xbd\x93\x44\xe6\x84\xe1\x30\xe8\xdf\x2e\xf5\x4f\xbb\xa6\x69\x1a\x9b\x1d\xbb\x51\x0c\x63\x8f\x8c\xe4\x51\xca\xd0\xaa\x47\xc7\xec\x32\xb2\x58\x0a\x59\xac\xf7\xcb\xb2\xde\x5e\x6d\xb6\xd5\xa3\x6f\xe5\xa3\x13\x09\x7d\xf0\x4e\x43\xa2\xea\x14\x74\xa8\x3a\xc4\x5c\xf9\x44\xc7\x14\xa7\x82\xba\x58\x11\x4e\x3c\xff\xb4\xa4\x27\xa6\x43\xf1\x1c\xb2\xce\xd9\xbd\x06\x03\xf0\x86\x96\x98\x5e\x38\x42\x31\x83\xdf\xcc\xe0\xc1\x05\x94\xcb\x3b\xeb\x20\x11\xe8\x80\xf0\xfe\xf3\xd7\x4f\x37\xd5\xa6\x59\x37\x4f\xe9\x2d\x94\x40\x07\x10\xd4\x95\x01\x38\x0d\xc1\x0f\xe0\xfc\x10\xf0\x88\x1d\x68\xca\xd5\x1a\x1c\x2d\xd5\x0e\x90\x39\x31\xb0\x53\x14\x48\x3d\x5c\x5e\xdb\x57\x17\xf3\xf6\xfa\xca\x5e\x5f\x94\x77\xf9\x65\xc0\xa7\xf3\x7d\x22\x09\xa2\x33\x75\xdf\x7c\x80\x79\x98\xa8\xc8\x32\x6b\x76\x4d\xf3\x0e\x4a\xe3\x89\x04\x9c\xe7\x24\x02\xbb\x17\xad\x44\x77\x2e\x74\x3d\x25\xe8\xa7\x18\xcf\x65\x6c\x84\x5e\xb1\x7b\xd8\xb2\xbf\x02\x00\x00\xff\xff\xd6\x95\x78\x63\x5e\x03\x00\x00"

func caffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_caffenetYml,
		"caffenet.yml",
	)
}

func caffenetYml() (*asset, error) {
	bytes, err := caffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "caffenet.yml", size: 862, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inceptionv3Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\xc1\x6e\x14\x31\x0c\xbd\xe7\x2b\x7c\xe1\xd6\x49\x76\xa6\xbb\x8b\x94\x03\x12\x70\xaa\x04\x3d\x80\xc4\x05\xa1\x2a\xcd\x78\x76\x52\x12\x27\x8a\xbd\xb3\xbb\x7f\x8f\x32\x5b\x2a\x84\x50\xc5\x25\xb2\x5f\xfc\x9e\xed\x67\x72\x09\x2d\xdc\x91\xc7\x22\x21\x93\xf2\x99\xc4\x05\xc2\x6a\x15\x80\x4b\xe3\x7e\xdb\x02\x80\x43\x39\x5a\xa8\x2e\x94\x9a\x9f\xd0\x8b\xd1\x5a\xaf\xb8\xff\x27\x5e\x8a\xdf\x6f\x23\xfe\x41\x6d\xf8\x54\x5d\xc2\x53\xae\x3f\x2d\xa4\x33\xa1\xa8\x05\x2b\x87\x4c\x16\x6e\xf5\x46\xc9\xa5\xa0\x05\x4f\xa4\x02\x95\xa3\x34\xee\x15\x0a\xc9\x1d\x50\x01\x8c\x21\x21\xb5\x7a\xb6\xf0\xbd\xbf\x81\xdb\x1b\x18\x86\xed\xfa\xfc\x50\xa3\x13\xc7\x28\x0f\xcf\xfb\x34\xca\x3d\x8a\x9a\xd0\xc9\xb1\x22\x3f\x1c\x6b\xb4\x30\x8b\x14\x6b\x4c\xab\xd5\x63\x8a\x5e\xa7\x68\xd6\x49\x4c\xca\x23\x46\x36\x6b\xab\x96\xf3\x85\x18\x45\xcb\x59\xd4\xa1\xba\x32\xbf\xc2\xff\x8b\x19\x7e\x5b\xd9\x3d\x92\x79\xf1\xb5\xfb\x70\xdf\xf1\x25\x3d\xe6\xa8\x9f\x38\x93\x3a\x61\x38\xcc\xf2\xda\x58\xff\x2d\xbb\xe9\x87\xbd\x2e\xae\xba\xc4\xaa\xe2\x84\x15\xc9\x23\x37\xfb\xba\x55\x99\xad\x31\xae\x9e\xc3\xa2\x73\x3d\x98\x32\x4e\xa6\xdf\xf5\x83\xde\x6c\x76\xfb\xb7\xba\x8c\x93\x1a\x91\x7d\x0d\xab\x9e\x85\x77\x0a\xe0\x3d\x5d\x3d\xef\x7c\x74\xcc\x61\x0a\xde\xb5\x4f\xf0\x99\x96\x1c\x8f\x2d\x76\x11\x08\xa5\xdd\xb2\x9d\xfb\x65\x1e\x70\x7e\x0e\xb8\x20\xc3\xd0\xeb\xe1\x0d\x48\x2e\x5d\x0f\x8e\x46\xd8\xe9\xfd\x35\xdd\x01\xd6\x9a\x2b\x64\x02\x99\x11\xee\x3e\x7d\xfd\xf6\xe5\x23\x0c\x9b\x7e\x80\xc5\xc5\x30\x5e\x5b\x3d\x9f\x73\x15\x97\xd6\x98\x03\x0b\x43\x9e\x60\xc2\x13\x56\x90\xd9\x11\x0c\xbb\xcf\xb0\x2e\x8e\x82\x95\xb5\xfa\x15\x00\x00\xff\xff\x73\xf4\xed\x90\xcc\x02\x00\x00"

func inceptionv3YmlBytes() ([]byte, error) {
	return bindataRead(
		_inceptionv3Yml,
		"inceptionv3.yml",
	)
}

func inceptionv3Yml() (*asset, error) {
	bytes, err := inceptionv3YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inceptionv3.yml", size: 716, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _locationnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4f\x6f\x9b\x4c\x10\xc6\xef\xfb\x29\xe6\x92\x1b\x66\xc1\x38\x89\xcd\xe1\x95\x5e\x55\xad\x14\xa9\xc9\xa1\xea\xa1\x52\x15\x45\xc3\x32\x86\x6d\xf6\x0f\xda\x19\xec\x24\x9f\xbe\x5a\x70\xd3\xf6\xde\x0b\x20\x66\xf7\xf7\x3c\x33\xf3\x04\xf4\xd4\xc2\xe7\x68\x50\x6c\x0c\x0f\x24\xea\x98\xd0\xd3\x39\xa6\xe7\x16\xfc\x4b\x20\x51\x27\x4a\x6c\x63\x68\xa1\x2e\x2b\x25\xaf\x13\xb5\x60\x42\x50\x36\x4c\xb3\xb4\x0a\x60\xfd\x65\x3d\x0e\xa4\x00\x7a\xeb\x29\xe4\xf3\xdc\xc2\xf7\xba\x80\xa6\x80\xed\x76\xb7\x3c\x1e\x55\x8f\x82\x4c\xf2\xb4\xaa\xde\xcf\x4e\xac\xa7\xde\xe2\x87\xe8\x7d\x0c\xac\x8e\x84\x32\x27\xe2\xa7\x39\xb9\x16\x46\x91\x89\x5b\xad\x07\x2b\xe3\xdc\x95\x26\x7a\xed\xdf\xaf\x6c\x3a\x4a\xcf\xe4\xe8\x55\xcb\x2c\x31\x59\x74\xac\x3b\x17\x3b\xed\x91\x85\x92\x1e\x92\xed\xb9\x94\x17\x51\x43\xc2\x69\xfc\x9b\xc8\x4d\x89\x1e\xdf\x62\xc0\x33\xaf\x5c\x6f\x56\x0b\x9b\x5f\x34\xed\x63\x4f\x8e\xf5\x97\x87\xba\xaa\x37\xd7\xcf\xd7\x55\xb5\xe1\x57\xdf\x45\x57\xfe\xe0\x18\xd4\x99\xec\x30\x0a\xff\x13\x6e\x55\xd5\xdb\x72\xc2\x84\x9e\x95\x27\x0c\x4f\xcb\x30\xf3\xfc\xb6\x4d\x79\xb3\x2f\xa0\xae\x6f\xca\xdb\xdb\x43\x01\x75\xd5\x94\x87\xe6\xf0\xa8\x12\x1d\x29\x51\x30\xc4\x79\x05\x9b\xdf\x0e\x04\xc5\x9a\x72\x88\x71\x70\x34\x33\x25\x13\x83\x50\x90\xd5\x4d\x1e\x9c\x4e\xc4\x84\xc9\x8c\x97\x43\x4b\x85\x82\xd6\xd3\xdc\xb1\xce\x05\x7b\x22\xbd\xbb\xde\xed\xf7\xe5\xd4\x1f\x55\x4f\x6c\x92\x9d\x64\x89\xc0\x7f\x0a\xe0\x7f\x98\xc6\x28\x71\xe3\xa2\x41\x67\xdf\x96\xe0\x80\x89\xe1\x14\xdd\x9c\xbf\xd1\x41\xa0\x39\x2d\x2f\xc9\x41\x82\x0e\x99\x7a\x88\x01\x64\x24\xb8\x0b\x86\x16\x1a\x2c\x5a\x42\x26\xaf\xbc\x54\xf0\x67\x0a\xc1\x32\x60\xe7\x08\x24\xc2\x45\x87\xa0\x29\x6f\xae\x20\x1e\xd7\xa8\x31\xa0\x00\x4b\x22\x12\x70\x74\x22\x57\x00\x86\x1e\x76\xfb\xab\x5c\xc8\x5d\xdb\x40\xe1\x52\xcb\xf4\xaf\x23\xbd\x1b\x3a\x23\x83\x24\xb4\x61\xb5\x55\x1f\xee\xe1\xe3\xb7\xbb\x4f\x30\x50\x14\x1c\x06\xea\xd7\x16\x79\x41\x9a\x18\xd8\xb2\x70\x96\x3e\xdc\x16\xcd\xb6\x2e\xaa\xdd\x1e\x96\x7d\x91\x50\xe2\x4c\xff\x19\x00\x00\xff\xff\x15\x4b\x4d\xd8\x48\x03\x00\x00"

func locationnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_locationnetYml,
		"locationnet.yml",
	)
}

func locationnetYml() (*asset, error) {
	bytes, err := locationnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locationnet.yml", size: 840, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ninYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x4d\x6b\xdc\x40\x0c\xbd\xcf\xaf\x78\x97\x42\x0b\xbb\xb6\xf7\xa3\x85\xfa\x50\x08\x85\x42\x2e\x3e\x94\xde\x4a\x09\xea\x58\xb6\xa7\x99\x2f\x46\xda\xdd\xec\xbf\x2f\xe3\x0d\xa1\x04\x9a\x83\xcd\x68\xa4\xf7\xf4\xf4\x34\x91\x02\xf7\x18\x58\x2f\xa9\x3c\xc2\xc5\x97\xe3\xfb\xc1\x0d\x1f\xcc\x54\x28\x70\x8d\x7b\x84\xa7\xc8\x6a\xce\x5c\xc4\xa5\xd8\x63\xd7\x74\x46\xaf\x99\x7b\xd8\x18\x8d\x8b\xf9\xa4\xbd\x01\x6e\x57\x2e\xd0\xcc\x06\x18\x5d\xe0\x58\xeb\xa5\xc7\xcf\xdd\x06\x87\x0d\xf6\xfb\xe3\xfa\xfb\x65\x46\x52\x12\xd6\x87\x9b\x84\xfb\x0a\x19\x58\xcd\xc4\xa4\xa7\xc2\xf2\x70\x2a\xbe\xc7\xa2\x9a\xfb\xb6\xad\xb5\xcd\x18\xbc\x6d\x82\x6f\x57\x25\x6d\x48\x23\x7b\x69\xd7\x56\x35\x96\x6b\x14\xd6\x46\x9f\xd4\xcc\x85\xf2\xf2\x06\xfe\x15\x32\xba\x58\xbf\xad\x5c\xc3\xef\xe4\x9b\x3f\x92\xa2\xb9\xb0\x9b\x17\x7d\x4b\xc4\x7f\x48\xba\xae\xeb\x9a\x4c\x85\x82\x98\xc2\x13\x17\x8e\x96\xa5\x5a\xb3\x5d\x79\xa4\x6f\x5b\x2a\x4f\xee\xdc\xa4\x32\xb7\x79\x9c\xda\xdd\x61\xb7\x6f\x8e\xc7\xae\x3b\x1f\x9a\x3c\x4e\x66\x64\xb1\xc5\x65\x5d\x6d\xfe\x62\x80\xbb\x78\x33\x74\x6b\x3d\x89\xb8\xc9\x59\xaa\x49\xc4\xe7\x55\x89\x96\x53\xb5\x0c\x97\x85\x0b\x43\x02\x79\x8f\xcc\xc5\x72\xd6\x92\xa2\x40\xbc\x1b\x19\xe9\xcc\x05\xeb\xa2\x10\x28\xcb\x06\xe2\x82\xf3\x54\xa0\x09\x84\xaf\xc3\xd0\x18\xe0\xc7\xe2\x04\x1c\x17\xaa\xaa\xe1\x93\x25\x8f\x75\x54\x17\xe7\x0d\xc8\xfb\x74\x71\x71\xc6\x94\x4a\x85\x67\xcf\x05\xaf\x54\x79\xba\x72\x11\xe8\x42\x0a\x2a\x0c\x26\x71\xbc\x36\x71\x51\xb9\xe4\xc2\x7a\x6b\xc4\x2f\x03\xd8\x14\xc5\x89\x0a\xd2\x84\x03\x44\xc9\x3e\xf2\xf8\x4c\xb4\x01\x93\x5d\x6a\xe6\xb2\x38\xbb\xc0\x09\x08\x87\xed\x9a\xfc\x67\xc8\x4a\x39\xdc\x0f\x20\xbb\x38\x3e\xf3\x88\xc3\xc7\xe6\xd3\xe7\x77\x48\x11\xf7\xdf\xee\xbe\x6f\x77\x5d\x57\x5f\xf7\xbe\xdb\x1d\x9b\xbf\x01\x00\x00\xff\xff\x31\x7c\x3b\x90\xf4\x02\x00\x00"

func ninYmlBytes() ([]byte, error) {
	return bindataRead(
		_ninYml,
		"nin.yml",
	)
}

func ninYml() (*asset, error) {
	bytes, err := ninYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nin.yml", size: 756, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet152Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x4b\x8f\xd4\x30\x0c\xbe\xe7\x57\xf8\xc2\x6d\x27\x7d\xcc\x74\x41\x3d\x20\x21\x4e\x2b\xa1\x3d\x2c\x88\x0b\x42\xab\x4c\xea\xb6\x59\xf2\x92\xed\xce\xe3\xdf\xa3\xb4\x03\x42\x08\xad\xc4\x25\x8f\xcf\xfe\xbe\x7c\xb1\x1d\x4d\xc0\x1e\x9e\x90\xdd\xb0\x18\xff\x88\xd2\x74\xad\xb2\x29\x8a\x71\x11\xa9\x57\x00\x26\x0c\xf7\x87\x72\x00\x98\xf2\xd2\x03\x19\x97\x29\xbd\xa0\x95\x4a\x6b\xbd\xe2\xf6\x9f\x78\xce\xf6\xfe\xe0\xf1\x0f\x6a\xc1\x47\x32\x01\xcf\x89\x7e\xf4\x10\x2e\x11\x45\x9d\x90\xd8\xa5\xd8\x43\xa3\x6b\x25\xd7\x8c\x3d\xd8\x18\x95\x8b\x79\x91\xc2\xdd\x20\x17\xcc\x84\x0a\x60\x70\x01\x63\xc9\xe7\x1e\xbe\x35\x77\xb0\xbf\x83\xb6\x3d\xac\xcb\x77\x35\x18\x31\x8c\xf2\xbc\x7d\xea\xa1\x50\x1e\x51\xd4\x88\x46\x16\x42\x7e\x5e\xc8\xf7\x30\x8b\xe4\xbe\xaa\x4a\xae\x1e\x82\xb7\x3a\xf8\x6a\x75\x52\x85\x34\xa0\xe7\x6a\x7d\xaa\xdc\xf9\x1a\x19\x45\xcb\x45\xd4\x44\x26\xcf\xaf\xf0\xff\x62\x12\x72\xd9\x9a\xae\xdd\x79\x73\x45\xe2\x1b\xb2\x2b\x08\x5f\xc3\x31\x79\xfd\xc2\x29\xaa\x33\xba\x69\x96\xd7\x9c\xfd\x8f\x72\x5d\xd7\xb5\xce\x86\x4c\x60\x45\x38\x22\x61\xb4\xc8\xa5\x88\xbb\x55\x9c\xfb\xaa\x32\x74\x71\x27\x9d\x68\xaa\xf2\x30\x56\x4d\xd7\xb4\xba\xde\xef\xdf\x75\xa7\x46\xe7\x61\x54\x03\xb2\x25\x97\x65\xed\xc8\x7b\x05\xf0\x21\x6e\xb5\xdf\x59\x6f\x98\xdd\xe8\xac\x29\x41\x88\x28\xa5\x8b\x70\x5c\x9c\x17\x48\x23\x6c\x76\x40\x66\x23\xe0\xd1\x50\x04\xba\x4d\x15\x8c\x4b\xb4\x85\xc4\x70\xd6\xa4\x65\x4b\x85\xb5\xc3\x5c\x26\xe5\xcb\xec\xf8\xb7\xa0\x4d\x91\x1d\x0b\x17\xcd\xae\x69\x6f\xba\x7a\xb3\x82\x91\x31\x1c\x3d\x96\xa0\xcc\xc8\xf8\x8b\xc6\x60\xec\xec\xf0\x84\x0c\x7b\xdd\xbd\x7d\x03\x48\x94\x08\xc8\x08\x42\x8a\xf0\xf0\xe9\xf3\xd7\xa7\x8f\xbb\xb6\x6e\x3a\xad\x7e\x06\x00\x00\xff\xff\x84\x77\xa6\xc7\xf4\x02\x00\x00"

func residualnet152YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet152Yml,
		"residualNet152.yml",
	)
}

func residualnet152Yml() (*asset, error) {
	bytes, err := residualnet152YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "residualNet152.yml", size: 756, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeeznetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x3b\x6f\xdb\x30\x10\xde\xf9\x2b\x6e\xc9\xe6\x50\x52\x1c\x27\x85\x86\x02\x1d\xbb\x78\xe9\x58\x14\x06\x2d\x9e\xa4\x6b\xf9\x50\xee\x4e\x7e\xe4\xd7\x17\xa4\x91\xbe\x86\xa0\x8b\xc0\x13\xbe\xe7\x91\xc9\x45\xec\xe1\xcb\xcb\x8a\xf8\x8a\x7b\x54\x33\xb2\x8b\x78\xce\xfc\xa3\x87\x78\x49\xa8\xe6\x84\x2c\x94\x53\x0f\x9d\xed\x8c\x5e\x17\xec\x61\x48\xc9\x50\x5a\x56\xed\x0d\xc0\xed\x17\x45\x37\xa1\x01\xf0\x14\x31\x15\xbc\xf4\xf0\xb5\xdb\xc0\x76\x03\x0f\x0f\x8f\xf5\xf3\xcd\x78\xa7\x4e\x50\x0f\x37\xd3\xcf\x85\x52\x2d\xd1\xe9\xca\x28\x87\x95\x43\x0f\xb3\xea\xd2\x37\x4d\xc1\x5a\x1f\xc3\x60\x63\x68\x6a\x92\x26\x66\x8f\x41\x9a\x6a\x55\x66\xb9\x26\x41\xb5\x7a\x51\x33\xb1\x5b\xe6\x77\xf8\xff\x32\x6f\x7d\xff\x3e\x1e\x4e\x9d\xed\xee\xe5\x1a\x8f\x39\xd8\xef\x92\x93\x39\x23\x4d\xb3\xbe\x97\xeb\xff\x75\xdb\xb6\x6d\xed\xe2\xd8\x45\x31\x8c\x23\x32\xa6\x01\xa5\x2c\xf0\xbe\x4a\x4b\xdf\x34\x8e\x2f\x74\xb2\x99\xa7\x66\xf1\x63\xd3\x3d\xb5\x0f\xb6\x7d\xde\x3e\xb5\xa7\x47\xbb\xf8\xd1\x78\x94\x81\x69\xd1\x7a\x1b\x1f\x0d\xbc\x5d\x5b\x42\x05\x37\xcc\x84\x27\x14\x10\x8a\x14\x1c\x03\xa3\xac\x41\x05\x34\xc3\xa7\x80\x97\x3d\xea\x06\x9c\xc2\xae\xbd\xc0\x88\x67\x64\xa8\x59\x50\x91\x05\x5c\xf2\xd0\x35\xbb\xb6\xd5\x19\x74\x46\x10\x7a\x45\x5b\xf4\xa3\x0b\x01\x6e\x25\xc1\x31\x42\xcc\x8c\x30\xa2\x13\x3a\x06\x2c\xd2\x1e\x97\x90\xaf\x90\x13\xcc\x8e\xfd\xb9\x60\xce\xa4\x33\x04\x8a\xa4\xe8\x21\x62\xcc\x7c\xdd\x00\xe3\xcb\x4a\x8c\x10\x50\xc4\x00\x0c\x39\xc6\x35\xd1\xe0\x4a\x17\xf0\x2b\x53\x9a\xc0\x93\x28\xd3\x71\x2d\x3c\x65\x47\x89\xd2\xb4\xa9\xd9\x8a\x6c\x31\x45\xae\x9e\xbf\x70\x65\x1a\x02\x61\x52\xb1\xbf\xd7\xb1\xff\x73\x1d\xbb\x67\xbb\xbb\xab\x22\x1f\x5a\xbb\xbd\x03\xcd\xcb\x7d\x57\xe7\x72\xda\x81\x1b\x56\x76\x83\xd6\x0a\x6f\x0f\xd2\x1a\x03\xf0\x33\x00\x00\xff\xff\x7a\x8f\xb3\xfe\x19\x03\x00\x00"

func squeeznetYmlBytes() ([]byte, error) {
	return bindataRead(
		_squeeznetYml,
		"squeeznet.yml",
	)
}

func squeeznetYml() (*asset, error) {
	bytes, err := squeeznetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "squeeznet.yml", size: 793, mode: os.FileMode(420), modTime: time.Unix(1497034308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg16Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xbf\x6e\xdc\x30\x0c\xc6\x77\x3d\x05\x97\x6e\x39\xd9\xbe\x9c\x8d\x56\x43\x81\x4e\x87\x2e\x1d\xb3\x14\x45\xc0\xca\xb4\xad\x54\xff\x20\xd2\xce\xdd\xdb\x17\xf2\x25\x45\x50\xb4\x19\x24\x50\x3f\xf1\xa3\x28\x7e\x11\x03\x19\x78\x38\x9f\xbb\x41\xd9\x14\x05\x5d\xa4\x62\x14\x00\x86\x71\x38\xd5\x00\x60\xce\xab\x81\x82\x2e\x97\xf4\x44\x56\x1a\xad\xf5\xce\xed\x3f\x79\xce\x76\x38\x79\x7a\x23\xad\x7c\x2a\x18\xe8\x39\x95\x5f\x06\xc2\x25\x92\xa8\x8d\x0a\xbb\x14\x0d\x74\xba\x55\x72\xcd\x64\xc0\xc6\xa8\x5c\xcc\xab\x54\xed\x0d\xb9\x80\x33\x29\x80\xd1\x05\x8a\x35\x9f\x0d\x7c\xef\xee\xe0\xfe\x0e\x8e\xc7\xd3\xbe\xfd\x50\x23\x0a\x32\xc9\xe3\xed\x2f\x5f\xab\xe4\x1b\x89\x9a\x08\x65\x2d\xc4\x8f\x6b\xf1\x06\x16\x91\x6c\x9a\xa6\xe6\xea\x31\x78\xab\x83\x6f\xf6\x4e\x9a\x90\x46\xf2\xdc\xec\x4f\xd5\x33\x5f\x23\x93\x68\xb9\x88\x9a\x0b\xe6\xe5\x1d\xfd\x5f\xca\x6d\x9e\xeb\xea\x86\x03\x5f\xc3\xcf\xe4\xf5\x13\xa7\xa8\x9e\xc9\xcd\x8b\xbc\xd7\xc6\x7f\xcb\xb4\x6d\xdb\xea\x8c\x05\x03\xab\x42\x13\x15\x8a\x96\xb8\x8e\xe7\xb0\x57\x62\xd3\x34\x58\x2e\x6e\xd3\xa9\xcc\x4d\x1e\xa7\xa6\x3b\xb5\x9f\x74\xd7\xf7\xc3\x36\xe8\x3c\x4e\x6a\x24\xb6\xc5\x65\xd9\x47\xfd\x59\x01\x7c\x89\xb7\xa1\x1e\xac\x47\x66\x37\x39\x8b\xf5\x12\x6c\x8a\x5b\xf2\x6b\x8d\xd1\x43\x24\xa9\x66\x55\x3f\x1f\xce\x67\x58\x99\x18\xf0\x95\xc2\xb3\x93\x05\xba\x01\x3c\x5e\xa9\x30\xa4\x09\xee\x2f\xf7\x6f\x2b\xc0\xe4\xbc\x50\xe1\x57\x3d\xda\xc5\xd1\x46\x0c\xc7\x5e\xf7\x1f\x40\x52\x3e\x74\x40\xa5\xa4\x02\x18\x47\xf8\xa8\xdb\x1b\xec\x5f\x60\x8a\x20\x0b\xfd\xb1\x12\xec\x82\xde\x53\x9c\x09\x5e\xbc\x06\x17\xe1\xd8\x76\xbd\x56\xbf\x03\x00\x00\xff\xff\xce\xf2\x68\x4a\xc1\x02\x00\x00"

func vgg16YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg16Yml,
		"vgg16.yml",
	)
}

func vgg16Yml() (*asset, error) {
	bytes, err := vgg16YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg16.yml", size: 705, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\xbd\x8e\xdc\x3c\x0c\xec\xf5\x14\x6c\xbe\xee\x56\xb6\x76\xcf\x87\x6f\x55\x04\x48\x75\x48\x93\x32\x4d\x10\x1c\x18\x99\xb6\x95\xe8\x0f\x22\xed\xdd\x7d\xfb\x40\xde\xbb\x20\x08\x90\x2b\x24\x48\x43\xce\x90\x98\x49\x18\xc9\xc2\x97\xe7\x67\x73\x56\x53\xc5\x48\x97\x5c\x7f\x5a\x88\xd7\x44\xa2\x36\xaa\xec\x73\xb2\x60\x74\xaf\xe4\x56\xc8\x82\x4b\x49\xf9\x54\x56\xb1\x0a\xe0\x0e\xf9\x88\x33\x29\x80\xd1\x47\x4a\xad\x9f\x2d\x7c\x35\x0f\x70\x7a\x80\xe3\xf1\x71\xbf\xbe\xa9\x11\x05\x99\xe4\xe5\x3e\xef\x53\xa3\x7c\x26\x51\x13\xa1\xac\x95\xf8\x65\xad\xc1\xc2\x22\x52\x6c\xd7\xb5\x5e\x3d\xc6\xe0\x74\x0c\xdd\xbe\x49\x17\xf3\x48\x81\xbb\x7d\x54\xfb\xf3\x2d\x31\x89\x96\xab\xa8\xb9\x62\x59\xde\xe1\xff\xc5\xdc\xe6\xb9\x1d\x73\x3e\xf0\x2d\x7e\xcf\x41\xff\xe0\x9c\xd4\x85\xfc\xbc\xc8\x7b\x6b\xfc\x53\xa6\xef\xfb\x5e\x17\xac\x18\x59\x55\x9a\xa8\x52\x72\xc4\xcd\x9e\xc3\xae\xc4\xb6\xeb\xb0\x5e\xfd\xa6\x73\x9d\xbb\x32\x4e\x9d\x79\xec\xcf\xda\x0c\xc3\xd3\xf6\xa4\xcb\x38\xa9\x91\xd8\x55\x5f\x64\xb7\xfa\x83\x02\xf8\x98\xee\xa6\x1e\x5c\x40\x66\x3f\x79\x87\xad\x08\x2e\xa7\x2d\x87\xb5\xbd\x31\x40\x22\x69\x61\x69\x05\x2d\x3f\x58\x99\x18\xf0\x0d\x85\x8b\x97\x05\xcc\x19\x02\xde\xa8\x32\xe4\x09\x4e\xd7\xd3\x9f\x0a\x30\xf9\x20\x54\xf9\x8d\x8f\x6e\xf1\xb4\x11\xc3\x71\xd0\xc3\x7f\x20\xb9\x1c\x0c\x50\xad\xb9\x02\xa6\x11\xfe\xd7\xfd\x1d\x1c\x5e\xc1\x9c\x40\x16\xfa\x1d\x25\xb8\x05\x43\xa0\x34\x13\xbc\x66\x0d\x3e\xc1\xb1\x37\x83\xfe\x15\x00\x00\xff\xff\x5d\x84\xda\x7e\x64\x02\x00\x00"

func vgg19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg19Yml,
		"vgg19.yml",
	)
}

func vgg19Yml() (*asset, error) {
	bytes, err := vgg19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg19.yml", size: 612, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"ResNeXt101.yml": resnext101Yml,
	"ResNeXt50.yml": resnext50Yml,
	"ResidualNet101.yml": residualnet101Yml,
	"ResidualNet18.yml": residualnet18Yml,
	"ResidualNet200.yml": residualnet200Yml,
	"ResidualNet34.yml": residualnet34Yml,
	"ResidualNet50.yml": residualnet50Yml,
	"Resnet152_11k.yml": resnet152_11kYml,
	"caffenet.yml": caffenetYml,
	"inceptionv3.yml": inceptionv3Yml,
	"locationnet.yml": locationnetYml,
	"nin.yml": ninYml,
	"residualNet152.yml": residualnet152Yml,
	"squeeznet.yml": squeeznetYml,
	"vgg16.yml": vgg16Yml,
	"vgg19.yml": vgg19Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"ResNeXt101.yml": &bintree{resnext101Yml, map[string]*bintree{}},
	"ResNeXt50.yml": &bintree{resnext50Yml, map[string]*bintree{}},
	"ResidualNet101.yml": &bintree{residualnet101Yml, map[string]*bintree{}},
	"ResidualNet18.yml": &bintree{residualnet18Yml, map[string]*bintree{}},
	"ResidualNet200.yml": &bintree{residualnet200Yml, map[string]*bintree{}},
	"ResidualNet34.yml": &bintree{residualnet34Yml, map[string]*bintree{}},
	"ResidualNet50.yml": &bintree{residualnet50Yml, map[string]*bintree{}},
	"Resnet152_11k.yml": &bintree{resnet152_11kYml, map[string]*bintree{}},
	"caffenet.yml": &bintree{caffenetYml, map[string]*bintree{}},
	"inceptionv3.yml": &bintree{inceptionv3Yml, map[string]*bintree{}},
	"locationnet.yml": &bintree{locationnetYml, map[string]*bintree{}},
	"nin.yml": &bintree{ninYml, map[string]*bintree{}},
	"residualNet152.yml": &bintree{residualnet152Yml, map[string]*bintree{}},
	"squeeznet.yml": &bintree{squeeznetYml, map[string]*bintree{}},
	"vgg16.yml": &bintree{vgg16Yml, map[string]*bintree{}},
	"vgg19.yml": &bintree{vgg19Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

