// Code generated by go-bindata.
// sources:
// builtin_models/README.md
// builtin_models/ResNeXt101.yml
// builtin_models/ResNeXt50.yml
// builtin_models/ResidualNet101.yml
// builtin_models/ResidualNet18.yml
// builtin_models/ResidualNet200.yml
// builtin_models/ResidualNet34.yml
// builtin_models/ResidualNet50.yml
// builtin_models/Resnet152_11k.yml
// builtin_models/caffenet.yml
// builtin_models/inceptionv3.yml
// builtin_models/locationnet.yml
// builtin_models/nin.yml
// builtin_models/residualNet152.yml
// builtin_models/squeeznet.yml
// builtin_models/vgg16.yml
// builtin_models/vgg19.yml
// DO NOT EDIT!

package mxnet

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xcb\xc1\x09\x03\x21\x10\x05\xd0\xbb\x55\x7c\xc8\x25\xb9\x58\x4c\x1a\xc8\x98\x75\x56\x06\xf4\x2b\x3a\xc2\x96\xbf\xb0\x05\xbc\x17\xfe\xdb\xaa\x1b\x7f\xad\x67\xad\x2b\x84\xef\x26\xa4\x74\x14\xa5\xce\xe4\x2a\x30\x42\xda\x45\x75\xc1\x5b\x62\x94\x0f\xd2\xe9\x3a\xb1\x47\x4e\x6e\x2c\x78\x28\xb2\xae\x63\xda\x70\xeb\x5c\xf1\x0e\x00\x00\xff\xff\x9f\xd3\x11\xba\x58\x00\x00\x00"

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 88, mode: os.FileMode(420), modTime: time.Unix(1497042630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnext101Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x3d\x6f\xdb\x40\x0c\x86\xf7\xfb\x15\x5c\xb2\xc5\x27\x9d\xe3\x78\xd0\xd0\xbd\x28\x90\xa1\xe8\x50\xa0\x28\x02\xe6\x44\x49\x97\xde\x17\x48\xca\xb1\xfb\xeb\x8b\x93\x91\xb4\x05\xda\x25\x8b\x70\x7c\xc0\x97\x1f\xe2\x9b\x31\xd1\x00\x9f\x49\x1e\xe8\xab\xba\xde\x19\x5f\xb2\x62\xc8\xc4\x83\x01\xc0\x34\x1e\x0f\xed\x01\x30\xd7\x75\x00\xc6\x50\xb9\x3c\x93\xd7\xce\x5a\xbb\x71\xff\x4f\x5e\xab\x3f\x1e\x22\xfd\x21\x6d\x7c\x62\x4c\xf4\x52\xf8\xc7\x00\xe9\x9c\x49\xcd\x89\x58\x42\xc9\x03\x38\xdb\x1b\xbd\x54\x1a\xc0\xe7\x6c\x42\xae\xab\x36\xed\x15\x85\x84\x33\x19\x80\x31\x24\xca\x2d\x5f\x06\xf8\xe6\x6e\xe1\xee\x16\xf6\xfb\xc3\xf6\xf9\x6e\xca\xaa\x7f\x89\x22\x3e\x51\x34\x23\x2a\x0a\xe9\xe3\x75\xcd\x8f\xad\xd0\x03\xa9\x99\x08\x75\x65\x92\xc7\x95\xe3\x00\x8b\x6a\x1d\xba\xae\xe5\xda\x31\x45\x6f\x53\xec\xb6\xf9\xba\x54\x46\x8a\xd2\x6d\x03\xb4\x98\x49\x32\x9d\xb5\x93\x4b\x16\x52\xab\x67\x35\x33\x63\x5d\xde\x5b\xc7\xf5\x6e\x17\xf1\x42\x2c\xaf\x68\xd7\x90\x5c\xd2\x53\x89\xf6\x59\x4a\x36\x2f\x14\xe6\x45\xdf\x3d\xe9\x7f\x3a\xf4\x7d\xdf\xdb\x8a\x8c\x49\x0c\xd3\x44\x4c\xd9\x93\xb4\xbf\xb7\xdb\x9a\xc8\xd0\x75\xc8\xe7\x70\xb2\x85\xe7\xae\x8e\x53\xe7\x8e\xce\xd9\xfe\xfe\x70\xe7\x6c\x1d\x27\x33\x92\x78\x0e\x55\xb7\xeb\x7d\x30\xf0\x6a\x21\x08\x02\x08\x12\x52\x8d\x74\x0b\x4b\x98\x97\x78\x81\x54\xc6\x35\x22\x87\x9f\x34\x42\x26\x6d\x0e\x00\x64\xbf\x04\x25\xdf\xee\x00\x53\xe1\xeb\x95\xc1\x47\x14\x09\x53\xf0\xd8\x4a\x37\x2b\x7d\x59\x82\xbc\xa9\x7c\xc9\x12\x44\x05\xca\x04\xae\x77\x70\x5d\xcd\xfe\xee\xdf\x20\xfa\x25\xd0\x89\x04\xf6\xce\xee\x6f\x00\xf3\x08\xf7\xf6\x78\x03\x5a\xea\xce\x6d\x61\x7b\xdd\x03\x31\x17\x86\x92\xdf\x7c\xe1\x3e\x59\xf3\x2b\x00\x00\xff\xff\x29\xa9\x54\xaa\x11\x03\x00\x00"

func resnext101YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnext101Yml,
		"ResNeXt101.yml",
	)
}

func resnext101Yml() (*asset, error) {
	bytes, err := resnext101YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResNeXt101.yml", size: 785, mode: os.FileMode(420), modTime: time.Unix(1497173636, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnext50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x3d\x6f\xdc\x30\x0c\xdd\xf5\x2b\xb8\x64\xbb\x93\xed\xcb\xf9\x06\x0f\xdd\x8b\x02\x19\x8a\x0e\x05\x8a\x22\x60\x64\xda\x56\xaa\x2f\x90\xf4\xe5\xae\xbf\xbe\x90\x0f\x49\x5b\x20\x53\x16\x41\x7a\xe0\x7b\x24\xf5\x5e\xc2\x48\x03\x7c\x25\x79\xa0\xef\xda\xb7\xc6\xe5\xa4\xe8\x13\xf1\x60\x00\x30\x8e\xa7\x63\xbd\x00\xcc\x65\x1d\x80\xd1\x17\xce\xcf\xe4\xb4\xb1\xd6\x6e\xb8\x7b\x17\x2f\xc5\x9d\x8e\x81\xfe\xa1\x56\x7c\x62\x8c\xf4\x92\xf9\xd7\x00\xf1\x92\x48\xcd\x99\x58\x7c\x4e\x03\x74\xb6\x35\x7a\x2d\x34\x80\x4b\xc9\xf8\x54\x56\xad\xdc\x1b\xe4\x23\xce\x64\x00\x46\x1f\x29\xd5\x7a\x19\xe0\x47\xb7\x83\xfb\x1d\x1c\x0e\xc7\xed\xf8\x69\xf2\xaa\xff\x91\x02\x3e\x51\x30\x23\x2a\x0a\xe9\xe3\x6d\xcb\xcf\x55\xe8\x81\xd4\x4c\x84\xba\x32\xc9\xe3\xca\x61\x80\x45\xb5\x0c\x4d\x53\x6b\xed\x18\x83\xb3\x31\x34\xdb\x7c\x4d\xcc\x23\x05\x69\xb6\x01\xea\x9b\x49\x12\x5d\xb4\x91\x6b\x12\x52\xab\x17\x35\x33\x63\x59\x3e\xaa\xd3\xb7\xfb\x80\x57\x62\x79\x45\xf6\x7d\xbb\x97\x6b\x7c\xca\xc1\x3e\x4b\x4e\xe6\x85\xfc\xbc\xe8\x87\xe7\x7c\x57\xbf\x6d\xdb\xd6\x16\x64\x8c\x62\x98\x26\x62\x4a\x8e\xa4\xfe\xdc\x7e\x6b\x21\x43\xd3\x20\x5f\xfc\xd9\x66\x9e\x9b\x32\x4e\x4d\x77\xea\x3a\xdb\xf6\xc7\xfb\xce\x96\x71\x32\x23\x89\x63\x5f\x74\x73\xee\x93\x81\xd7\xf4\x80\x17\x40\x10\x1f\x4b\xa0\x1d\x2c\x7e\x5e\xc2\x15\x62\x1e\xd7\x80\xec\x7f\xd3\x08\x89\xb4\xba\x0f\xc8\x6e\xf1\x4a\xae\x7a\x00\x53\xe6\x9b\xc3\xe0\x02\x8a\xf8\xc9\x3b\xac\xd2\x35\x46\xdf\x16\x2f\x6f\x2c\x97\x93\x78\x51\x81\x3c\x41\xdf\xc2\x6d\x31\xfb\xb7\x7d\xdf\x02\xba\xc5\xd3\x99\x04\x0e\x07\x7b\xb8\x03\x4c\x23\xf4\xf6\x74\x07\x9a\xcb\xbe\x03\x62\xce\x0c\x39\xbd\xe5\xa0\xfb\x62\xcd\x9f\x00\x00\x00\xff\xff\x9c\x14\x96\x65\x00\x03\x00\x00"

func resnext50YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnext50Yml,
		"ResNeXt50.yml",
	)
}

func resnext50Yml() (*asset, error) {
	bytes, err := resnext50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResNeXt50.yml", size: 768, mode: os.FileMode(420), modTime: time.Unix(1497173634, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet101Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xcb\x6a\xdc\x4c\x10\x85\xf7\xfd\x14\xb5\xf9\x77\x9e\x96\x7a\x2e\xfe\x83\x16\x81\x90\x95\x21\x78\xe1\x84\x6c\x42\x30\x3d\xad\x92\xd4\x4e\xdf\xa8\x2a\xcd\xe5\xed\x43\x4b\x93\x90\x80\x31\x64\xa3\xcb\xe9\x3a\x1f\x47\x3a\x95\x6c\xc4\x0e\x9e\x90\x7d\x3f\xdb\xf0\x88\x62\x5a\xa3\x5c\x4e\x62\x7d\x42\xea\x14\x80\x8d\xfd\xfd\xbe\x3e\x00\x8c\x65\xee\x80\xac\x2f\x94\x5f\xd0\x49\xa3\xb5\x5e\x74\xf7\xaa\x5e\x8a\xbb\xdf\x07\xfc\xc3\x5a\xf5\x81\x6c\xc4\x73\xa6\x1f\x1d\xc4\x4b\x42\x51\x27\x24\xf6\x39\x75\x60\x74\xab\xe4\x5a\xb0\x03\x97\x92\xf2\xa9\xcc\x52\xbd\xab\xe4\xa3\x1d\x51\x01\xf4\x3e\x62\xaa\xf3\xdc\xc1\x37\x73\x07\xbb\x3b\xd8\x6e\xf7\xcb\xe5\xbb\xca\xb3\xfc\x65\x0a\xf6\x88\x41\xf5\x56\x2c\xa3\x3c\xaf\x9f\xfa\x50\x41\x8f\x28\x6a\x40\x2b\x33\x21\x3f\xcf\x14\x3a\x98\x44\x4a\xd7\x34\x75\x56\xf7\x31\x38\x1d\x43\xb3\xe4\x6b\x62\xee\x31\x70\xb3\x04\xa8\xef\x84\x5c\x6f\x7c\x4d\x8c\xa2\xe5\x22\x6a\x24\x5b\xa6\x37\x30\xaf\x03\x4c\x6b\x36\xc1\x5e\x91\xf8\xa6\x6c\xaa\xc2\xd7\x78\xcc\x41\xbf\x70\x4e\xea\x8c\x7e\x9c\xe4\xad\x80\xff\x42\x6e\xdb\xb6\xd5\xc5\x92\x8d\xac\x08\x07\x24\x4c\x0e\xb9\xfe\xac\xcd\x02\xe7\xae\x69\x2c\x5d\xfc\x49\x67\x1a\x9b\xd2\x0f\x8d\x39\x98\xad\x6e\x77\xbb\x77\x87\x93\xd1\xa5\x1f\x54\x8f\xec\xc8\x17\x59\xea\x7a\xaf\x00\x3e\xa4\xb5\x98\x8d\x0b\x96\xd9\x0f\xde\xd9\x7a\x08\x09\xa5\x56\x0c\xc7\xd9\x07\x81\x3c\xc0\x1a\x07\x64\xb2\x02\x01\x2d\x25\xa0\xdb\xca\xc1\x30\x27\x57\x4d\x0c\x67\x4d\x5a\xd6\x51\x58\xea\xe7\xba\x46\x5f\x26\xcf\xbf\x81\x2e\x27\xf6\x2c\x5c\x99\xa6\x35\x37\xae\x5e\xa3\x60\x62\x8c\xc7\x80\xf5\x50\x26\x64\xfc\x65\x63\xb0\x6e\xf2\x78\x42\x86\x9d\x3e\xfc\xff\x1f\x20\x51\x26\x20\x2b\x08\x39\xc1\xc3\xa7\xcf\x5f\x9f\x3e\x6e\xb6\xad\x39\x68\xf5\x33\x00\x00\xff\xff\x59\x2d\x20\x4b\x11\x03\x00\x00"

func residualnet101YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet101Yml,
		"ResidualNet101.yml",
	)
}

func residualnet101Yml() (*asset, error) {
	bytes, err := residualnet101YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet101.yml", size: 785, mode: os.FileMode(420), modTime: time.Unix(1497173621, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet18Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4b\x8b\xd5\x40\x10\x85\xf7\xfd\x2b\x6a\xe3\x6e\xd2\x49\xee\x63\xbc\x64\x21\x88\xab\x01\x99\xc5\x28\x6e\x44\x86\xbe\x9d\x4a\xd2\x63\xbf\xa8\xaa\xdc\xc7\xbf\x97\x4e\xae\xa2\x30\x0c\x6e\xf2\x38\x5d\xe7\xe3\x24\xa7\xa2\x09\xd8\xc1\x13\xb2\xeb\x67\xe3\x1f\x51\xda\x83\xb2\x29\x8a\x71\x11\xa9\x53\x00\x26\xf4\xf7\xbb\xf2\x00\x30\xe6\xb9\x03\x32\x2e\x53\x7a\x41\x2b\xb5\xd6\x7a\xd1\xed\xab\x7a\xce\xf6\x7e\xe7\xf1\x2f\x6b\xd1\x07\x32\x01\xcf\x89\x7e\x76\x10\x2e\x11\x45\x9d\x90\xd8\xa5\xd8\x41\xab\x1b\x25\xd7\x8c\x1d\xd8\x18\x95\x8b\x79\x96\xe2\x5d\x25\x17\xcc\x88\x0a\xa0\x77\x01\x63\x99\xe7\x0e\xbe\xb7\x77\xb0\xbd\x83\xcd\x66\xb7\x5c\x7e\xa8\x34\xcb\x3f\x26\x6f\x8e\xe8\x55\x6f\xc4\x30\xca\xf3\xfa\xa5\x0f\x05\xf4\x88\xa2\x06\x34\x32\x13\xf2\xf3\x4c\xbe\x83\x49\x24\x77\x75\x5d\x66\x75\x1f\xbc\xd5\xc1\xd7\x4b\xbe\x3a\xa4\x1e\x3d\xd7\x4b\x80\xf2\x4e\xc8\xe5\xc6\xd7\xc8\x28\x5a\x2e\xa2\x46\x32\x79\x7a\x03\xf3\x3a\xa0\x3d\x54\xde\x5c\x91\xf8\x26\x54\xed\xa1\xe2\x6b\x38\x26\xaf\x5f\x38\x45\x75\x46\x37\x4e\xf2\x56\xbc\xff\xe7\x36\x4d\xd3\xe8\x6c\xc8\x04\x56\x84\x03\x12\x46\x8b\x5c\x7e\x54\xb5\xa0\xb9\xab\x6b\x43\x17\x77\xd2\x89\xc6\x3a\xf7\x43\xdd\xee\xdb\x8d\x6e\xb6\xdb\xc3\xfe\xd4\xea\xdc\x0f\xaa\x47\xb6\xe4\xb2\x2c\x55\x7d\x50\x00\x1f\xe3\x5a\x4a\x65\xbd\x61\x76\x83\xb3\xa6\x1c\x42\x44\x29\xf5\xc2\x71\x76\x5e\x20\x0d\xb0\xa6\x01\x99\x8c\x80\x47\x43\x11\xe8\xb6\x6d\x30\xcc\xd1\x16\x13\xc3\x59\x93\x96\x75\x14\x96\xea\xb9\xac\xd0\xd7\xc9\xf1\x1f\xa0\x4d\x91\x1d\x0b\x17\x66\x7b\xb8\x61\xf5\x9a\x04\x23\x63\x38\x7a\x2c\x67\x32\x21\xe3\x6f\x17\x83\xb1\x93\xc3\x13\x32\x6c\xf5\xfe\xfd\x3b\x40\xa2\x44\x40\x46\x10\x52\x84\x87\xcf\x5f\xbe\x3d\x7d\xaa\x36\x4d\xbb\xd7\xea\x57\x00\x00\x00\xff\xff\x47\x9e\x2c\x88\x0b\x03\x00\x00"

func residualnet18YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet18Yml,
		"ResidualNet18.yml",
	)
}

func residualnet18Yml() (*asset, error) {
	bytes, err := residualnet18YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet18.yml", size: 779, mode: os.FileMode(420), modTime: time.Unix(1497173614, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet200Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xcb\x6a\xdc\x4c\x10\x85\xf7\xfd\x14\xb5\xf9\x77\x9e\x56\x4b\x33\xe3\x3f\x68\x11\x08\x59\x19\x82\x17\x4e\xc8\x26\x04\xd3\xd3\x2a\x8d\xda\xe9\x1b\x55\xa5\xb9\xbc\x7d\x68\x69\x12\x12\x30\x86\x6c\x74\x39\x5d\xe7\xe3\x48\xa7\x92\x8d\xd8\xc3\x13\xb2\x1f\x66\x1b\x1e\x51\x3a\x63\x94\xcb\x49\xac\x4f\x48\xbd\x02\xb0\x71\xb8\xdf\xd5\x07\x80\x63\x99\x7b\x20\xeb\x0b\xe5\x17\x74\xd2\x68\xad\x17\xdd\xbd\xaa\x97\xe2\xee\x77\x01\xff\xb0\x56\x7d\x24\x1b\xf1\x9c\xe9\x47\x0f\xf1\x92\x50\xd4\x09\x89\x7d\x4e\x3d\xb4\xda\x28\xb9\x16\xec\xc1\xa5\xa4\x7c\x2a\xb3\x54\xef\x2a\xf9\x68\x8f\xa8\x00\x06\x1f\x31\xd5\x79\xee\xe1\x5b\x7b\x07\xdb\x3b\xe8\xba\xdd\x72\xf9\xae\xf2\x2c\x7f\x99\x82\x3d\x60\x50\x83\x15\xcb\x28\xcf\xeb\xa7\x3e\x54\xd0\x23\x8a\x1a\xd1\xca\x4c\xc8\xcf\x33\x85\x1e\x26\x91\xd2\x37\x4d\x9d\xd5\x43\x0c\x4e\xc7\xd0\x2c\xf9\x9a\x98\x07\x0c\xdc\x2c\x01\xea\x3b\x21\xd7\x1b\x5f\x13\xa3\x68\xb9\x88\x3a\x92\x2d\xd3\x1b\x98\xd7\x01\x9d\x31\x9b\x60\xaf\x48\x7c\x53\x36\x55\xe1\x6b\x3c\xe4\xa0\x5f\x38\x27\x75\x46\x7f\x9c\xe4\xad\x80\xff\x42\x36\xc6\x18\x5d\x2c\xd9\xc8\x8a\x70\x44\xc2\xe4\x90\xeb\xcf\xda\x2c\x70\xee\x9b\xc6\xd2\xc5\x9f\x74\xa6\x63\x53\x86\xb1\x69\xf7\x6d\xa7\xcd\x76\xfb\x6e\x7f\x6a\x75\x19\x46\x35\x20\x3b\xf2\x45\x96\xba\xde\x2b\x80\x0f\x69\x2d\x66\xe3\x82\x65\xf6\xa3\x77\xb6\x1e\x42\x42\xa9\x15\xc3\x61\xf6\x41\x20\x8f\xb0\xc6\x01\x99\xac\x40\x40\x4b\x09\xe8\xb6\x72\x30\xce\xc9\x55\x13\xc3\x59\x93\x96\x75\x14\x96\xfa\xb9\xae\xd1\x97\xc9\xf3\x6f\xa0\xcb\x89\x3d\x0b\x57\x66\x67\xcc\x8d\xab\xd7\x28\x98\x18\xe3\x21\x60\x3d\x94\x09\x19\x7f\xd9\x18\xac\x9b\x3c\x9e\x90\x61\xab\xf7\xff\xff\x07\x48\x94\x09\xc8\x0a\x42\x4e\xf0\xf0\xe9\xf3\xd7\xa7\x8f\x9b\xce\xb4\x7b\xad\x7e\x06\x00\x00\xff\xff\xeb\xc7\x0b\x24\x11\x03\x00\x00"

func residualnet200YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet200Yml,
		"ResidualNet200.yml",
	)
}

func residualnet200Yml() (*asset, error) {
	bytes, err := residualnet200YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet200.yml", size: 785, mode: os.FileMode(420), modTime: time.Unix(1497173626, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet34Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcb\x6a\xdc\x4c\x10\x85\xf7\xfd\x14\xb5\xf9\x77\x56\x4b\x1a\x69\xfc\x07\x2d\x02\x21\x2b\x43\xf0\xc2\x09\xd9\x84\x60\x7a\x5a\xa5\x51\x3b\x7d\xa3\xaa\x34\x97\xb7\x0f\x2d\x4d\x42\x02\xc6\x64\xa3\xcb\xe9\x3a\x1f\x47\x3a\x15\x4d\xc0\x01\x9e\x90\xdd\xb8\x18\xff\x88\xd2\xf5\xca\xa6\x28\xc6\x45\xa4\x41\x01\x98\x30\xde\xf7\xe5\x01\xe0\x98\x97\x01\xc8\xb8\x4c\xe9\x05\xad\xd4\x5a\xeb\x55\xb7\xaf\xea\x39\xdb\xfb\xde\xe3\x1f\xd6\xa2\x4f\x64\x02\x9e\x13\xfd\x18\x20\x5c\x22\x8a\x3a\x21\xb1\x4b\x71\x80\x56\x37\x4a\xae\x19\x07\xb0\x31\x2a\x17\xf3\x22\xc5\xbb\x49\x2e\x98\x23\x2a\x80\xd1\x05\x8c\x65\x9e\x07\xf8\xd6\xde\x41\x77\x07\xbb\x5d\xbf\x5e\xbe\xab\xb4\xc8\x5f\x26\x6f\x0e\xe8\xd5\x68\xc4\x30\xca\xf3\xf6\xa5\x0f\x05\xf4\x88\xa2\x26\x34\xb2\x10\xf2\xf3\x42\x7e\x80\x59\x24\x0f\x75\x5d\x66\xf5\x18\xbc\xd5\xc1\xd7\x6b\xbe\x3a\xa4\x11\x3d\xd7\x6b\x80\xf2\x4e\xc8\xe5\xc6\xd7\xc8\x28\x5a\x2e\xa2\x8e\x64\xf2\xfc\x06\xe6\x75\x40\xd7\x57\xde\x5c\x91\xf8\x26\x54\x5d\x5f\xf1\x35\x1c\x92\xd7\x2f\x9c\xa2\x3a\xa3\x3b\xce\xf2\x56\xbc\x7f\xe7\x36\x4d\xd3\xe8\x6c\xc8\x04\x56\x84\x13\x12\x46\x8b\x5c\x7e\x54\xb5\xa2\x79\xa8\x6b\x43\x17\x77\xd2\x89\x8e\x75\x1e\xa7\xba\xdd\xb7\x3b\xdd\x74\xdd\xbb\xfd\xa9\xd5\x79\x9c\xd4\x88\x6c\xc9\x65\x59\xab\x7a\xaf\x00\x3e\xc4\xad\x94\xca\x7a\xc3\xec\x26\x67\x4d\x39\x84\x88\x52\xea\x85\xc3\xe2\xbc\x40\x9a\x60\x4b\x03\x32\x1b\x01\x8f\x86\x22\xd0\x6d\xdb\x60\x5a\xa2\x2d\x26\x86\xb3\x26\x2d\xdb\x28\xac\xd5\x73\x59\xa1\x2f\xb3\xe3\xdf\x40\x9b\x22\x3b\x16\x2e\xcc\xae\xbf\x61\xf5\x96\x04\x23\x63\x38\x78\x2c\x67\x32\x23\xe3\x2f\x17\x83\xb1\xb3\xc3\x13\x32\x74\x7a\xff\xff\x7f\x80\x44\x89\x80\x8c\x20\xa4\x08\x0f\x9f\x3e\x7f\x7d\xfa\x58\xed\x9a\x76\xaf\xd5\xcf\x00\x00\x00\xff\xff\xa3\xf7\x5f\x77\x0b\x03\x00\x00"

func residualnet34YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet34Yml,
		"ResidualNet34.yml",
	)
}

func residualnet34Yml() (*asset, error) {
	bytes, err := residualnet34YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet34.yml", size: 779, mode: os.FileMode(420), modTime: time.Unix(1497173616, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4d\x6b\xdc\x4c\x10\x84\xef\xf3\x2b\xfa\xf2\xde\xac\xd1\x68\xd7\xf2\x1b\x74\x08\x84\x9c\x0c\xc1\x07\x27\xe4\x12\x82\x99\x1d\xb5\x56\xe3\xcc\x17\xdd\xad\xf5\xee\xbf\x0f\x23\x6d\x42\x02\xc6\xe4\xa2\x8f\x9a\xae\x87\x92\xaa\x93\x8d\x38\xc0\x23\xb2\x1f\x17\x1b\x1e\x50\x7a\xa3\x5c\x4e\x62\x7d\x42\x1a\x14\x80\x8d\xe3\xdd\x6d\x7d\x00\x38\x96\x65\x00\xb2\xbe\x50\x7e\x46\x27\xad\xd6\x7a\xd5\xdd\xab\x7a\x29\xee\xee\x36\xe0\x1f\xd6\xaa\x4f\x64\x23\xbe\x64\xfa\x31\x40\x3c\x27\x14\x75\x42\x62\x9f\xd3\x00\x9d\x36\x4a\x2e\x05\x07\x70\x29\x29\x9f\xca\x22\xd5\xbb\x49\x3e\xda\x23\x2a\x80\xd1\x47\x4c\x75\x9e\x07\xf8\xd6\xdd\xc0\xfe\x06\x76\xbb\xdb\xf5\xf2\x5d\xe5\x45\xfe\x32\x05\x7b\xc0\xa0\x46\x2b\x96\x51\x9e\xb6\x2f\xbd\xaf\xa0\x07\x14\x35\xa1\x95\x85\x90\x9f\x16\x0a\x03\xcc\x22\x65\x68\xdb\x3a\xab\xc7\x18\x9c\x8e\xa1\x5d\xf3\xb5\x31\x8f\x18\xb8\x5d\x03\xd4\x77\x42\xae\x37\xbe\x24\x46\xd1\x72\x16\x75\x24\x5b\xe6\x37\x30\xaf\x03\x7a\xd3\x04\x7b\x41\xe2\xab\xd0\xf4\xa6\xe1\x4b\x3c\xe4\xa0\x9f\x39\x27\xf5\x82\xfe\x38\xcb\x5b\xf1\xfe\x9d\x6b\x8c\x31\xba\x58\xb2\x91\x15\xe1\x84\x84\xc9\x21\xd7\x1f\xd5\xac\x68\x1e\xda\xd6\xd2\xd9\x9f\x74\xa6\x63\x5b\xc6\xa9\xed\xfa\x6e\xa7\xcd\x7e\xff\xae\x3f\x75\xba\x8c\x93\x1a\x91\x1d\xf9\x22\x6b\x55\xef\x15\xc0\x87\xb4\x95\xd2\xb8\x60\x99\xfd\xe4\x9d\xad\x87\x90\x50\x6a\xbd\x70\x58\x7c\x10\xc8\x13\x6c\x69\x40\x66\x2b\x10\xd0\x52\x02\xba\x6e\x1b\x4c\x4b\x72\xd5\xc4\xf0\xa2\x49\xcb\x36\x0a\x6b\xf5\x5c\x57\xe8\xcb\xec\xf9\x37\xd0\xe5\xc4\x9e\x85\x2b\xb3\x37\x57\xac\xde\x92\x60\x62\x8c\x87\x80\xf5\x4c\x66\x64\xfc\xe5\x62\xb0\x6e\xf6\x78\x42\x86\xbd\xee\xff\xff\x0f\x90\x28\x13\x90\x15\x84\x9c\xe0\xfe\xd3\xe7\xaf\x8f\x1f\x9b\x9d\xe9\x7a\xad\x7e\x06\x00\x00\xff\xff\x24\xb6\xe0\x66\x0b\x03\x00\x00"

func residualnet50YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet50Yml,
		"ResidualNet50.yml",
	)
}

func residualnet50Yml() (*asset, error) {
	bytes, err := residualnet50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResidualNet50.yml", size: 779, mode: os.FileMode(420), modTime: time.Unix(1497173619, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnet152_11kYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4b\x6b\xdd\x4c\x0c\xdd\xcf\xaf\xd0\xe6\xdb\xc5\xe3\xc7\x8d\xf3\x15\x2f\x0a\xa5\x74\x11\x28\x5d\x24\x21\x9b\x52\x82\xee\x58\xbe\x9e\x64\x3c\x63\x24\xf9\x3e\xfe\x7d\x19\xbb\x8f\x14\xb2\xca\x66\x10\x67\x74\x0e\x3a\x3a\x8a\x38\x51\x07\x4c\x12\x49\x8b\xba\x6d\x8c\x4b\x51\xd1\x47\xe2\xce\x00\xe0\xd4\xdf\x5c\xe7\x02\xe0\x30\x2f\x1d\x30\xfa\x99\xd3\x33\x39\x2d\xad\xb5\x2b\xee\xde\xc4\xe7\xd9\xdd\x5c\x07\x7a\x45\xcd\xf8\xc0\x38\xd1\x29\xf1\x4b\x07\xd3\x39\x92\x9a\x23\xb1\xf8\x14\x3b\xa8\x6d\x65\xf4\x32\x53\x07\x2e\x46\xe3\xe3\xbc\x68\xe6\x6e\x90\x9f\xf0\x40\x06\xa0\xf7\x13\xc5\xdc\x2f\x1d\x7c\xaf\xaf\x60\x77\x05\x4d\x73\xbd\x3e\x3f\x4c\x5a\xf4\x1f\x52\xc0\x3d\x05\xd3\xa3\xa2\x90\x3e\x6d\x36\x6f\xb3\xd0\xb7\x6c\xb4\x7e\x31\x03\xa1\x2e\x4c\xf2\xb4\x70\xe8\x60\x54\x9d\xbb\xb2\xcc\xfd\xb6\x9f\x82\xb3\x53\x28\xd7\x19\xcb\x29\xf5\x14\xa4\x5c\x87\x88\x1b\xb7\x94\x4b\x14\x52\xab\x67\x35\x07\xc6\x79\x7c\x8f\xc6\xdf\x9d\xbf\x2a\x0b\xb9\x4c\xfb\x14\xec\xb3\xa4\x68\x4e\xe4\x0f\xa3\xbe\x6b\xc0\xb7\xc5\xab\xaa\xaa\xec\x8c\x8c\x93\x18\xa6\x81\x98\xa2\x23\xc9\x3b\x2b\x7e\xeb\x23\x9f\xfd\xd1\x26\x3e\x94\xb8\x97\xb2\x6e\xeb\xc6\x56\xbb\xdd\x87\xd6\xf4\x24\x8e\xfd\xac\x6b\x5c\x1f\xcd\xa7\xb8\xc5\x52\xb8\x80\x22\x7e\xf0\x0e\xf3\x17\x44\xd2\x1c\x30\xec\x17\x1f\x14\xd2\x00\x01\x2f\xc4\x02\x3a\xa2\x42\x20\xe4\x98\x8f\xcd\xf7\x0b\x06\x18\x96\xe8\x32\x49\xe0\x64\xd9\xea\xd6\x0a\x6b\xf8\x92\x8f\xe8\x61\xf4\xf2\x47\xd0\xa5\x28\x5e\x54\xb2\x66\x5b\x37\xbf\x74\xad\x81\xbb\xd5\x5f\xdd\x36\x80\x6e\xf4\x74\x24\x81\x66\x67\xab\xff\xe0\x21\xcd\x45\x0d\x5f\x98\x13\x03\xc6\x1e\x6e\xec\xff\x1b\xd8\x02\xad\x60\x8a\x70\xfb\xf5\xfe\xf1\xee\x73\x53\xd5\x6d\xf1\x88\xc1\xf7\x9b\x89\x7b\x52\x6b\xcc\xcf\x00\x00\x00\xff\xff\xea\x7f\x13\xfd\x1b\x03\x00\x00"

func resnet152_11kYmlBytes() ([]byte, error) {
	return bindataRead(
		_resnet152_11kYml,
		"Resnet152_11k.yml",
	)
}

func resnet152_11kYml() (*asset, error) {
	bytes, err := resnet152_11kYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Resnet152_11k.yml", size: 795, mode: os.FileMode(420), modTime: time.Unix(1497173630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _caffenetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x4d\x6f\xd4\x30\x10\xbd\xfb\x57\xcc\xa5\xb7\xc6\xc9\x6e\x77\x97\x36\x07\x24\xd4\x13\xe2\xe3\x00\x88\x0b\x42\xd5\xd4\x99\x6c\x5c\x9c\xb1\xe5\x99\xec\x76\xff\x3d\x72\xd2\x56\x6d\x85\x40\x5c\x92\xf1\xf3\x7b\xcf\xf3\xc5\x38\x52\x0b\xd7\xd8\xf7\xf4\x99\xd4\xb8\xc8\x8a\x9e\x29\xb7\x06\x00\xc7\x6e\xb7\x29\x01\xc0\x3e\x4d\x2d\x64\xf4\x29\xc7\x3b\x72\x5a\x5b\x6b\x67\xdc\xfd\x11\x4f\xc9\xed\x36\x81\x9e\x49\x0b\xde\x67\x1c\xe9\x18\xf3\xaf\x16\xc6\x7b\x26\x35\x07\xca\xe2\x23\xb7\xb0\xb2\x8d\xd1\x53\xa2\x16\x1c\xb3\xf1\x9c\x26\x2d\xda\x05\xf2\x23\xee\xc9\x00\x74\x7e\x24\x2e\x7c\x69\xe1\xc7\xea\x1c\x2e\xce\x61\xbd\xde\xcc\x9f\x9f\x26\x4e\xfa\x42\x14\xf0\x96\x82\xe9\x50\x51\x48\x6f\x96\x22\xdf\x17\xa3\x52\x64\x4f\xa8\x53\x26\xb9\x99\x72\x68\x61\x50\x4d\x6d\x5d\x17\xae\xed\xc6\xe0\xec\x18\xea\x39\xbf\x7a\x8c\x1d\x05\xa9\xe7\x04\xca\x59\x4e\x2c\xa4\x56\xef\xd5\xec\x33\xa6\xe1\x7f\xf5\xae\x74\xf9\x79\x50\xc9\x69\xbc\x8d\xc1\xde\x49\x64\x73\x24\xbf\x1f\xf4\x6f\x49\xfd\xd3\xae\x69\x9a\xc6\x26\xcc\x38\x8a\xc9\xd4\x53\x26\x76\x24\xa5\x2b\xd5\xa3\x63\xc2\x44\x59\x2c\xfb\x24\xd6\xb9\xe5\x58\x6f\x2e\xd7\x9b\xea\xd1\xb7\x72\x01\x45\x7c\xef\x1d\xaa\x8f\x5c\x1d\xbd\x0e\x55\x47\x94\x2a\x17\xf9\x10\xc3\x54\x50\x0c\x15\xd3\x94\xe7\x9f\x96\x99\x8a\xe9\x48\x5c\xf6\x49\xe7\x89\xbe\x35\x00\xef\x78\x99\xdd\x2b\x43\x28\x5e\xf0\xc2\x0b\x1e\x4c\x40\x73\x59\xbe\x0e\x22\x83\x0e\x04\x1f\xbf\x7e\xff\x72\x5d\xad\x9b\x55\xf3\x34\xbc\x85\xe2\x79\x0f\x42\x7a\x6e\x00\x8e\x83\x77\x03\xa0\x1b\x3c\x1d\xa8\x03\x8d\xa9\x5a\x01\xf2\x12\x6d\x81\x72\x8e\x19\x32\x2a\x09\xc4\x1e\x2e\xae\xec\x9b\xb3\xf9\x7a\x75\x69\xaf\xce\xca\xb2\x7e\x1b\xe8\xe9\x7d\x17\x59\xbc\xe8\x4c\xdd\x35\x9f\x60\xee\x25\x29\x65\x99\x35\xdb\xa6\xf9\x00\xa5\xee\xc8\x02\xe8\x72\x14\x81\xed\xab\x52\x02\x9e\x0a\x5d\x8f\x11\xfa\x29\x84\x53\xe9\x1a\x93\x53\xea\x1e\xae\xac\xf9\x1d\x00\x00\xff\xff\xc9\xfc\x17\x04\x74\x03\x00\x00"

func caffenetYmlBytes() ([]byte, error) {
	return bindataRead(
		_caffenetYml,
		"caffenet.yml",
	)
}

func caffenetYml() (*asset, error) {
	bytes, err := caffenetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "caffenet.yml", size: 884, mode: os.FileMode(420), modTime: time.Unix(1497173603, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inceptionv3Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4f\x6f\x14\x3f\x0c\xbd\xe7\x53\xf8\xf2\xbb\x75\x92\x9d\x69\x77\x7f\x52\x0e\x48\xc0\xa9\x12\xf4\x00\x12\x17\x84\x2a\x6f\xc6\xb3\x93\x92\x38\x51\xe2\xd9\x3f\xdf\x1e\x65\xb6\x54\x80\x50\xc5\x65\x64\xbf\xf1\x7b\x7e\xb6\xc3\x18\xc9\xc2\x3d\x3b\xca\xe2\x13\x2b\x97\x58\xd0\x33\x15\xab\x00\x30\x8e\xbb\xbb\x16\x00\x1c\xf2\x62\xa1\xa0\xcf\x25\x3d\x91\x13\xa3\xb5\x5e\x71\xf7\x57\x3c\x67\xb7\xbb\x0b\xf4\x0b\xb5\xe1\x53\xc1\x48\xa7\x54\xbe\x5b\x88\x67\x26\x51\x47\x2a\xd5\x27\xb6\x70\xab\x37\x4a\x2e\x99\x2c\x38\x66\xe5\x39\x2f\xd2\xb8\x57\xc8\x47\x3c\x90\x02\x18\x7d\x24\x6e\xf5\xd5\xc2\xd7\xfe\x06\x6e\x6f\x60\x18\xee\xd6\xcf\x37\x95\x16\xf9\x8d\x14\x70\x4f\x41\x8d\x28\x58\x49\x1e\x9f\xa7\x6c\x42\x0f\x24\x6a\x22\x94\xa5\x50\x7d\x5c\x4a\xb0\x30\x8b\x64\x6b\x4c\xab\xd5\x63\x0c\x4e\xc7\x60\x56\x7f\x26\xa6\x91\x42\x35\xab\x81\x96\xd7\x0b\x57\x12\x2d\x67\x51\x87\x82\x79\x7e\x85\xff\x07\xd3\xff\x5c\x70\xb7\x67\xf3\xb2\xed\xee\xdd\x43\x57\x2f\x71\x9f\x82\x7e\xaa\x89\xd5\x89\xfc\x61\x96\xd7\x6c\xfd\xb3\xec\xa6\x1f\x76\x3a\x63\xc1\x58\x55\xa1\x89\x0a\xb1\xa3\xda\xf6\xd3\xad\xca\xd5\x1a\x83\xe5\xec\x8f\x3a\x95\x83\xc9\xe3\x64\xfa\x6d\x3f\xe8\xcd\x66\xbb\xfb\x5f\xe7\x71\x52\x23\x55\x57\xfc\xaa\x67\xe1\x8d\x02\x78\xcb\xd7\x4b\x74\x2e\x60\xad\x7e\xf2\x0e\xdb\x4f\x70\x89\x8f\x29\x2c\x2d\xc6\x00\x4c\xd2\x2e\xdc\x1e\xc1\x8b\x1f\x40\x37\x7b\x3a\x52\x85\xa1\xd7\xc3\x7f\x20\x29\x77\x3d\x20\x8f\xb0\xd5\xbb\x6b\xba\x05\x2a\x25\x15\x48\x0c\x32\x13\xdc\x7f\xf8\xfc\xe5\xd3\x7b\x18\x36\xfd\x00\x47\x0c\x7e\xbc\xb6\x7a\x3e\xe7\x2a\x2e\xad\x71\xf5\x55\x2a\xa4\x09\x26\x3a\x51\x01\x99\x91\x61\xd8\x7e\x84\x75\x70\x12\x2a\x55\xab\x1f\x01\x00\x00\xff\xff\x9f\x85\xc7\x2d\xe2\x02\x00\x00"

func inceptionv3YmlBytes() ([]byte, error) {
	return bindataRead(
		_inceptionv3Yml,
		"inceptionv3.yml",
	)
}

func inceptionv3Yml() (*asset, error) {
	bytes, err := inceptionv3YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inceptionv3.yml", size: 738, mode: os.FileMode(420), modTime: time.Unix(1497173605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _locationnetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xc1\x6e\xdb\x3c\x10\x84\xef\x7c\x8a\xbd\xe4\x66\x53\x92\xe5\x24\xb6\x0e\x3f\xf0\xa3\x68\x81\x00\x4d\x0e\x45\x0f\x05\x8a\x20\x58\x53\x6b\x89\x0d\xc9\x15\xb8\x2b\x3b\xc9\xd3\x17\x92\xd2\xb4\x41\xaf\xbd\x48\x82\x86\xfc\x76\x38\x9c\x84\x91\x1a\xf8\xcc\x0e\xd5\x73\xba\x23\x35\xc7\x8c\x91\xce\x9c\x1f\x1b\x88\x4f\x89\xd4\x9c\x28\x8b\xe7\xd4\x40\x65\x4b\xa3\xcf\x03\x35\xe0\x52\x32\x3e\x0d\xa3\x36\x06\x60\xf9\xe5\x23\x76\x64\x00\x5a\x1f\x29\x4d\xeb\xa5\x81\xef\xd5\x0a\xea\x15\x6c\x36\xdb\xf9\x71\x6f\x78\xd4\x77\x9b\x1c\x73\x6e\x7d\x42\x25\x31\x2d\x2a\x0a\xe9\xc3\xe2\xe8\x76\x0c\xea\x23\xb5\x1e\x3f\x70\x8c\x9c\xc4\x1c\x09\x75\xcc\x24\x0f\x63\x0e\x0d\xf4\xaa\x83\x34\x45\x91\xf1\x6c\x3b\xaf\xfd\x78\x18\x85\xb2\xe3\xa4\x94\xd4\x3a\x8e\x45\x7c\x23\xac\x0f\x94\x1f\x29\xd0\x73\xa1\xa3\x72\xf6\x18\xa4\x88\x28\x4a\xb9\xe8\xb2\x6f\xc5\xea\x93\x9a\x2e\xe3\xd0\xbf\x67\x4b\x6d\x31\xe2\x0b\x27\x3c\xcb\x82\x8c\x6e\x31\xb3\xfe\x05\x2a\x22\xb7\x14\xa4\xf8\x72\x57\x95\xd5\xfa\xf2\xf1\xb2\x2c\xd7\xf2\x1c\x0f\x1c\xec\x0f\xe1\x64\xce\xe4\xbb\x5e\xe5\x9f\x70\xcb\xb2\xda\xd8\x01\x33\x46\x31\x91\x30\x3d\xcc\x91\x4f\x29\x6f\x6a\x7b\xb5\x5b\x41\x55\x5d\xd9\xeb\xeb\xfd\x0a\xaa\xb2\xb6\xfb\x7a\x7f\x6f\x32\x1d\x29\x53\x72\x24\x53\xe6\xeb\xdf\x0e\x14\xd5\x3b\xdb\x31\x77\x81\xfe\x0a\x6e\xca\xac\xc8\x24\x84\xd9\xf5\xaf\x8b\x66\x85\x52\x51\x0c\xe3\x41\x8a\x49\xf0\x27\x2a\xb6\x97\xdb\xdd\xce\x0e\xed\xd1\xb4\x24\x2e\xfb\x41\xe7\xa2\xfc\x67\x00\xfe\x87\xa1\x67\xe5\x75\x60\x87\xc1\xbf\xcc\xf5\x02\xc7\xe9\xc4\x61\x9c\xbe\x31\x40\xa2\x31\xcf\x2f\x9d\xea\x06\x07\x14\x6a\x81\x13\x68\x4f\x70\x93\x1c\xcd\x34\x98\x67\x29\xb9\xe9\xf2\xad\x81\x3f\xbb\x0a\x5e\x00\x0f\x81\x40\x19\x5e\xe7\x10\xd4\xf6\xea\x02\xf8\xb8\x14\x52\x00\x15\x44\x33\x91\x42\xa0\x13\x85\x15\x60\x6a\x61\xbb\xbb\x98\x84\xe9\xd4\x3e\x51\x7a\xd5\x26\xfa\xd7\x9e\xde\x0c\x9d\x51\x40\x33\xfa\xb4\xd8\xaa\xf6\xb7\xf0\xf1\xdb\xcd\x27\xe8\x88\x15\xbb\x8e\xda\xe5\x88\x32\x23\x1d\x27\xf1\xa2\x32\x8d\xde\x5f\xaf\xea\x4d\xb5\x2a\xb7\x3b\x98\xef\x8b\x94\xb2\x58\xf3\x33\x00\x00\xff\xff\x7d\xe1\x06\x49\x6c\x03\x00\x00"

func locationnetYmlBytes() ([]byte, error) {
	return bindataRead(
		_locationnetYml,
		"locationnet.yml",
	)
}

func locationnetYml() (*asset, error) {
	bytes, err := locationnetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locationnet.yml", size: 876, mode: os.FileMode(420), modTime: time.Unix(1497173650, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ninYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcb\x8a\xdc\x40\x0c\xbc\xf7\x57\xd4\x25\x90\xc0\x8c\xed\x79\x24\x10\x1f\x02\x4b\x20\xb0\x17\x1f\x42\x6e\x21\x2c\xda\xb6\x3c\xee\x6c\xbf\x68\x69\x5e\x7f\x1f\xda\xb3\x2c\xc9\x42\xf6\x60\xd3\x6a\xa9\x4a\x55\x52\x47\x0a\xdc\x63\x60\x3d\xa7\xf2\x04\x17\x5f\x8e\xef\x07\x37\x7c\x30\x53\xa1\xc0\x35\xee\x11\x2e\x91\xd5\x9c\xb8\x88\x4b\xb1\xc7\xa6\xe9\x8c\x5e\x33\xf7\xb0\x31\x1a\x17\xf3\x51\x7b\x03\xdc\xae\x5c\xa0\x03\x1b\x60\x74\x81\x63\xad\x97\x1e\x3f\x37\x2b\xec\x56\xd8\x6e\xf7\xcb\xef\x97\x49\x47\xfd\x07\xe4\xe9\x91\xbd\x19\x49\x49\x58\x1f\x6e\xc2\xee\x2b\xd1\xc0\x6a\x26\x26\x3d\x16\x96\x87\x63\xf1\x3d\x66\xd5\xdc\xb7\x6d\xad\x6d\xc6\xe0\x6d\x13\x7c\xbb\xe8\x6b\x43\x1a\xd9\x4b\xbb\x08\xa8\xb1\x5c\xa3\xb0\x36\x7a\x51\x73\x28\x94\xe7\x37\xf0\xaf\x90\xd1\xc5\xfa\xad\xe5\x1a\x1e\x93\x6f\x7e\x4b\x8a\xe6\xcc\xee\x30\xeb\x5b\x22\xfe\x43\xd2\x75\x5d\xd7\x64\x2a\x14\xc4\x14\x9e\xb8\x70\xb4\x2c\xd5\xfb\x7a\xe1\x91\xbe\x6d\xa9\x5c\xdc\xa9\x49\xe5\xd0\xe6\x71\x6a\x37\xbb\xcd\xb6\xd9\xef\xbb\xee\xb4\x6b\xf2\x38\x99\x91\xc5\x16\x97\x75\x19\xfe\x17\x03\xdc\xc5\xdb\x98\xd7\xd6\x93\x88\x9b\x9c\xa5\x9a\x44\x7c\x5e\xa0\x68\x39\xd6\x91\xe1\x3c\x73\x61\x48\x20\xef\x91\xb9\x58\xce\x5a\x52\x14\x88\x77\x23\x23\x9d\xb8\x60\x59\x1f\x02\x65\x59\x41\x5c\x70\x9e\x0a\x34\x81\xf0\x75\x18\x1a\x03\xfc\x98\x9d\x80\xe3\x4c\x55\x35\x7c\xb2\xe4\xb1\x58\x75\xf1\xb0\x02\x79\x9f\xce\x2e\x1e\x30\xa5\x52\xe1\xd9\x73\xc1\x2b\x55\x9e\xae\x5c\x04\x3a\x93\x82\x0a\x83\x49\x1c\x2f\x4d\x5c\x54\x2e\xb9\xb0\xde\x1a\xf1\x8b\x01\x9b\xa2\x38\x51\x41\x9a\xb0\x83\x28\xd9\x27\x1e\x9f\x89\x56\x60\xb2\x73\xcd\x9c\x67\x67\x67\x38\x01\x61\xb7\x5e\x92\x7f\x99\xac\x94\xc3\xfd\x00\xb2\xb3\xe3\x13\x8f\xd8\x7d\x6c\x3e\x7d\x7e\x87\x14\x71\xff\xed\xee\xfb\x7a\xd3\x75\xf5\xcd\x6f\xbb\xcd\xbe\x31\x7f\x02\x00\x00\xff\xff\x18\xb1\x2f\xea\x0b\x03\x00\x00"

func ninYmlBytes() ([]byte, error) {
	return bindataRead(
		_ninYml,
		"nin.yml",
	)
}

func ninYml() (*asset, error) {
	bytes, err := ninYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nin.yml", size: 779, mode: os.FileMode(420), modTime: time.Unix(1497173611, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _residualnet152Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x4b\x8f\xd4\x3c\x10\xbc\xfb\x57\xf4\xe5\xbb\xed\x38\x8f\x99\xec\x87\x72\x40\x42\x9c\x56\x42\x7b\x58\x10\x17\x84\x56\x1e\xa7\x93\x78\xf1\x4b\xdd\x9d\x79\xfc\x7b\xe4\x64\x40\x80\xd0\x4a\x5c\xfc\xa8\xee\x2a\x95\x5d\x1d\x4d\xc0\x1e\x9e\x90\xdd\xb0\x18\xff\x88\xd2\x74\xad\xb2\x29\x8a\x71\x11\xa9\x57\x00\x26\x0c\xf7\x87\x72\x00\x98\xf2\xd2\x03\x19\x97\x29\xbd\xa0\x95\x4a\x6b\xbd\xe2\xf6\xaf\x78\xce\xf6\xfe\xe0\xf1\x17\x6a\xc1\x47\x32\x01\xcf\x89\xbe\xf5\x10\x2e\x11\x45\x9d\x90\xd8\xa5\xd8\x43\xa3\x6b\x25\xd7\x8c\x3d\xd8\x18\x95\x8b\x79\x91\xc2\xdd\x20\x17\xcc\x84\x0a\x60\x70\x01\x63\xe9\xe7\x1e\xbe\x34\x77\xb0\xbf\x83\xb6\x3d\xac\xcb\x57\x95\x16\xf9\x8d\xe4\xcd\x11\xbd\x1a\x8c\x18\x46\x79\xde\x9e\xfa\x50\x84\x1e\x51\xd4\x88\x46\x16\x42\x7e\x5e\xc8\xf7\x30\x8b\xe4\xbe\xaa\x4a\xaf\x1e\x82\xb7\x3a\xf8\x6a\xf5\x57\x85\x34\xa0\xe7\x6a\x35\x50\xee\x7c\x8d\x8c\xa2\xe5\x22\x6a\x22\x93\xe7\x57\xf8\x7f\x30\x09\xb9\x6c\x4d\xd7\xee\xbc\xb9\x22\xf1\x0d\xd9\x15\x84\xaf\xe1\x98\xbc\x7e\xe1\x14\xd5\x19\xdd\x34\xcb\x6b\xce\xfe\x45\xb9\xae\xeb\x5a\x67\x43\x26\xb0\x22\x1c\x91\x30\x5a\xe4\xf2\x4b\xbb\x55\x9c\xfb\xaa\x32\x74\x71\x27\x9d\x68\xaa\xf2\x30\x56\x4d\xd7\xb4\xba\xde\xef\xdf\x74\xa7\x46\xe7\x61\x54\x03\xb2\x25\x97\x65\xcd\xe9\xad\x02\x78\x17\xb7\x44\x76\xd6\x1b\x66\x37\x3a\x6b\x4a\x11\x22\x4a\xc9\x16\x8e\x8b\xf3\x02\x69\x84\xcd\x0e\xc8\x6c\x04\x3c\x1a\x8a\x40\xb7\x59\x83\x71\x89\xb6\x90\x18\xce\x9a\xb4\x6c\xad\xb0\xe6\xce\x65\x7e\x3e\xcd\x8e\x7f\x0a\xda\x14\xd9\xb1\x70\xd1\xec\x9a\xf6\xa6\xab\x37\x2b\x18\x19\xc3\xd1\x63\x29\xca\x8c\x8c\x3f\x68\x0c\xc6\xce\x0e\x4f\xc8\xb0\xd7\xdd\xff\xff\x01\x12\x25\x02\x32\x82\x90\x22\x3c\x7c\xf8\xf8\xf9\xe9\xfd\xae\xad\x9b\x4e\xab\xef\x01\x00\x00\xff\xff\x5e\x26\x39\xd4\x0a\x03\x00\x00"

func residualnet152YmlBytes() ([]byte, error) {
	return bindataRead(
		_residualnet152Yml,
		"residualNet152.yml",
	)
}

func residualnet152Yml() (*asset, error) {
	bytes, err := residualnet152YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "residualNet152.yml", size: 778, mode: os.FileMode(420), modTime: time.Unix(1497173623, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _squeeznetYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xbd\x6e\xdc\x4c\x0c\xec\xf7\x29\xd8\xb8\x3b\xaf\x24\xdb\x67\x7f\x50\xf1\x01\x29\xd3\xb8\x49\x19\x04\x87\x3d\xed\x9c\xb4\xc9\xfe\xc8\x24\x75\x3f\x7e\xfa\x60\x75\x70\x12\xa7\x30\xd2\x08\xa4\x30\x33\x1c\x0e\x37\xbb\x84\x9e\xbe\xbc\x2c\xc0\x2b\x9e\xa1\xe6\xc0\x2e\xe1\x54\xf8\x47\x4f\xe9\x9c\xa1\xe6\x08\x96\x50\x72\x4f\x9d\xed\x8c\x5e\x66\xf4\x34\xe4\x6c\x42\x9e\x17\xed\x0d\xd1\xf5\x57\x48\x6e\x84\x21\xf2\x21\x21\x57\xbc\xf4\xf4\xb5\xdb\xd0\xfd\x86\xee\xee\x1e\xd6\xcf\x37\x53\x16\x7d\x47\x8a\x6e\x8f\x68\xbc\x53\x27\xd0\xdd\xd5\xca\xe7\x2a\xb4\x1a\x81\xd3\x85\x21\xbb\x85\x63\x4f\x93\xea\xdc\x37\x4d\xc5\x5a\x9f\xe2\x60\x53\x6c\x56\x7f\x4d\x2a\x1e\x51\x9a\xd5\x40\xed\xe5\x92\x05\x6a\xf5\xac\x66\x64\x37\x4f\x1f\xf0\xff\x66\x5e\x53\x78\x5f\xee\x8e\x9d\xed\x6e\xe5\x92\xf6\x25\xda\xef\x52\xb2\x39\x21\x8c\x93\x7e\xe4\xeb\xdf\x75\xdb\xb6\x6d\xed\xec\xd8\x25\x31\x8c\x03\x18\x79\x80\xd4\x84\x6e\x57\x69\xe9\x9b\xc6\xf1\x39\x1c\x6d\xe1\xb1\x99\xfd\xa1\xe9\x1e\xdb\x3b\xdb\x3e\xdd\x3f\xb6\xc7\x07\x3b\xfb\x83\xf1\x90\x81\xc3\xac\xeb\x8d\xfe\x37\xf4\x76\xcc\x0c\x25\x37\x4c\x01\x47\x08\x49\x48\x21\x3a\x26\x86\x2c\x51\x85\xb4\xd0\xa7\x88\xf3\x33\x74\x43\x4e\x69\xdb\x9e\xe9\x80\x13\x98\x56\x2f\x50\xb0\x90\xcb\x9e\xba\x66\xdb\xb6\x3a\x91\x4e\x20\x09\xaf\xb0\x55\x3f\xb9\x18\xe9\xba\x24\x39\x06\xa5\xc2\xa0\x03\x9c\x84\x7d\x44\x95\xf6\x98\x63\xb9\x50\xc9\x34\x39\xf6\xa7\x8a\x39\x05\x9d\x28\x86\x14\x14\x9e\x12\x52\xe1\xcb\x86\x18\x2f\x4b\x60\x50\x84\x88\x21\x1a\x4a\x4a\x4b\x0e\x83\xab\xbb\x90\x5f\x38\xe4\x91\x7c\x10\xe5\xb0\x5f\x2a\x4f\xd9\x85\x1c\xf2\xb8\x59\xbd\x55\xd9\x3a\x14\xbc\xce\xfc\x85\xab\xdd\x10\x03\xb2\x8a\xfd\x1d\xc7\xf3\x9f\x71\x6c\x9f\xec\xf6\x66\x15\xf9\xaf\xb5\xf7\x37\xa4\x65\xbe\xed\xd6\xbe\x56\x5b\x72\xc3\xc2\x6e\xd0\x75\x85\xb7\x07\x69\x8d\xf9\x19\x00\x00\xff\xff\x5f\xdc\x25\x95\x2d\x03\x00\x00"

func squeeznetYmlBytes() ([]byte, error) {
	return bindataRead(
		_squeeznetYml,
		"squeeznet.yml",
	)
}

func squeeznetYml() (*asset, error) {
	bytes, err := squeeznetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "squeeznet.yml", size: 813, mode: os.FileMode(420), modTime: time.Unix(1497173639, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg16Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x3f\x8f\xdb\x30\x0c\xc5\x77\x7d\x0a\x2e\xdd\x2e\xb2\x9d\xc4\x46\xeb\xa1\x40\xa7\xa0\x4b\xc7\x5b\x8a\xe2\xc0\x93\x69\x5b\x57\xfd\x83\x48\x3b\xc9\xb7\x2f\xe4\xdc\x15\xd7\xa2\xcd\x60\x83\xfa\x89\xef\x81\xd4\x0b\xe8\xa9\x87\xc7\xd3\xa9\xe9\x94\x89\x41\xd0\x06\xca\xbd\x02\x40\x3f\x74\xc7\x52\x00\x4c\x69\xe9\x21\xa3\x4d\x39\xbe\x90\x91\x4a\x6b\xbd\x71\xf3\x4f\x9e\x92\xe9\x8e\x8e\xde\x49\x0b\x1f\x33\x7a\x3a\xc7\xfc\xb3\x07\x7f\x09\x24\x6a\xa5\xcc\x36\x86\x1e\x1a\x5d\x2b\xb9\x26\xea\xc1\x84\xa0\x6c\x48\x8b\x14\xed\x0d\x59\x8f\x13\x29\x80\xc1\x7a\x0a\xa5\x9f\x7b\xf8\xde\x3c\xc0\xe1\x01\xf6\xfb\xe3\xf6\xfb\xa1\xe2\x22\x7f\x88\x1c\x3e\x93\x53\x03\x0a\x32\xc9\xd3\x6d\xc3\xaf\xc5\xe8\x1b\x89\x1a\x09\x65\xc9\xc4\x4f\x4b\x76\x3d\xcc\x22\xa9\xaf\xaa\xd2\xab\x07\xef\x8c\xf6\xae\xda\xe6\xab\x7c\x1c\xc8\x71\xb5\x0d\x50\xce\x7c\x0d\x4c\xa2\xe5\x22\x6a\xca\x98\xe6\x3b\xfa\xbf\x94\xeb\x34\x95\xaf\xe9\x76\x7c\xf5\xcf\xd1\xe9\x17\x8e\x41\x9d\xc9\x4e\xb3\xdc\x1b\xe3\xbf\x36\x75\x5d\xd7\x3a\x61\x46\xcf\x2a\xd3\x48\x99\x82\x21\x2e\xfb\xef\x36\x27\xee\xab\x0a\xf3\xc5\xae\x3a\xe6\xa9\x4a\xc3\x58\x35\xc7\xfa\x93\x6e\xda\xb6\x5b\x3b\x9d\x86\x51\x0d\xc4\x26\xdb\x24\x5b\x00\x9f\x15\xc0\x97\x70\x7b\xea\x9d\x71\xc8\x6c\x47\x6b\xb0\x5c\x82\x89\x61\x8d\x6e\x29\x35\x3a\x08\x24\x25\xc2\x92\xf2\xe3\xe9\x04\x0b\x13\x03\xbe\x51\x38\x5b\x99\xa1\xe9\xc0\xe1\x95\x32\x43\x1c\xe1\x70\x39\xbc\x77\x80\xd1\x3a\xa1\xcc\x6f\x7a\x34\xb3\xa5\x95\x18\xf6\xad\x6e\x3f\x80\xc4\xb4\x6b\x80\x72\x8e\x19\x30\x0c\xf0\x51\xd7\x37\xd8\xbe\xc2\x18\x40\x66\xfa\x1d\x25\x98\x19\x9d\xa3\x30\x11\xbc\x66\x0d\x36\xc0\xbe\x6e\x5a\xad\x7e\x05\x00\x00\xff\xff\x77\xa0\x5f\x6d\xd7\x02\x00\x00"

func vgg16YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg16Yml,
		"vgg16.yml",
	)
}

func vgg16Yml() (*asset, error) {
	bytes, err := vgg16YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg16.yml", size: 727, mode: os.FileMode(420), modTime: time.Unix(1497173641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x3f\x6f\xdb\x30\x10\xc5\x77\x7e\x8a\x5b\xba\xc5\x94\x68\x47\x41\xcd\xa1\x40\xa7\xa0\x4b\xc7\x2e\x45\x11\x5c\xa8\x93\xc4\x96\xff\xc0\x3b\xc9\xf6\xb7\x2f\x68\x27\x45\x5b\x20\x19\x24\x90\x8f\xf7\x1e\x1e\xf9\x4b\x18\xc9\xc2\xb7\xc7\x47\x73\x54\x53\xc5\x48\xa7\x5c\x7f\x59\x88\xe7\x44\xa2\x36\xaa\xec\x73\xb2\x60\x74\xaf\xe4\x52\xc8\x82\x4b\x49\xf9\x54\x56\xb1\x0a\xe0\x26\xf9\x88\x33\x29\x80\xd1\x47\x4a\x6d\x9e\x2d\x7c\x37\x77\x70\xb8\x83\xfd\xfe\xfe\xfa\xfb\xa1\xf2\x2a\xff\x98\x02\x3e\x53\x50\x23\x0a\x32\xc9\xd3\xad\xc5\x97\x16\xf4\x95\x44\x4d\x84\xb2\x56\xe2\xa7\xb5\x06\x0b\x8b\x48\xb1\x5d\xd7\x66\xf5\x18\x83\xd3\x31\x74\xd7\x7e\x5d\xcc\x23\x05\xee\xae\x05\xda\x9e\x2f\x89\x49\xb4\x9c\x45\xcd\x15\xcb\xf2\x8e\xff\x3f\xe7\x36\xcf\xed\x33\xc7\x1d\x5f\xe2\x73\x0e\xfa\x27\xe7\xa4\x4e\xe4\xe7\x45\xde\xab\xf1\x66\x4c\xdf\xf7\xbd\x2e\x58\x31\xb2\xaa\x34\x51\xa5\xe4\x88\xdb\xfd\x77\xd7\x24\xb6\x5d\x87\xf5\xec\x37\x9d\xeb\xdc\x95\x71\xea\xcc\x7d\x7f\xd4\x66\x18\x1e\xb6\x07\x5d\xc6\x49\x8d\xc4\xae\xfa\x22\x57\x00\x9f\x14\xc0\xe7\x74\x7b\xea\x9d\x0b\xc8\xec\x27\xef\xb0\x1d\x82\xcb\x69\xcb\x61\x6d\x6b\x0c\x90\x48\x1a\x42\xad\xa0\x51\x85\x95\x89\x01\x5f\x55\x38\x79\x59\xc0\x1c\x21\xe0\x85\x2a\x43\x9e\xe0\x70\x3e\xfc\x9d\x00\x93\x0f\x42\x95\x5f\xfd\xe8\x16\x4f\x1b\x31\xec\x07\x3d\x7c\x00\xc9\x65\x67\x80\x6a\xcd\x15\x30\x8d\xf0\x51\xf7\x37\x71\x78\x11\x73\x02\x59\xe8\x0f\x4a\x70\x0b\x86\x40\x69\x26\x78\x61\x0d\x3e\xc1\xbe\x37\x83\x56\xbf\x03\x00\x00\xff\xff\xcd\xec\x5d\x15\x7b\x02\x00\x00"

func vgg19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg19Yml,
		"vgg19.yml",
	)
}

func vgg19Yml() (*asset, error) {
	bytes, err := vgg19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg19.yml", size: 635, mode: os.FileMode(420), modTime: time.Unix(1497173644, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"ResNeXt101.yml": resnext101Yml,
	"ResNeXt50.yml": resnext50Yml,
	"ResidualNet101.yml": residualnet101Yml,
	"ResidualNet18.yml": residualnet18Yml,
	"ResidualNet200.yml": residualnet200Yml,
	"ResidualNet34.yml": residualnet34Yml,
	"ResidualNet50.yml": residualnet50Yml,
	"Resnet152_11k.yml": resnet152_11kYml,
	"caffenet.yml": caffenetYml,
	"inceptionv3.yml": inceptionv3Yml,
	"locationnet.yml": locationnetYml,
	"nin.yml": ninYml,
	"residualNet152.yml": residualnet152Yml,
	"squeeznet.yml": squeeznetYml,
	"vgg16.yml": vgg16Yml,
	"vgg19.yml": vgg19Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"ResNeXt101.yml": &bintree{resnext101Yml, map[string]*bintree{}},
	"ResNeXt50.yml": &bintree{resnext50Yml, map[string]*bintree{}},
	"ResidualNet101.yml": &bintree{residualnet101Yml, map[string]*bintree{}},
	"ResidualNet18.yml": &bintree{residualnet18Yml, map[string]*bintree{}},
	"ResidualNet200.yml": &bintree{residualnet200Yml, map[string]*bintree{}},
	"ResidualNet34.yml": &bintree{residualnet34Yml, map[string]*bintree{}},
	"ResidualNet50.yml": &bintree{residualnet50Yml, map[string]*bintree{}},
	"Resnet152_11k.yml": &bintree{resnet152_11kYml, map[string]*bintree{}},
	"caffenet.yml": &bintree{caffenetYml, map[string]*bintree{}},
	"inceptionv3.yml": &bintree{inceptionv3Yml, map[string]*bintree{}},
	"locationnet.yml": &bintree{locationnetYml, map[string]*bintree{}},
	"nin.yml": &bintree{ninYml, map[string]*bintree{}},
	"residualNet152.yml": &bintree{residualnet152Yml, map[string]*bintree{}},
	"squeeznet.yml": &bintree{squeeznetYml, map[string]*bintree{}},
	"vgg16.yml": &bintree{vgg16Yml, map[string]*bintree{}},
	"vgg19.yml": &bintree{vgg19Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

