// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Wed, 07 Jun 2017 15:59:19 BST.
// By https://git.io/c-for-go. DO NOT EDIT.

package gomxnet

/*
#cgo LDFLAGS: -lmxnet
#include "c_api.h"
#include "c_predict_api.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// GetLastError function as declared in mxnet/c_api.h:161
func GetLastError() string {
	__ret := C.MXGetLastError()
	__v := packPCharString(__ret)
	return __v
}

// RandomSeed function as declared in mxnet/c_api.h:171
func RandomSeed(Seed int32) int32 {
	cSeed, _ := (C.int)(Seed), cgoAllocsUnknown
	__ret := C.MXRandomSeed(cSeed)
	__v := (int32)(__ret)
	return __v
}

// NotifyShutdown function as declared in mxnet/c_api.h:179
func NotifyShutdown() int32 {
	__ret := C.MXNotifyShutdown()
	__v := (int32)(__ret)
	return __v
}

// SetProfilerConfig function as declared in mxnet/c_api.h:188
func SetProfilerConfig(Mode int32, Filename string) int32 {
	cMode, _ := (C.int)(Mode), cgoAllocsUnknown
	Filename = safeString(Filename)
	cFilename, _ := unpackPCharString(Filename)
	__ret := C.MXSetProfilerConfig(cMode, cFilename)
	runtime.KeepAlive(Filename)
	__v := (int32)(__ret)
	return __v
}

// SetProfilerState function as declared in mxnet/c_api.h:196
func SetProfilerState(State int32) int32 {
	cState, _ := (C.int)(State), cgoAllocsUnknown
	__ret := C.MXSetProfilerState(cState)
	__v := (int32)(__ret)
	return __v
}

// DumpProfile function as declared in mxnet/c_api.h:199
func DumpProfile() int32 {
	__ret := C.MXDumpProfile()
	__v := (int32)(__ret)
	return __v
}

// SetNumOMPThreads function as declared in mxnet/c_api.h:202
func SetNumOMPThreads(ThreadNum int32) int32 {
	cThreadNum, _ := (C.int)(ThreadNum), cgoAllocsUnknown
	__ret := C.MXSetNumOMPThreads(cThreadNum)
	__v := (int32)(__ret)
	return __v
}

// NDArrayCreateNone function as declared in mxnet/c_api.h:214
func NDArrayCreateNone(Out []NDArrayHandle) int32 {
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayCreateNone(cOut)
	__v := (int32)(__ret)
	return __v
}

// NDArrayCreate function as declared in mxnet/c_api.h:226
func NDArrayCreate(Shape []uint32, Ndim uint32, DevType int32, DevId int32, DelayAlloc int32, Out []NDArrayHandle) int32 {
	cShape, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Shape)).Data)), cgoAllocsUnknown
	cNdim, _ := (C.mx_uint)(Ndim), cgoAllocsUnknown
	cDevType, _ := (C.int)(DevType), cgoAllocsUnknown
	cDevId, _ := (C.int)(DevId), cgoAllocsUnknown
	cDelayAlloc, _ := (C.int)(DelayAlloc), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayCreate(cShape, cNdim, cDevType, cDevId, cDelayAlloc, cOut)
	__v := (int32)(__ret)
	return __v
}

// NDArrayCreateEx function as declared in mxnet/c_api.h:245
func NDArrayCreateEx(Shape []uint32, Ndim uint32, DevType int32, DevId int32, DelayAlloc int32, Dtype int32, Out []NDArrayHandle) int32 {
	cShape, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Shape)).Data)), cgoAllocsUnknown
	cNdim, _ := (C.mx_uint)(Ndim), cgoAllocsUnknown
	cDevType, _ := (C.int)(DevType), cgoAllocsUnknown
	cDevId, _ := (C.int)(DevId), cgoAllocsUnknown
	cDelayAlloc, _ := (C.int)(DelayAlloc), cgoAllocsUnknown
	cDtype, _ := (C.int)(Dtype), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayCreateEx(cShape, cNdim, cDevType, cDevId, cDelayAlloc, cDtype, cOut)
	__v := (int32)(__ret)
	return __v
}

// NDArrayLoadFromRawBytes function as declared in mxnet/c_api.h:259
func NDArrayLoadFromRawBytes(Buf unsafe.Pointer, Size uint, Out []NDArrayHandle) int32 {
	cBuf, _ := (unsafe.Pointer)(unsafe.Pointer(Buf)), cgoAllocsUnknown
	cSize, _ := (C.size_t)(Size), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayLoadFromRawBytes(cBuf, cSize, cOut)
	__v := (int32)(__ret)
	return __v
}

// NDArraySaveRawBytes function as declared in mxnet/c_api.h:269
func NDArraySaveRawBytes(Handle NDArrayHandle, OutSize []uint, OutBuf []string) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cOutSize, _ := (*C.size_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutBuf, _ := unpackArgSString(OutBuf)
	__ret := C.MXNDArraySaveRawBytes(cHandle, cOutSize, cOutBuf)
	packSString(OutBuf, cOutBuf)
	__v := (int32)(__ret)
	return __v
}

// NDArraySave function as declared in mxnet/c_api.h:280
func NDArraySave(Fname string, NumArgs uint32, Args []NDArrayHandle, Keys []string) int32 {
	Fname = safeString(Fname)
	cFname, _ := unpackPCharString(Fname)
	cNumArgs, _ := (C.mx_uint)(NumArgs), cgoAllocsUnknown
	cArgs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Args)).Data)), cgoAllocsUnknown
	cKeys, _ := unpackArgSString(Keys)
	__ret := C.MXNDArraySave(cFname, cNumArgs, cArgs, cKeys)
	packSString(Keys, cKeys)
	runtime.KeepAlive(Fname)
	__v := (int32)(__ret)
	return __v
}

// NDArrayLoad function as declared in mxnet/c_api.h:293
func NDArrayLoad(Fname string, OutSize []uint32, OutArr [][]NDArrayHandle, OutNameSize []uint32, OutNames [][]string) int32 {
	Fname = safeString(Fname)
	cFname, _ := unpackPCharString(Fname)
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutArr, _ := unpackArgSSNDArrayHandle(OutArr)
	cOutNameSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutNameSize)).Data)), cgoAllocsUnknown
	cOutNames, _ := unpackArgSSString(OutNames)
	__ret := C.MXNDArrayLoad(cFname, cOutSize, cOutArr, cOutNameSize, cOutNames)
	packSSString(OutNames, cOutNames)
	packSSNDArrayHandle(OutArr, cOutArr)
	runtime.KeepAlive(Fname)
	__v := (int32)(__ret)
	return __v
}

// NDArraySyncCopyFromCPU function as declared in mxnet/c_api.h:309
func NDArraySyncCopyFromCPU(Handle NDArrayHandle, Data unsafe.Pointer, Size uint) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cData, _ := (unsafe.Pointer)(unsafe.Pointer(Data)), cgoAllocsUnknown
	cSize, _ := (C.size_t)(Size), cgoAllocsUnknown
	__ret := C.MXNDArraySyncCopyFromCPU(cHandle, cData, cSize)
	__v := (int32)(__ret)
	return __v
}

// NDArraySyncCopyToCPU function as declared in mxnet/c_api.h:323
func NDArraySyncCopyToCPU(Handle NDArrayHandle, Data unsafe.Pointer, Size uint) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cData, _ := (unsafe.Pointer)(unsafe.Pointer(Data)), cgoAllocsUnknown
	cSize, _ := (C.size_t)(Size), cgoAllocsUnknown
	__ret := C.MXNDArraySyncCopyToCPU(cHandle, cData, cSize)
	__v := (int32)(__ret)
	return __v
}

// NDArrayWaitToRead function as declared in mxnet/c_api.h:332
func NDArrayWaitToRead(Handle NDArrayHandle) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXNDArrayWaitToRead(cHandle)
	__v := (int32)(__ret)
	return __v
}

// NDArrayWaitToWrite function as declared in mxnet/c_api.h:339
func NDArrayWaitToWrite(Handle NDArrayHandle) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXNDArrayWaitToWrite(cHandle)
	__v := (int32)(__ret)
	return __v
}

// NDArrayWaitAll function as declared in mxnet/c_api.h:345
func NDArrayWaitAll() int32 {
	__ret := C.MXNDArrayWaitAll()
	__v := (int32)(__ret)
	return __v
}

// NDArrayFree function as declared in mxnet/c_api.h:351
func NDArrayFree(Handle NDArrayHandle) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXNDArrayFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// NDArraySlice function as declared in mxnet/c_api.h:360
func NDArraySlice(Handle NDArrayHandle, SliceBegin uint32, SliceEnd uint32, Out []NDArrayHandle) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cSliceBegin, _ := (C.mx_uint)(SliceBegin), cgoAllocsUnknown
	cSliceEnd, _ := (C.mx_uint)(SliceEnd), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArraySlice(cHandle, cSliceBegin, cSliceEnd, cOut)
	__v := (int32)(__ret)
	return __v
}

// NDArrayAt function as declared in mxnet/c_api.h:371
func NDArrayAt(Handle NDArrayHandle, Idx uint32, Out []NDArrayHandle) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cIdx, _ := (C.mx_uint)(Idx), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayAt(cHandle, cIdx, cOut)
	__v := (int32)(__ret)
	return __v
}

// NDArrayReshape function as declared in mxnet/c_api.h:382
func NDArrayReshape(Handle NDArrayHandle, Ndim int32, Dims []int32, Out []NDArrayHandle) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cNdim, _ := (C.int)(Ndim), cgoAllocsUnknown
	cDims, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Dims)).Data)), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayReshape(cHandle, cNdim, cDims, cOut)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetShape function as declared in mxnet/c_api.h:393
func NDArrayGetShape(Handle NDArrayHandle, OutDim []uint32, OutPdata [][]uint32) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cOutDim, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutDim)).Data)), cgoAllocsUnknown
	cOutPdata, _ := unpackArgSSUUint32(OutPdata)
	__ret := C.MXNDArrayGetShape(cHandle, cOutDim, cOutPdata)
	packSSUUint32(OutPdata, cOutPdata)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetData function as declared in mxnet/c_api.h:402
func NDArrayGetData(Handle NDArrayHandle, OutPdata []unsafe.Pointer) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cOutPdata, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutPdata)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayGetData(cHandle, cOutPdata)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetDType function as declared in mxnet/c_api.h:410
func NDArrayGetDType(Handle NDArrayHandle, OutDtype []int32) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cOutDtype, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutDtype)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayGetDType(cHandle, cOutDtype)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetContext function as declared in mxnet/c_api.h:419
func NDArrayGetContext(Handle NDArrayHandle, OutDevType []int32, OutDevId []int32) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cOutDevType, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutDevType)).Data)), cgoAllocsUnknown
	cOutDevId, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutDevId)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayGetContext(cHandle, cOutDevType, cOutDevId)
	__v := (int32)(__ret)
	return __v
}

// NDArrayDetach function as declared in mxnet/c_api.h:427
func NDArrayDetach(Handle NDArrayHandle, Out []NDArrayHandle) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayDetach(cHandle, cOut)
	__v := (int32)(__ret)
	return __v
}

// NDArraySetGradState function as declared in mxnet/c_api.h:434
func NDArraySetGradState(Handle NDArrayHandle, State int32) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cState, _ := (C.int)(State), cgoAllocsUnknown
	__ret := C.MXNDArraySetGradState(cHandle, cState)
	__v := (int32)(__ret)
	return __v
}

// NDArrayGetGradState function as declared in mxnet/c_api.h:441
func NDArrayGetGradState(Handle NDArrayHandle, Out []int32) int32 {
	cHandle, _ := (C.NDArrayHandle)(Handle), cgoAllocsUnknown
	cOut, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXNDArrayGetGradState(cHandle, cOut)
	__v := (int32)(__ret)
	return __v
}

// ListFunctions function as declared in mxnet/c_api.h:452
func ListFunctions(OutSize []uint32, OutArray *unsafe.Pointer) int32 {
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutArray, _ := (**C.FunctionHandle)(unsafe.Pointer(OutArray)), cgoAllocsUnknown
	__ret := C.MXListFunctions(cOutSize, cOutArray)
	__v := (int32)(__ret)
	return __v
}

// GetFunction function as declared in mxnet/c_api.h:460
func GetFunction(Name string, Out unsafe.Pointer) int32 {
	Name = safeString(Name)
	cName, _ := unpackPCharString(Name)
	cOut, _ := (*C.FunctionHandle)(unsafe.Pointer(Out)), cgoAllocsUnknown
	__ret := C.MXGetFunction(cName, cOut)
	runtime.KeepAlive(Name)
	__v := (int32)(__ret)
	return __v
}

// FuncGetInfo function as declared in mxnet/c_api.h:474
func FuncGetInfo(Fun unsafe.Pointer, Name []string, Description []string, NumArgs []uint32, ArgNames [][]string, ArgTypeInfos [][]string, ArgDescriptions [][]string, ReturnType []string) int32 {
	cFun, _ := (C.FunctionHandle)(Fun), cgoAllocsUnknown
	cName, _ := unpackArgSString(Name)
	cDescription, _ := unpackArgSString(Description)
	cNumArgs, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumArgs)).Data)), cgoAllocsUnknown
	cArgNames, _ := unpackArgSSString(ArgNames)
	cArgTypeInfos, _ := unpackArgSSString(ArgTypeInfos)
	cArgDescriptions, _ := unpackArgSSString(ArgDescriptions)
	cReturnType, _ := unpackArgSString(ReturnType)
	__ret := C.MXFuncGetInfo(cFun, cName, cDescription, cNumArgs, cArgNames, cArgTypeInfos, cArgDescriptions, cReturnType)
	packSString(ReturnType, cReturnType)
	packSSString(ArgDescriptions, cArgDescriptions)
	packSSString(ArgTypeInfos, cArgTypeInfos)
	packSSString(ArgNames, cArgNames)
	packSString(Description, cDescription)
	packSString(Name, cName)
	__v := (int32)(__ret)
	return __v
}

// FuncDescribe function as declared in mxnet/c_api.h:492
func FuncDescribe(Fun unsafe.Pointer, NumUseVars []uint32, NumScalars []uint32, NumMutateVars []uint32, TypeMask []int32) int32 {
	cFun, _ := (C.FunctionHandle)(Fun), cgoAllocsUnknown
	cNumUseVars, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumUseVars)).Data)), cgoAllocsUnknown
	cNumScalars, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumScalars)).Data)), cgoAllocsUnknown
	cNumMutateVars, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumMutateVars)).Data)), cgoAllocsUnknown
	cTypeMask, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&TypeMask)).Data)), cgoAllocsUnknown
	__ret := C.MXFuncDescribe(cFun, cNumUseVars, cNumScalars, cNumMutateVars, cTypeMask)
	__v := (int32)(__ret)
	return __v
}

// FuncInvoke function as declared in mxnet/c_api.h:507
func FuncInvoke(Fun unsafe.Pointer, UseVars []NDArrayHandle, ScalarArgs []float32, MutateVars []NDArrayHandle) int32 {
	cFun, _ := (C.FunctionHandle)(Fun), cgoAllocsUnknown
	cUseVars, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&UseVars)).Data)), cgoAllocsUnknown
	cScalarArgs, _ := (*C.mx_float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ScalarArgs)).Data)), cgoAllocsUnknown
	cMutateVars, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&MutateVars)).Data)), cgoAllocsUnknown
	__ret := C.MXFuncInvoke(cFun, cUseVars, cScalarArgs, cMutateVars)
	__v := (int32)(__ret)
	return __v
}

// FuncInvokeEx function as declared in mxnet/c_api.h:524
func FuncInvokeEx(Fun unsafe.Pointer, UseVars []NDArrayHandle, ScalarArgs []float32, MutateVars []NDArrayHandle, NumParams int32, ParamKeys [][]byte, ParamVals [][]byte) int32 {
	cFun, _ := (C.FunctionHandle)(Fun), cgoAllocsUnknown
	cUseVars, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&UseVars)).Data)), cgoAllocsUnknown
	cScalarArgs, _ := (*C.mx_float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ScalarArgs)).Data)), cgoAllocsUnknown
	cMutateVars, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&MutateVars)).Data)), cgoAllocsUnknown
	cNumParams, _ := (C.int)(NumParams), cgoAllocsUnknown
	cParamKeys, _ := unpackArgSSByte(ParamKeys)
	cParamVals, _ := unpackArgSSByte(ParamVals)
	__ret := C.MXFuncInvokeEx(cFun, cUseVars, cScalarArgs, cMutateVars, cNumParams, cParamKeys, cParamVals)
	packSSByte(ParamVals, cParamVals)
	packSSByte(ParamKeys, cParamKeys)
	__v := (int32)(__ret)
	return __v
}

// ImperativeInvoke function as declared in mxnet/c_api.h:543
func ImperativeInvoke(Creator unsafe.Pointer, NumInputs int32, Inputs []NDArrayHandle, NumOutputs []int32, Outputs [][]NDArrayHandle, NumParams int32, ParamKeys []string, ParamVals []string) int32 {
	cCreator, _ := (C.AtomicSymbolCreator)(Creator), cgoAllocsUnknown
	cNumInputs, _ := (C.int)(NumInputs), cgoAllocsUnknown
	cInputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Inputs)).Data)), cgoAllocsUnknown
	cNumOutputs, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumOutputs)).Data)), cgoAllocsUnknown
	cOutputs, _ := unpackArgSSNDArrayHandle(Outputs)
	cNumParams, _ := (C.int)(NumParams), cgoAllocsUnknown
	cParamKeys, _ := unpackArgSString(ParamKeys)
	cParamVals, _ := unpackArgSString(ParamVals)
	__ret := C.MXImperativeInvoke(cCreator, cNumInputs, cInputs, cNumOutputs, cOutputs, cNumParams, cParamKeys, cParamVals)
	packSString(ParamVals, cParamVals)
	packSString(ParamKeys, cParamKeys)
	packSSNDArrayHandle(Outputs, cOutputs)
	__v := (int32)(__ret)
	return __v
}

// AutogradSetIsTraining function as declared in mxnet/c_api.h:557
func AutogradSetIsTraining(IsTraining int32, Prev []int32) int32 {
	cIsTraining, _ := (C.int)(IsTraining), cgoAllocsUnknown
	cPrev, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Prev)).Data)), cgoAllocsUnknown
	__ret := C.MXAutogradSetIsTraining(cIsTraining, cPrev)
	__v := (int32)(__ret)
	return __v
}

// AutogradMarkVariables function as declared in mxnet/c_api.h:564
func AutogradMarkVariables(NumVar uint32, VarHandles []NDArrayHandle, ReqsArray []uint32, GradHandles []NDArrayHandle) int32 {
	cNumVar, _ := (C.mx_uint)(NumVar), cgoAllocsUnknown
	cVarHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&VarHandles)).Data)), cgoAllocsUnknown
	cReqsArray, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ReqsArray)).Data)), cgoAllocsUnknown
	cGradHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&GradHandles)).Data)), cgoAllocsUnknown
	__ret := C.MXAutogradMarkVariables(cNumVar, cVarHandles, cReqsArray, cGradHandles)
	__v := (int32)(__ret)
	return __v
}

// AutogradComputeGradient function as declared in mxnet/c_api.h:574
func AutogradComputeGradient(NumOutput uint32, OutputHandles []NDArrayHandle) int32 {
	cNumOutput, _ := (C.mx_uint)(NumOutput), cgoAllocsUnknown
	cOutputHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutputHandles)).Data)), cgoAllocsUnknown
	__ret := C.MXAutogradComputeGradient(cNumOutput, cOutputHandles)
	__v := (int32)(__ret)
	return __v
}

// AutogradBackward function as declared in mxnet/c_api.h:584
func AutogradBackward(NumOutput uint32, OutputHandles []NDArrayHandle, OgradHandles []NDArrayHandle, RetainGraph int32) int32 {
	cNumOutput, _ := (C.mx_uint)(NumOutput), cgoAllocsUnknown
	cOutputHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutputHandles)).Data)), cgoAllocsUnknown
	cOgradHandles, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OgradHandles)).Data)), cgoAllocsUnknown
	cRetainGraph, _ := (C.int)(RetainGraph), cgoAllocsUnknown
	__ret := C.MXAutogradBackward(cNumOutput, cOutputHandles, cOgradHandles, cRetainGraph)
	__v := (int32)(__ret)
	return __v
}

// CachedCreateOp function as declared in mxnet/c_api.h:591
func CachedCreateOp(Creator unsafe.Pointer, NumInputs int32, NumParams int32, ParamKeys []string, ParamVals []string, Out []unsafe.Pointer) int32 {
	cCreator, _ := (C.AtomicSymbolCreator)(Creator), cgoAllocsUnknown
	cNumInputs, _ := (C.int)(NumInputs), cgoAllocsUnknown
	cNumParams, _ := (C.int)(NumParams), cgoAllocsUnknown
	cParamKeys, _ := unpackArgSString(ParamKeys)
	cParamVals, _ := unpackArgSString(ParamVals)
	cOut, _ := (*C.CachedOpHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXCachedCreateOp(cCreator, cNumInputs, cNumParams, cParamKeys, cParamVals, cOut)
	packSString(ParamVals, cParamVals)
	packSString(ParamKeys, cParamKeys)
	__v := (int32)(__ret)
	return __v
}

// CachedFree function as declared in mxnet/c_api.h:600
func CachedFree(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.CachedOpHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXCachedFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// CachedInvoke function as declared in mxnet/c_api.h:604
func CachedInvoke(Handle unsafe.Pointer, NumInputs int32, Inputs []NDArrayHandle, NumOutputs []int32, Outputs [][]NDArrayHandle) int32 {
	cHandle, _ := (C.CachedOpHandle)(Handle), cgoAllocsUnknown
	cNumInputs, _ := (C.int)(NumInputs), cgoAllocsUnknown
	cInputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Inputs)).Data)), cgoAllocsUnknown
	cNumOutputs, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumOutputs)).Data)), cgoAllocsUnknown
	cOutputs, _ := unpackArgSSNDArrayHandle(Outputs)
	__ret := C.MXCachedInvoke(cHandle, cNumInputs, cInputs, cNumOutputs, cOutputs)
	packSSNDArrayHandle(Outputs, cOutputs)
	__v := (int32)(__ret)
	return __v
}

// ListAllOpNames function as declared in mxnet/c_api.h:618
func ListAllOpNames(OutSize []uint32, OutArray [][]string) int32 {
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutArray, _ := unpackArgSSString(OutArray)
	__ret := C.MXListAllOpNames(cOutSize, cOutArray)
	packSSString(OutArray, cOutArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolListAtomicSymbolCreators function as declared in mxnet/c_api.h:626
func SymbolListAtomicSymbolCreators(OutSize []uint32, OutArray *unsafe.Pointer) int32 {
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutArray, _ := (**C.AtomicSymbolCreator)(unsafe.Pointer(OutArray)), cgoAllocsUnknown
	__ret := C.MXSymbolListAtomicSymbolCreators(cOutSize, cOutArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetAtomicSymbolName function as declared in mxnet/c_api.h:634
func SymbolGetAtomicSymbolName(Creator unsafe.Pointer, Name []string) int32 {
	cCreator, _ := (C.AtomicSymbolCreator)(Creator), cgoAllocsUnknown
	cName, _ := unpackArgSString(Name)
	__ret := C.MXSymbolGetAtomicSymbolName(cCreator, cName)
	packSString(Name, cName)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetAtomicSymbolInfo function as declared in mxnet/c_api.h:653
func SymbolGetAtomicSymbolInfo(Creator unsafe.Pointer, Name []string, Description []string, NumArgs []uint32, ArgNames [][]string, ArgTypeInfos [][]string, ArgDescriptions [][]string, KeyVarNumArgs []string, ReturnType []string) int32 {
	cCreator, _ := (C.AtomicSymbolCreator)(Creator), cgoAllocsUnknown
	cName, _ := unpackArgSString(Name)
	cDescription, _ := unpackArgSString(Description)
	cNumArgs, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumArgs)).Data)), cgoAllocsUnknown
	cArgNames, _ := unpackArgSSString(ArgNames)
	cArgTypeInfos, _ := unpackArgSSString(ArgTypeInfos)
	cArgDescriptions, _ := unpackArgSSString(ArgDescriptions)
	cKeyVarNumArgs, _ := unpackArgSString(KeyVarNumArgs)
	cReturnType, _ := unpackArgSString(ReturnType)
	__ret := C.MXSymbolGetAtomicSymbolInfo(cCreator, cName, cDescription, cNumArgs, cArgNames, cArgTypeInfos, cArgDescriptions, cKeyVarNumArgs, cReturnType)
	packSString(ReturnType, cReturnType)
	packSString(KeyVarNumArgs, cKeyVarNumArgs)
	packSSString(ArgDescriptions, cArgDescriptions)
	packSSString(ArgTypeInfos, cArgTypeInfos)
	packSSString(ArgNames, cArgNames)
	packSString(Description, cDescription)
	packSString(Name, cName)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateAtomicSymbol function as declared in mxnet/c_api.h:671
func SymbolCreateAtomicSymbol(Creator unsafe.Pointer, NumParam uint32, Keys []string, Vals []string, Out []unsafe.Pointer) int32 {
	cCreator, _ := (C.AtomicSymbolCreator)(Creator), cgoAllocsUnknown
	cNumParam, _ := (C.mx_uint)(NumParam), cgoAllocsUnknown
	cKeys, _ := unpackArgSString(Keys)
	cVals, _ := unpackArgSString(Vals)
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateAtomicSymbol(cCreator, cNumParam, cKeys, cVals, cOut)
	packSString(Vals, cVals)
	packSString(Keys, cKeys)
	__v := (int32)(__ret)
	return __v
}

// CachedCreateSymbol function as declared in mxnet/c_api.h:684
func CachedCreateSymbol(Handle unsafe.Pointer, Name string, NumArgs uint32, Args []unsafe.Pointer, Out []unsafe.Pointer) int32 {
	cHandle, _ := (C.CachedOpHandle)(Handle), cgoAllocsUnknown
	Name = safeString(Name)
	cName, _ := unpackPCharString(Name)
	cNumArgs, _ := (C.mx_uint)(NumArgs), cgoAllocsUnknown
	cArgs, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Args)).Data)), cgoAllocsUnknown
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXCachedCreateSymbol(cHandle, cName, cNumArgs, cArgs, cOut)
	runtime.KeepAlive(Name)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateVariable function as declared in mxnet/c_api.h:695
func SymbolCreateVariable(Name string, Out []unsafe.Pointer) int32 {
	Name = safeString(Name)
	cName, _ := unpackPCharString(Name)
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateVariable(cName, cOut)
	runtime.KeepAlive(Name)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateGroup function as declared in mxnet/c_api.h:703
func SymbolCreateGroup(NumSymbols uint32, Symbols []unsafe.Pointer, Out []unsafe.Pointer) int32 {
	cNumSymbols, _ := (C.mx_uint)(NumSymbols), cgoAllocsUnknown
	cSymbols, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Symbols)).Data)), cgoAllocsUnknown
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateGroup(cNumSymbols, cSymbols, cOut)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateFromFile function as declared in mxnet/c_api.h:712
func SymbolCreateFromFile(Fname string, Out []unsafe.Pointer) int32 {
	Fname = safeString(Fname)
	cFname, _ := unpackPCharString(Fname)
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateFromFile(cFname, cOut)
	runtime.KeepAlive(Fname)
	__v := (int32)(__ret)
	return __v
}

// SymbolCreateFromJSON function as declared in mxnet/c_api.h:719
func SymbolCreateFromJSON(Json string, Out []unsafe.Pointer) int32 {
	Json = safeString(Json)
	cJson, _ := unpackPCharString(Json)
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCreateFromJSON(cJson, cOut)
	runtime.KeepAlive(Json)
	__v := (int32)(__ret)
	return __v
}

// SymbolSaveToFile function as declared in mxnet/c_api.h:726
func SymbolSaveToFile(Symbol unsafe.Pointer, Fname string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	Fname = safeString(Fname)
	cFname, _ := unpackPCharString(Fname)
	__ret := C.MXSymbolSaveToFile(cSymbol, cFname)
	runtime.KeepAlive(Fname)
	__v := (int32)(__ret)
	return __v
}

// SymbolSaveToJSON function as declared in mxnet/c_api.h:733
func SymbolSaveToJSON(Symbol unsafe.Pointer, OutJson []string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOutJson, _ := unpackArgSString(OutJson)
	__ret := C.MXSymbolSaveToJSON(cSymbol, cOutJson)
	packSString(OutJson, cOutJson)
	__v := (int32)(__ret)
	return __v
}

// SymbolFree function as declared in mxnet/c_api.h:739
func SymbolFree(Symbol unsafe.Pointer) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	__ret := C.MXSymbolFree(cSymbol)
	__v := (int32)(__ret)
	return __v
}

// SymbolCopy function as declared in mxnet/c_api.h:746
func SymbolCopy(Symbol unsafe.Pointer, Out []unsafe.Pointer) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCopy(cSymbol, cOut)
	__v := (int32)(__ret)
	return __v
}

// SymbolPrint function as declared in mxnet/c_api.h:753
func SymbolPrint(Symbol unsafe.Pointer, OutStr []string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOutStr, _ := unpackArgSString(OutStr)
	__ret := C.MXSymbolPrint(cSymbol, cOutStr)
	packSString(OutStr, cOutStr)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetName function as declared in mxnet/c_api.h:761
func SymbolGetName(Symbol unsafe.Pointer, Out []string, Success []int32) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOut, _ := unpackArgSString(Out)
	cSuccess, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Success)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetName(cSymbol, cOut, cSuccess)
	packSString(Out, cOut)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetAttr function as declared in mxnet/c_api.h:772
func SymbolGetAttr(Symbol unsafe.Pointer, Key string, Out []string, Success []int32) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	Key = safeString(Key)
	cKey, _ := unpackPCharString(Key)
	cOut, _ := unpackArgSString(Out)
	cSuccess, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Success)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetAttr(cSymbol, cKey, cOut, cSuccess)
	packSString(Out, cOut)
	runtime.KeepAlive(Key)
	__v := (int32)(__ret)
	return __v
}

// SymbolSetAttr function as declared in mxnet/c_api.h:792
func SymbolSetAttr(Symbol unsafe.Pointer, Key string, Value string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	Key = safeString(Key)
	cKey, _ := unpackPCharString(Key)
	Value = safeString(Value)
	cValue, _ := unpackPCharString(Value)
	__ret := C.MXSymbolSetAttr(cSymbol, cKey, cValue)
	runtime.KeepAlive(Value)
	runtime.KeepAlive(Key)
	__v := (int32)(__ret)
	return __v
}

// SymbolListAttr function as declared in mxnet/c_api.h:802
func SymbolListAttr(Symbol unsafe.Pointer, OutSize []uint32, Out [][]string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOut, _ := unpackArgSSString(Out)
	__ret := C.MXSymbolListAttr(cSymbol, cOutSize, cOut)
	packSSString(Out, cOut)
	__v := (int32)(__ret)
	return __v
}

// SymbolListAttrShallow function as declared in mxnet/c_api.h:812
func SymbolListAttrShallow(Symbol unsafe.Pointer, OutSize []uint32, Out [][]string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOut, _ := unpackArgSSString(Out)
	__ret := C.MXSymbolListAttrShallow(cSymbol, cOutSize, cOut)
	packSSString(Out, cOut)
	__v := (int32)(__ret)
	return __v
}

// SymbolListArguments function as declared in mxnet/c_api.h:822
func SymbolListArguments(Symbol unsafe.Pointer, OutSize []uint32, OutStrArray [][]string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutStrArray, _ := unpackArgSSString(OutStrArray)
	__ret := C.MXSymbolListArguments(cSymbol, cOutSize, cOutStrArray)
	packSSString(OutStrArray, cOutStrArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolListOutputs function as declared in mxnet/c_api.h:832
func SymbolListOutputs(Symbol unsafe.Pointer, OutSize []uint32, OutStrArray [][]string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutStrArray, _ := unpackArgSSString(OutStrArray)
	__ret := C.MXSymbolListOutputs(cSymbol, cOutSize, cOutStrArray)
	packSSString(OutStrArray, cOutStrArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetInternals function as declared in mxnet/c_api.h:841
func SymbolGetInternals(Symbol unsafe.Pointer, Out []unsafe.Pointer) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetInternals(cSymbol, cOut)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetChildren function as declared in mxnet/c_api.h:849
func SymbolGetChildren(Symbol unsafe.Pointer, Out []unsafe.Pointer) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetChildren(cSymbol, cOut)
	__v := (int32)(__ret)
	return __v
}

// SymbolGetOutput function as declared in mxnet/c_api.h:858
func SymbolGetOutput(Symbol unsafe.Pointer, Index uint32, Out []unsafe.Pointer) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cIndex, _ := (C.mx_uint)(Index), cgoAllocsUnknown
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGetOutput(cSymbol, cIndex, cOut)
	__v := (int32)(__ret)
	return __v
}

// SymbolListAuxiliaryStates function as declared in mxnet/c_api.h:868
func SymbolListAuxiliaryStates(Symbol unsafe.Pointer, OutSize []uint32, OutStrArray [][]string) int32 {
	cSymbol, _ := (C.SymbolHandle)(Symbol), cgoAllocsUnknown
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutStrArray, _ := unpackArgSSString(OutStrArray)
	__ret := C.MXSymbolListAuxiliaryStates(cSymbol, cOutSize, cOutStrArray)
	packSSString(OutStrArray, cOutStrArray)
	__v := (int32)(__ret)
	return __v
}

// SymbolCompose function as declared in mxnet/c_api.h:885
func SymbolCompose(Sym unsafe.Pointer, Name string, NumArgs uint32, Keys []string, Args []unsafe.Pointer) int32 {
	cSym, _ := (C.SymbolHandle)(Sym), cgoAllocsUnknown
	Name = safeString(Name)
	cName, _ := unpackPCharString(Name)
	cNumArgs, _ := (C.mx_uint)(NumArgs), cgoAllocsUnknown
	cKeys, _ := unpackArgSString(Keys)
	cArgs, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Args)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolCompose(cSym, cName, cNumArgs, cKeys, cArgs)
	packSString(Keys, cKeys)
	runtime.KeepAlive(Name)
	__v := (int32)(__ret)
	return __v
}

// SymbolGrad function as declared in mxnet/c_api.h:899
func SymbolGrad(Sym unsafe.Pointer, NumWrt uint32, Wrt []string, Out []unsafe.Pointer) int32 {
	cSym, _ := (C.SymbolHandle)(Sym), cgoAllocsUnknown
	cNumWrt, _ := (C.mx_uint)(NumWrt), cgoAllocsUnknown
	cWrt, _ := unpackArgSString(Wrt)
	cOut, _ := (*C.SymbolHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolGrad(cSym, cNumWrt, cWrt, cOut)
	packSString(Wrt, cWrt)
	__v := (int32)(__ret)
	return __v
}

// SymbolInferShape function as declared in mxnet/c_api.h:925
func SymbolInferShape(Sym unsafe.Pointer, NumArgs uint32, Keys []string, ArgIndPtr []uint32, ArgShapeData []uint32, InShapeSize []uint32, InShapeNdim [][]uint32, InShapeData [][][]uint32, OutShapeSize []uint32, OutShapeNdim [][]uint32, OutShapeData [][][]uint32, AuxShapeSize []uint32, AuxShapeNdim [][]uint32, AuxShapeData [][][]uint32, Complete []int32) int32 {
	cSym, _ := (C.SymbolHandle)(Sym), cgoAllocsUnknown
	cNumArgs, _ := (C.mx_uint)(NumArgs), cgoAllocsUnknown
	cKeys, _ := unpackArgSString(Keys)
	cArgIndPtr, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ArgIndPtr)).Data)), cgoAllocsUnknown
	cArgShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ArgShapeData)).Data)), cgoAllocsUnknown
	cInShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InShapeSize)).Data)), cgoAllocsUnknown
	cInShapeNdim, _ := unpackArgSSUUint32(InShapeNdim)
	cInShapeData, _ := unpackArgSSSUUint32(InShapeData)
	cOutShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutShapeSize)).Data)), cgoAllocsUnknown
	cOutShapeNdim, _ := unpackArgSSUUint32(OutShapeNdim)
	cOutShapeData, _ := unpackArgSSSUUint32(OutShapeData)
	cAuxShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&AuxShapeSize)).Data)), cgoAllocsUnknown
	cAuxShapeNdim, _ := unpackArgSSUUint32(AuxShapeNdim)
	cAuxShapeData, _ := unpackArgSSSUUint32(AuxShapeData)
	cComplete, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Complete)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolInferShape(cSym, cNumArgs, cKeys, cArgIndPtr, cArgShapeData, cInShapeSize, cInShapeNdim, cInShapeData, cOutShapeSize, cOutShapeNdim, cOutShapeData, cAuxShapeSize, cAuxShapeNdim, cAuxShapeData, cComplete)
	packSSSUUint32(AuxShapeData, cAuxShapeData)
	packSSUUint32(AuxShapeNdim, cAuxShapeNdim)
	packSSSUUint32(OutShapeData, cOutShapeData)
	packSSUUint32(OutShapeNdim, cOutShapeNdim)
	packSSSUUint32(InShapeData, cInShapeData)
	packSSUUint32(InShapeNdim, cInShapeNdim)
	packSString(Keys, cKeys)
	__v := (int32)(__ret)
	return __v
}

// SymbolInferShapePartial function as declared in mxnet/c_api.h:964
func SymbolInferShapePartial(Sym unsafe.Pointer, NumArgs uint32, Keys []string, ArgIndPtr []uint32, ArgShapeData []uint32, InShapeSize []uint32, InShapeNdim [][]uint32, InShapeData [][][]uint32, OutShapeSize []uint32, OutShapeNdim [][]uint32, OutShapeData [][][]uint32, AuxShapeSize []uint32, AuxShapeNdim [][]uint32, AuxShapeData [][][]uint32, Complete []int32) int32 {
	cSym, _ := (C.SymbolHandle)(Sym), cgoAllocsUnknown
	cNumArgs, _ := (C.mx_uint)(NumArgs), cgoAllocsUnknown
	cKeys, _ := unpackArgSString(Keys)
	cArgIndPtr, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ArgIndPtr)).Data)), cgoAllocsUnknown
	cArgShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ArgShapeData)).Data)), cgoAllocsUnknown
	cInShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InShapeSize)).Data)), cgoAllocsUnknown
	cInShapeNdim, _ := unpackArgSSUUint32(InShapeNdim)
	cInShapeData, _ := unpackArgSSSUUint32(InShapeData)
	cOutShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutShapeSize)).Data)), cgoAllocsUnknown
	cOutShapeNdim, _ := unpackArgSSUUint32(OutShapeNdim)
	cOutShapeData, _ := unpackArgSSSUUint32(OutShapeData)
	cAuxShapeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&AuxShapeSize)).Data)), cgoAllocsUnknown
	cAuxShapeNdim, _ := unpackArgSSUUint32(AuxShapeNdim)
	cAuxShapeData, _ := unpackArgSSSUUint32(AuxShapeData)
	cComplete, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Complete)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolInferShapePartial(cSym, cNumArgs, cKeys, cArgIndPtr, cArgShapeData, cInShapeSize, cInShapeNdim, cInShapeData, cOutShapeSize, cOutShapeNdim, cOutShapeData, cAuxShapeSize, cAuxShapeNdim, cAuxShapeData, cComplete)
	packSSSUUint32(AuxShapeData, cAuxShapeData)
	packSSUUint32(AuxShapeNdim, cAuxShapeNdim)
	packSSSUUint32(OutShapeData, cOutShapeData)
	packSSUUint32(OutShapeNdim, cOutShapeNdim)
	packSSSUUint32(InShapeData, cInShapeData)
	packSSUUint32(InShapeNdim, cInShapeNdim)
	packSString(Keys, cKeys)
	__v := (int32)(__ret)
	return __v
}

// SymbolInferType function as declared in mxnet/c_api.h:998
func SymbolInferType(Sym unsafe.Pointer, NumArgs uint32, Keys []string, ArgTypeData []int32, InTypeSize []uint32, InTypeData [][]int32, OutTypeSize []uint32, OutTypeData [][]int32, AuxTypeSize []uint32, AuxTypeData [][]int32, Complete []int32) int32 {
	cSym, _ := (C.SymbolHandle)(Sym), cgoAllocsUnknown
	cNumArgs, _ := (C.mx_uint)(NumArgs), cgoAllocsUnknown
	cKeys, _ := unpackArgSString(Keys)
	cArgTypeData, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ArgTypeData)).Data)), cgoAllocsUnknown
	cInTypeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InTypeSize)).Data)), cgoAllocsUnknown
	cInTypeData, _ := unpackArgSSInt32(InTypeData)
	cOutTypeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutTypeSize)).Data)), cgoAllocsUnknown
	cOutTypeData, _ := unpackArgSSInt32(OutTypeData)
	cAuxTypeSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&AuxTypeSize)).Data)), cgoAllocsUnknown
	cAuxTypeData, _ := unpackArgSSInt32(AuxTypeData)
	cComplete, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Complete)).Data)), cgoAllocsUnknown
	__ret := C.MXSymbolInferType(cSym, cNumArgs, cKeys, cArgTypeData, cInTypeSize, cInTypeData, cOutTypeSize, cOutTypeData, cAuxTypeSize, cAuxTypeData, cComplete)
	packSSInt32(AuxTypeData, cAuxTypeData)
	packSSInt32(OutTypeData, cOutTypeData)
	packSSInt32(InTypeData, cInTypeData)
	packSString(Keys, cKeys)
	__v := (int32)(__ret)
	return __v
}

// ExecutorFree function as declared in mxnet/c_api.h:1017
func ExecutorFree(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.ExecutorHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXExecutorFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// ExecutorPrint function as declared in mxnet/c_api.h:1024
func ExecutorPrint(Handle unsafe.Pointer, OutStr []string) int32 {
	cHandle, _ := (C.ExecutorHandle)(Handle), cgoAllocsUnknown
	cOutStr, _ := unpackArgSString(OutStr)
	__ret := C.MXExecutorPrint(cHandle, cOutStr)
	packSString(OutStr, cOutStr)
	__v := (int32)(__ret)
	return __v
}

// ExecutorForward function as declared in mxnet/c_api.h:1032
func ExecutorForward(Handle unsafe.Pointer, IsTrain int32) int32 {
	cHandle, _ := (C.ExecutorHandle)(Handle), cgoAllocsUnknown
	cIsTrain, _ := (C.int)(IsTrain), cgoAllocsUnknown
	__ret := C.MXExecutorForward(cHandle, cIsTrain)
	__v := (int32)(__ret)
	return __v
}

// ExecutorBackward function as declared in mxnet/c_api.h:1042
func ExecutorBackward(Handle unsafe.Pointer, Len uint32, HeadGrads []NDArrayHandle) int32 {
	cHandle, _ := (C.ExecutorHandle)(Handle), cgoAllocsUnknown
	cLen, _ := (C.mx_uint)(Len), cgoAllocsUnknown
	cHeadGrads, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&HeadGrads)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorBackward(cHandle, cLen, cHeadGrads)
	__v := (int32)(__ret)
	return __v
}

// ExecutorOutputs function as declared in mxnet/c_api.h:1054
func ExecutorOutputs(Handle unsafe.Pointer, OutSize []uint32, Out [][]NDArrayHandle) int32 {
	cHandle, _ := (C.ExecutorHandle)(Handle), cgoAllocsUnknown
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOut, _ := unpackArgSSNDArrayHandle(Out)
	__ret := C.MXExecutorOutputs(cHandle, cOutSize, cOut)
	packSSNDArrayHandle(Out, cOut)
	__v := (int32)(__ret)
	return __v
}

// ExecutorBind function as declared in mxnet/c_api.h:1073
func ExecutorBind(SymbolHandle unsafe.Pointer, DevType int32, DevId int32, Len uint32, InArgs []NDArrayHandle, ArgGradStore []NDArrayHandle, GradReqType []uint32, AuxStatesLen uint32, AuxStates []NDArrayHandle, Out []unsafe.Pointer) int32 {
	cSymbolHandle, _ := (C.SymbolHandle)(SymbolHandle), cgoAllocsUnknown
	cDevType, _ := (C.int)(DevType), cgoAllocsUnknown
	cDevId, _ := (C.int)(DevId), cgoAllocsUnknown
	cLen, _ := (C.mx_uint)(Len), cgoAllocsUnknown
	cInArgs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InArgs)).Data)), cgoAllocsUnknown
	cArgGradStore, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ArgGradStore)).Data)), cgoAllocsUnknown
	cGradReqType, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&GradReqType)).Data)), cgoAllocsUnknown
	cAuxStatesLen, _ := (C.mx_uint)(AuxStatesLen), cgoAllocsUnknown
	cAuxStates, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&AuxStates)).Data)), cgoAllocsUnknown
	cOut, _ := (*C.ExecutorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorBind(cSymbolHandle, cDevType, cDevId, cLen, cInArgs, cArgGradStore, cGradReqType, cAuxStatesLen, cAuxStates, cOut)
	__v := (int32)(__ret)
	return __v
}

// ExecutorBindX function as declared in mxnet/c_api.h:1104
func ExecutorBindX(SymbolHandle unsafe.Pointer, DevType int32, DevId int32, NumMapKeys uint32, MapKeys []string, MapDevTypes []int32, MapDevIds []int32, Len uint32, InArgs []NDArrayHandle, ArgGradStore []NDArrayHandle, GradReqType []uint32, AuxStatesLen uint32, AuxStates []NDArrayHandle, Out []unsafe.Pointer) int32 {
	cSymbolHandle, _ := (C.SymbolHandle)(SymbolHandle), cgoAllocsUnknown
	cDevType, _ := (C.int)(DevType), cgoAllocsUnknown
	cDevId, _ := (C.int)(DevId), cgoAllocsUnknown
	cNumMapKeys, _ := (C.mx_uint)(NumMapKeys), cgoAllocsUnknown
	cMapKeys, _ := unpackArgSString(MapKeys)
	cMapDevTypes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&MapDevTypes)).Data)), cgoAllocsUnknown
	cMapDevIds, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&MapDevIds)).Data)), cgoAllocsUnknown
	cLen, _ := (C.mx_uint)(Len), cgoAllocsUnknown
	cInArgs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InArgs)).Data)), cgoAllocsUnknown
	cArgGradStore, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ArgGradStore)).Data)), cgoAllocsUnknown
	cGradReqType, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&GradReqType)).Data)), cgoAllocsUnknown
	cAuxStatesLen, _ := (C.mx_uint)(AuxStatesLen), cgoAllocsUnknown
	cAuxStates, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&AuxStates)).Data)), cgoAllocsUnknown
	cOut, _ := (*C.ExecutorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorBindX(cSymbolHandle, cDevType, cDevId, cNumMapKeys, cMapKeys, cMapDevTypes, cMapDevIds, cLen, cInArgs, cArgGradStore, cGradReqType, cAuxStatesLen, cAuxStates, cOut)
	packSString(MapKeys, cMapKeys)
	__v := (int32)(__ret)
	return __v
}

// ExecutorBindEX function as declared in mxnet/c_api.h:1140
func ExecutorBindEX(SymbolHandle unsafe.Pointer, DevType int32, DevId int32, NumMapKeys uint32, MapKeys []string, MapDevTypes []int32, MapDevIds []int32, Len uint32, InArgs []NDArrayHandle, ArgGradStore []NDArrayHandle, GradReqType []uint32, AuxStatesLen uint32, AuxStates []NDArrayHandle, SharedExec unsafe.Pointer, Out []unsafe.Pointer) int32 {
	cSymbolHandle, _ := (C.SymbolHandle)(SymbolHandle), cgoAllocsUnknown
	cDevType, _ := (C.int)(DevType), cgoAllocsUnknown
	cDevId, _ := (C.int)(DevId), cgoAllocsUnknown
	cNumMapKeys, _ := (C.mx_uint)(NumMapKeys), cgoAllocsUnknown
	cMapKeys, _ := unpackArgSString(MapKeys)
	cMapDevTypes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&MapDevTypes)).Data)), cgoAllocsUnknown
	cMapDevIds, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&MapDevIds)).Data)), cgoAllocsUnknown
	cLen, _ := (C.mx_uint)(Len), cgoAllocsUnknown
	cInArgs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InArgs)).Data)), cgoAllocsUnknown
	cArgGradStore, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ArgGradStore)).Data)), cgoAllocsUnknown
	cGradReqType, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&GradReqType)).Data)), cgoAllocsUnknown
	cAuxStatesLen, _ := (C.mx_uint)(AuxStatesLen), cgoAllocsUnknown
	cAuxStates, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&AuxStates)).Data)), cgoAllocsUnknown
	cSharedExec, _ := (C.ExecutorHandle)(SharedExec), cgoAllocsUnknown
	cOut, _ := (*C.ExecutorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorBindEX(cSymbolHandle, cDevType, cDevId, cNumMapKeys, cMapKeys, cMapDevTypes, cMapDevIds, cLen, cInArgs, cArgGradStore, cGradReqType, cAuxStatesLen, cAuxStates, cSharedExec, cOut)
	packSString(MapKeys, cMapKeys)
	__v := (int32)(__ret)
	return __v
}

// ExecutorSimpleBind function as declared in mxnet/c_api.h:1156
func ExecutorSimpleBind(SymbolHandle unsafe.Pointer, DevType int32, DevId int32, NumG2cKeys uint32, G2cKeys []string, G2cDevTypes []int32, G2cDevIds []int32, ProvidedGradReqListLen uint32, ProvidedGradReqNames []string, ProvidedGradReqTypes []string, NumProvidedArgShapes uint32, ProvidedArgShapeNames []string, ProvidedArgShapeData []uint32, ProvidedArgShapeIdx []uint32, NumProvidedArgDtypes uint32, ProvidedArgDtypeNames []string, ProvidedArgDtypes []int32, NumSharedArgNames uint32, SharedArgNameList []string, SharedBufferLen []int32, SharedBufferNameList []string, SharedBufferHandleList []NDArrayHandle, UpdatedSharedBufferNameList [][]string, UpdatedSharedBufferHandleList [][]NDArrayHandle, NumInArgs []uint32, InArgs [][]NDArrayHandle, ArgGrads [][]NDArrayHandle, NumAuxStates []uint32, AuxStates [][]NDArrayHandle, SharedExecHandle unsafe.Pointer, Out []unsafe.Pointer) int32 {
	cSymbolHandle, _ := (C.SymbolHandle)(SymbolHandle), cgoAllocsUnknown
	cDevType, _ := (C.int)(DevType), cgoAllocsUnknown
	cDevId, _ := (C.int)(DevId), cgoAllocsUnknown
	cNumG2cKeys, _ := (C.mx_uint)(NumG2cKeys), cgoAllocsUnknown
	cG2cKeys, _ := unpackArgSString(G2cKeys)
	cG2cDevTypes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&G2cDevTypes)).Data)), cgoAllocsUnknown
	cG2cDevIds, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&G2cDevIds)).Data)), cgoAllocsUnknown
	cProvidedGradReqListLen, _ := (C.mx_uint)(ProvidedGradReqListLen), cgoAllocsUnknown
	cProvidedGradReqNames, _ := unpackArgSString(ProvidedGradReqNames)
	cProvidedGradReqTypes, _ := unpackArgSString(ProvidedGradReqTypes)
	cNumProvidedArgShapes, _ := (C.mx_uint)(NumProvidedArgShapes), cgoAllocsUnknown
	cProvidedArgShapeNames, _ := unpackArgSString(ProvidedArgShapeNames)
	cProvidedArgShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ProvidedArgShapeData)).Data)), cgoAllocsUnknown
	cProvidedArgShapeIdx, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ProvidedArgShapeIdx)).Data)), cgoAllocsUnknown
	cNumProvidedArgDtypes, _ := (C.mx_uint)(NumProvidedArgDtypes), cgoAllocsUnknown
	cProvidedArgDtypeNames, _ := unpackArgSString(ProvidedArgDtypeNames)
	cProvidedArgDtypes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ProvidedArgDtypes)).Data)), cgoAllocsUnknown
	cNumSharedArgNames, _ := (C.mx_uint)(NumSharedArgNames), cgoAllocsUnknown
	cSharedArgNameList, _ := unpackArgSString(SharedArgNameList)
	cSharedBufferLen, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&SharedBufferLen)).Data)), cgoAllocsUnknown
	cSharedBufferNameList, _ := unpackArgSString(SharedBufferNameList)
	cSharedBufferHandleList, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&SharedBufferHandleList)).Data)), cgoAllocsUnknown
	cUpdatedSharedBufferNameList, _ := unpackArgSSString(UpdatedSharedBufferNameList)
	cUpdatedSharedBufferHandleList, _ := unpackArgSSNDArrayHandle(UpdatedSharedBufferHandleList)
	cNumInArgs, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumInArgs)).Data)), cgoAllocsUnknown
	cInArgs, _ := unpackArgSSNDArrayHandle(InArgs)
	cArgGrads, _ := unpackArgSSNDArrayHandle(ArgGrads)
	cNumAuxStates, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumAuxStates)).Data)), cgoAllocsUnknown
	cAuxStates, _ := unpackArgSSNDArrayHandle(AuxStates)
	cSharedExecHandle, _ := (C.ExecutorHandle)(SharedExecHandle), cgoAllocsUnknown
	cOut, _ := (*C.ExecutorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXExecutorSimpleBind(cSymbolHandle, cDevType, cDevId, cNumG2cKeys, cG2cKeys, cG2cDevTypes, cG2cDevIds, cProvidedGradReqListLen, cProvidedGradReqNames, cProvidedGradReqTypes, cNumProvidedArgShapes, cProvidedArgShapeNames, cProvidedArgShapeData, cProvidedArgShapeIdx, cNumProvidedArgDtypes, cProvidedArgDtypeNames, cProvidedArgDtypes, cNumSharedArgNames, cSharedArgNameList, cSharedBufferLen, cSharedBufferNameList, cSharedBufferHandleList, cUpdatedSharedBufferNameList, cUpdatedSharedBufferHandleList, cNumInArgs, cInArgs, cArgGrads, cNumAuxStates, cAuxStates, cSharedExecHandle, cOut)
	packSSNDArrayHandle(AuxStates, cAuxStates)
	packSSNDArrayHandle(ArgGrads, cArgGrads)
	packSSNDArrayHandle(InArgs, cInArgs)
	packSSNDArrayHandle(UpdatedSharedBufferHandleList, cUpdatedSharedBufferHandleList)
	packSSString(UpdatedSharedBufferNameList, cUpdatedSharedBufferNameList)
	packSString(SharedBufferNameList, cSharedBufferNameList)
	packSString(SharedArgNameList, cSharedArgNameList)
	packSString(ProvidedArgDtypeNames, cProvidedArgDtypeNames)
	packSString(ProvidedArgShapeNames, cProvidedArgShapeNames)
	packSString(ProvidedGradReqTypes, cProvidedGradReqTypes)
	packSString(ProvidedGradReqNames, cProvidedGradReqNames)
	packSString(G2cKeys, cG2cKeys)
	__v := (int32)(__ret)
	return __v
}

// ExecutorSetMonitorCallback function as declared in mxnet/c_api.h:1190
func ExecutorSetMonitorCallback(Handle unsafe.Pointer, Callback ExecutorMonitorCallback, CallbackHandle unsafe.Pointer) int32 {
	cHandle, _ := (C.ExecutorHandle)(Handle), cgoAllocsUnknown
	cCallback, _ := Callback.PassValue()
	cCallbackHandle, _ := (unsafe.Pointer)(unsafe.Pointer(CallbackHandle)), cgoAllocsUnknown
	__ret := C.MXExecutorSetMonitorCallback(cHandle, cCallback, cCallbackHandle)
	__v := (int32)(__ret)
	return __v
}

// ListDataIters function as declared in mxnet/c_api.h:1202
func ListDataIters(OutSize []uint32, OutArray *unsafe.Pointer) int32 {
	cOutSize, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	cOutArray, _ := (**C.DataIterCreator)(unsafe.Pointer(OutArray)), cgoAllocsUnknown
	__ret := C.MXListDataIters(cOutSize, cOutArray)
	__v := (int32)(__ret)
	return __v
}

// DataIterCreateIter function as declared in mxnet/c_api.h:1214
func DataIterCreateIter(Handle unsafe.Pointer, NumParam uint32, Keys []string, Vals []string, Out []unsafe.Pointer) int32 {
	cHandle, _ := (C.DataIterCreator)(Handle), cgoAllocsUnknown
	cNumParam, _ := (C.mx_uint)(NumParam), cgoAllocsUnknown
	cKeys, _ := unpackArgSString(Keys)
	cVals, _ := unpackArgSString(Vals)
	cOut, _ := (*C.DataIterHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterCreateIter(cHandle, cNumParam, cKeys, cVals, cOut)
	packSString(Vals, cVals)
	packSString(Keys, cKeys)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetIterInfo function as declared in mxnet/c_api.h:1230
func DataIterGetIterInfo(Creator unsafe.Pointer, Name []string, Description []string, NumArgs []uint32, ArgNames [][]string, ArgTypeInfos [][]string, ArgDescriptions [][]string) int32 {
	cCreator, _ := (C.DataIterCreator)(Creator), cgoAllocsUnknown
	cName, _ := unpackArgSString(Name)
	cDescription, _ := unpackArgSString(Description)
	cNumArgs, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&NumArgs)).Data)), cgoAllocsUnknown
	cArgNames, _ := unpackArgSSString(ArgNames)
	cArgTypeInfos, _ := unpackArgSSString(ArgTypeInfos)
	cArgDescriptions, _ := unpackArgSSString(ArgDescriptions)
	__ret := C.MXDataIterGetIterInfo(cCreator, cName, cDescription, cNumArgs, cArgNames, cArgTypeInfos, cArgDescriptions)
	packSSString(ArgDescriptions, cArgDescriptions)
	packSSString(ArgTypeInfos, cArgTypeInfos)
	packSSString(ArgNames, cArgNames)
	packSString(Description, cDescription)
	packSString(Name, cName)
	__v := (int32)(__ret)
	return __v
}

// DataIterFree function as declared in mxnet/c_api.h:1242
func DataIterFree(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.DataIterHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXDataIterFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// DataIterNext function as declared in mxnet/c_api.h:1249
func DataIterNext(Handle unsafe.Pointer, Out []int32) int32 {
	cHandle, _ := (C.DataIterHandle)(Handle), cgoAllocsUnknown
	cOut, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterNext(cHandle, cOut)
	__v := (int32)(__ret)
	return __v
}

// DataIterBeforeFirst function as declared in mxnet/c_api.h:1256
func DataIterBeforeFirst(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.DataIterHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXDataIterBeforeFirst(cHandle)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetData function as declared in mxnet/c_api.h:1264
func DataIterGetData(Handle unsafe.Pointer, Out []NDArrayHandle) int32 {
	cHandle, _ := (C.DataIterHandle)(Handle), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterGetData(cHandle, cOut)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetIndex function as declared in mxnet/c_api.h:1273
func DataIterGetIndex(Handle unsafe.Pointer, OutIndex [][]uint64, OutSize []uint64) int32 {
	cHandle, _ := (C.DataIterHandle)(Handle), cgoAllocsUnknown
	cOutIndex, _ := unpackArgSSUUint64(OutIndex)
	cOutSize, _ := (*C.uint64_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutSize)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterGetIndex(cHandle, cOutIndex, cOutSize)
	packSSUUint64(OutIndex, cOutIndex)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetPadNum function as declared in mxnet/c_api.h:1282
func DataIterGetPadNum(Handle unsafe.Pointer, Pad []int32) int32 {
	cHandle, _ := (C.DataIterHandle)(Handle), cgoAllocsUnknown
	cPad, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Pad)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterGetPadNum(cHandle, cPad)
	__v := (int32)(__ret)
	return __v
}

// DataIterGetLabel function as declared in mxnet/c_api.h:1291
func DataIterGetLabel(Handle unsafe.Pointer, Out []NDArrayHandle) int32 {
	cHandle, _ := (C.DataIterHandle)(Handle), cgoAllocsUnknown
	cOut, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXDataIterGetLabel(cHandle, cOut)
	__v := (int32)(__ret)
	return __v
}

// InitPSEnv function as declared in mxnet/c_api.h:1302
func InitPSEnv(NumVars uint32, Keys []string, Vals []string) int32 {
	cNumVars, _ := (C.mx_uint)(NumVars), cgoAllocsUnknown
	cKeys, _ := unpackArgSString(Keys)
	cVals, _ := unpackArgSString(Vals)
	__ret := C.MXInitPSEnv(cNumVars, cKeys, cVals)
	packSString(Vals, cVals)
	packSString(Keys, cKeys)
	__v := (int32)(__ret)
	return __v
}

// KVStoreCreate function as declared in mxnet/c_api.h:1313
func KVStoreCreate(Type string, Out []unsafe.Pointer) int32 {
	Type = safeString(Type)
	cType, _ := unpackPCharString(Type)
	cOut, _ := (*C.KVStoreHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreCreate(cType, cOut)
	runtime.KeepAlive(Type)
	__v := (int32)(__ret)
	return __v
}

// KVStoreFree function as declared in mxnet/c_api.h:1320
func KVStoreFree(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXKVStoreFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// KVStoreInit function as declared in mxnet/c_api.h:1329
func KVStoreInit(Handle unsafe.Pointer, Num uint32, Keys []int32, Vals []NDArrayHandle) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cNum, _ := (C.mx_uint)(Num), cgoAllocsUnknown
	cKeys, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Keys)).Data)), cgoAllocsUnknown
	cVals, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Vals)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreInit(cHandle, cNum, cKeys, cVals)
	__v := (int32)(__ret)
	return __v
}

// KVStorePush function as declared in mxnet/c_api.h:1343
func KVStorePush(Handle unsafe.Pointer, Num uint32, Keys []int32, Vals []NDArrayHandle, Priority int32) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cNum, _ := (C.mx_uint)(Num), cgoAllocsUnknown
	cKeys, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Keys)).Data)), cgoAllocsUnknown
	cVals, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Vals)).Data)), cgoAllocsUnknown
	cPriority, _ := (C.int)(Priority), cgoAllocsUnknown
	__ret := C.MXKVStorePush(cHandle, cNum, cKeys, cVals, cPriority)
	__v := (int32)(__ret)
	return __v
}

// KVStorePull function as declared in mxnet/c_api.h:1357
func KVStorePull(Handle unsafe.Pointer, Num uint32, Keys []int32, Vals []NDArrayHandle, Priority int32) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cNum, _ := (C.mx_uint)(Num), cgoAllocsUnknown
	cKeys, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Keys)).Data)), cgoAllocsUnknown
	cVals, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Vals)).Data)), cgoAllocsUnknown
	cPriority, _ := (C.int)(Priority), cgoAllocsUnknown
	__ret := C.MXKVStorePull(cHandle, cNum, cKeys, cVals, cPriority)
	__v := (int32)(__ret)
	return __v
}

// KVStoreSetUpdater function as declared in mxnet/c_api.h:1381
func KVStoreSetUpdater(Handle unsafe.Pointer, Updater MXKVStoreUpdater, UpdaterHandle unsafe.Pointer) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cUpdater, _ := Updater.PassValue()
	cUpdaterHandle, _ := (unsafe.Pointer)(unsafe.Pointer(UpdaterHandle)), cgoAllocsUnknown
	__ret := C.MXKVStoreSetUpdater(cHandle, cUpdater, cUpdaterHandle)
	__v := (int32)(__ret)
	return __v
}

// KVStoreGetType function as declared in mxnet/c_api.h:1390
func KVStoreGetType(Handle unsafe.Pointer, Type []string) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cType, _ := unpackArgSString(Type)
	__ret := C.MXKVStoreGetType(cHandle, cType)
	packSString(Type, cType)
	__v := (int32)(__ret)
	return __v
}

// KVStoreGetRank function as declared in mxnet/c_api.h:1403
func KVStoreGetRank(Handle unsafe.Pointer, Ret []int32) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cRet, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreGetRank(cHandle, cRet)
	__v := (int32)(__ret)
	return __v
}

// KVStoreGetGroupSize function as declared in mxnet/c_api.h:1415
func KVStoreGetGroupSize(Handle unsafe.Pointer, Ret []int32) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cRet, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreGetGroupSize(cHandle, cRet)
	__v := (int32)(__ret)
	return __v
}

// KVStoreIsWorkerNode function as declared in mxnet/c_api.h:1423
func KVStoreIsWorkerNode(Ret []int32) int32 {
	cRet, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreIsWorkerNode(cRet)
	__v := (int32)(__ret)
	return __v
}

// KVStoreIsServerNode function as declared in mxnet/c_api.h:1431
func KVStoreIsServerNode(Ret []int32) int32 {
	cRet, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreIsServerNode(cRet)
	__v := (int32)(__ret)
	return __v
}

// KVStoreIsSchedulerNode function as declared in mxnet/c_api.h:1439
func KVStoreIsSchedulerNode(Ret []int32) int32 {
	cRet, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Ret)).Data)), cgoAllocsUnknown
	__ret := C.MXKVStoreIsSchedulerNode(cRet)
	__v := (int32)(__ret)
	return __v
}

// KVStoreBarrier function as declared in mxnet/c_api.h:1447
func KVStoreBarrier(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXKVStoreBarrier(cHandle)
	__v := (int32)(__ret)
	return __v
}

// KVStoreSetBarrierBeforeExit function as declared in mxnet/c_api.h:1456
func KVStoreSetBarrierBeforeExit(Handle unsafe.Pointer, BarrierBeforeExit int32) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cBarrierBeforeExit, _ := (C.int)(BarrierBeforeExit), cgoAllocsUnknown
	__ret := C.MXKVStoreSetBarrierBeforeExit(cHandle, cBarrierBeforeExit)
	__v := (int32)(__ret)
	return __v
}

// KVStoreRunServer function as declared in mxnet/c_api.h:1477
func KVStoreRunServer(Handle unsafe.Pointer, Controller MXKVStoreServerController, ControllerHandle unsafe.Pointer) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cController, _ := Controller.PassValue()
	cControllerHandle, _ := (unsafe.Pointer)(unsafe.Pointer(ControllerHandle)), cgoAllocsUnknown
	__ret := C.MXKVStoreRunServer(cHandle, cController, cControllerHandle)
	__v := (int32)(__ret)
	return __v
}

// KVStoreSendCommmandToServers function as declared in mxnet/c_api.h:1489
func KVStoreSendCommmandToServers(Handle unsafe.Pointer, CmdId int32, CmdBody string) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cCmdId, _ := (C.int)(CmdId), cgoAllocsUnknown
	CmdBody = safeString(CmdBody)
	cCmdBody, _ := unpackPCharString(CmdBody)
	__ret := C.MXKVStoreSendCommmandToServers(cHandle, cCmdId, cCmdBody)
	runtime.KeepAlive(CmdBody)
	__v := (int32)(__ret)
	return __v
}

// KVStoreGetNumDeadNode function as declared in mxnet/c_api.h:1503
func KVStoreGetNumDeadNode(Handle unsafe.Pointer, NodeId int32, Number []int32, TimeoutSec int32) int32 {
	cHandle, _ := (C.KVStoreHandle)(Handle), cgoAllocsUnknown
	cNodeId, _ := (C.int)(NodeId), cgoAllocsUnknown
	cNumber, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Number)).Data)), cgoAllocsUnknown
	cTimeoutSec, _ := (C.int)(TimeoutSec), cgoAllocsUnknown
	__ret := C.MXKVStoreGetNumDeadNode(cHandle, cNodeId, cNumber, cTimeoutSec)
	__v := (int32)(__ret)
	return __v
}

// RecordIOWriterCreate function as declared in mxnet/c_api.h:1514
func RecordIOWriterCreate(Uri string, Out []unsafe.Pointer) int32 {
	Uri = safeString(Uri)
	cUri, _ := unpackPCharString(Uri)
	cOut, _ := (*C.RecordIOHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXRecordIOWriterCreate(cUri, cOut)
	runtime.KeepAlive(Uri)
	__v := (int32)(__ret)
	return __v
}

// RecordIOWriterFree function as declared in mxnet/c_api.h:1521
func RecordIOWriterFree(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.RecordIOHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXRecordIOWriterFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// RecordIOWriterWriteRecord function as declared in mxnet/c_api.h:1530
func RecordIOWriterWriteRecord(Handle unsafe.Pointer, Buf string, Size uint) int32 {
	cHandle, _ := (C.RecordIOHandle)(Handle), cgoAllocsUnknown
	Buf = safeString(Buf)
	cBuf, _ := unpackPCharString(Buf)
	cSize, _ := (C.size_t)(Size), cgoAllocsUnknown
	__ret := C.MXRecordIOWriterWriteRecord(cHandle, cBuf, cSize)
	runtime.KeepAlive(Buf)
	__v := (int32)(__ret)
	return __v
}

// RecordIOWriterTell function as declared in mxnet/c_api.h:1539
func RecordIOWriterTell(Handle unsafe.Pointer, Pos []uint) int32 {
	cHandle, _ := (C.RecordIOHandle)(Handle), cgoAllocsUnknown
	cPos, _ := (*C.size_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Pos)).Data)), cgoAllocsUnknown
	__ret := C.MXRecordIOWriterTell(cHandle, cPos)
	__v := (int32)(__ret)
	return __v
}

// RecordIOReaderCreate function as declared in mxnet/c_api.h:1547
func RecordIOReaderCreate(Uri string, Out []unsafe.Pointer) int32 {
	Uri = safeString(Uri)
	cUri, _ := unpackPCharString(Uri)
	cOut, _ := (*C.RecordIOHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXRecordIOReaderCreate(cUri, cOut)
	runtime.KeepAlive(Uri)
	__v := (int32)(__ret)
	return __v
}

// RecordIOReaderFree function as declared in mxnet/c_api.h:1554
func RecordIOReaderFree(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.RecordIOHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXRecordIOReaderFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// RecordIOReaderReadRecord function as declared in mxnet/c_api.h:1563
func RecordIOReaderReadRecord(Handle unsafe.Pointer, Buf []string, Size []uint) int32 {
	cHandle, _ := (C.RecordIOHandle)(Handle), cgoAllocsUnknown
	cBuf, _ := unpackArgSString(Buf)
	cSize, _ := (*C.size_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Size)).Data)), cgoAllocsUnknown
	__ret := C.MXRecordIOReaderReadRecord(cHandle, cBuf, cSize)
	packSString(Buf, cBuf)
	__v := (int32)(__ret)
	return __v
}

// RecordIOReaderSeek function as declared in mxnet/c_api.h:1572
func RecordIOReaderSeek(Handle unsafe.Pointer, Pos uint) int32 {
	cHandle, _ := (C.RecordIOHandle)(Handle), cgoAllocsUnknown
	cPos, _ := (C.size_t)(Pos), cgoAllocsUnknown
	__ret := C.MXRecordIOReaderSeek(cHandle, cPos)
	__v := (int32)(__ret)
	return __v
}

// RtcCreate function as declared in mxnet/c_api.h:1577
func RtcCreate(Name []byte, NumInput uint32, NumOutput uint32, InputNames [][]byte, OutputNames [][]byte, Inputs []NDArrayHandle, Outputs []NDArrayHandle, Kernel []byte, Out []unsafe.Pointer) int32 {
	cName, _ := (*C.char)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Name)).Data)), cgoAllocsUnknown
	cNumInput, _ := (C.mx_uint)(NumInput), cgoAllocsUnknown
	cNumOutput, _ := (C.mx_uint)(NumOutput), cgoAllocsUnknown
	cInputNames, _ := unpackArgSSByte(InputNames)
	cOutputNames, _ := unpackArgSSByte(OutputNames)
	cInputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Inputs)).Data)), cgoAllocsUnknown
	cOutputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Outputs)).Data)), cgoAllocsUnknown
	cKernel, _ := (*C.char)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Kernel)).Data)), cgoAllocsUnknown
	cOut, _ := (*C.RtcHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXRtcCreate(cName, cNumInput, cNumOutput, cInputNames, cOutputNames, cInputs, cOutputs, cKernel, cOut)
	packSSByte(OutputNames, cOutputNames)
	packSSByte(InputNames, cInputNames)
	__v := (int32)(__ret)
	return __v
}

// RtcPush function as declared in mxnet/c_api.h:1585
func RtcPush(Handle unsafe.Pointer, NumInput uint32, NumOutput uint32, Inputs []NDArrayHandle, Outputs []NDArrayHandle, GridDimX uint32, GridDimY uint32, GridDimZ uint32, BlockDimX uint32, BlockDimY uint32, BlockDimZ uint32) int32 {
	cHandle, _ := (C.RtcHandle)(Handle), cgoAllocsUnknown
	cNumInput, _ := (C.mx_uint)(NumInput), cgoAllocsUnknown
	cNumOutput, _ := (C.mx_uint)(NumOutput), cgoAllocsUnknown
	cInputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Inputs)).Data)), cgoAllocsUnknown
	cOutputs, _ := (*C.NDArrayHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Outputs)).Data)), cgoAllocsUnknown
	cGridDimX, _ := (C.mx_uint)(GridDimX), cgoAllocsUnknown
	cGridDimY, _ := (C.mx_uint)(GridDimY), cgoAllocsUnknown
	cGridDimZ, _ := (C.mx_uint)(GridDimZ), cgoAllocsUnknown
	cBlockDimX, _ := (C.mx_uint)(BlockDimX), cgoAllocsUnknown
	cBlockDimY, _ := (C.mx_uint)(BlockDimY), cgoAllocsUnknown
	cBlockDimZ, _ := (C.mx_uint)(BlockDimZ), cgoAllocsUnknown
	__ret := C.MXRtcPush(cHandle, cNumInput, cNumOutput, cInputs, cOutputs, cGridDimX, cGridDimY, cGridDimZ, cBlockDimX, cBlockDimY, cBlockDimZ)
	__v := (int32)(__ret)
	return __v
}

// RtcFree function as declared in mxnet/c_api.h:1597
func RtcFree(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.RtcHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXRtcFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// CustomOpRegister function as declared in mxnet/c_api.h:1599
func CustomOpRegister(OpType string, Creator CustomOpPropCreator) int32 {
	OpType = safeString(OpType)
	cOpType, _ := unpackPCharString(OpType)
	cCreator, _ := Creator.PassValue()
	__ret := C.MXCustomOpRegister(cOpType, cCreator)
	runtime.KeepAlive(OpType)
	__v := (int32)(__ret)
	return __v
}

// GetLastError function as declared in mxnet/c_predict_api.h:34
func GetLastError() string {
	__ret := C.MXGetLastError()
	__v := packPCharString(__ret)
	return __v
}

// PredCreate function as declared in mxnet/c_predict_api.h:55
func PredCreate(SymbolJsonStr string, ParamBytes unsafe.Pointer, ParamSize int32, DevType int32, DevId int32, NumInputNodes uint32, InputKeys []string, InputShapeIndptr []uint32, InputShapeData []uint32, Out []unsafe.Pointer) int32 {
	SymbolJsonStr = safeString(SymbolJsonStr)
	cSymbolJsonStr, _ := unpackPCharString(SymbolJsonStr)
	cParamBytes, _ := (unsafe.Pointer)(unsafe.Pointer(ParamBytes)), cgoAllocsUnknown
	cParamSize, _ := (C.int)(ParamSize), cgoAllocsUnknown
	cDevType, _ := (C.int)(DevType), cgoAllocsUnknown
	cDevId, _ := (C.int)(DevId), cgoAllocsUnknown
	cNumInputNodes, _ := (C.mx_uint)(NumInputNodes), cgoAllocsUnknown
	cInputKeys, _ := unpackArgSString(InputKeys)
	cInputShapeIndptr, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InputShapeIndptr)).Data)), cgoAllocsUnknown
	cInputShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InputShapeData)).Data)), cgoAllocsUnknown
	cOut, _ := (*C.PredictorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXPredCreate(cSymbolJsonStr, cParamBytes, cParamSize, cDevType, cDevId, cNumInputNodes, cInputKeys, cInputShapeIndptr, cInputShapeData, cOut)
	packSString(InputKeys, cInputKeys)
	runtime.KeepAlive(SymbolJsonStr)
	__v := (int32)(__ret)
	return __v
}

// PredCreatePartialOut function as declared in mxnet/c_predict_api.h:88
func PredCreatePartialOut(SymbolJsonStr string, ParamBytes unsafe.Pointer, ParamSize int32, DevType int32, DevId int32, NumInputNodes uint32, InputKeys []string, InputShapeIndptr []uint32, InputShapeData []uint32, NumOutputNodes uint32, OutputKeys []string, Out []unsafe.Pointer) int32 {
	SymbolJsonStr = safeString(SymbolJsonStr)
	cSymbolJsonStr, _ := unpackPCharString(SymbolJsonStr)
	cParamBytes, _ := (unsafe.Pointer)(unsafe.Pointer(ParamBytes)), cgoAllocsUnknown
	cParamSize, _ := (C.int)(ParamSize), cgoAllocsUnknown
	cDevType, _ := (C.int)(DevType), cgoAllocsUnknown
	cDevId, _ := (C.int)(DevId), cgoAllocsUnknown
	cNumInputNodes, _ := (C.mx_uint)(NumInputNodes), cgoAllocsUnknown
	cInputKeys, _ := unpackArgSString(InputKeys)
	cInputShapeIndptr, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InputShapeIndptr)).Data)), cgoAllocsUnknown
	cInputShapeData, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&InputShapeData)).Data)), cgoAllocsUnknown
	cNumOutputNodes, _ := (C.mx_uint)(NumOutputNodes), cgoAllocsUnknown
	cOutputKeys, _ := unpackArgSString(OutputKeys)
	cOut, _ := (*C.PredictorHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	__ret := C.MXPredCreatePartialOut(cSymbolJsonStr, cParamBytes, cParamSize, cDevType, cDevId, cNumInputNodes, cInputKeys, cInputShapeIndptr, cInputShapeData, cNumOutputNodes, cOutputKeys, cOut)
	packSString(OutputKeys, cOutputKeys)
	packSString(InputKeys, cInputKeys)
	runtime.KeepAlive(SymbolJsonStr)
	__v := (int32)(__ret)
	return __v
}

// PredGetOutputShape function as declared in mxnet/c_predict_api.h:108
func PredGetOutputShape(Handle unsafe.Pointer, Index uint32, ShapeData [][]uint32, ShapeNdim []uint32) int32 {
	cHandle, _ := (C.PredictorHandle)(Handle), cgoAllocsUnknown
	cIndex, _ := (C.mx_uint)(Index), cgoAllocsUnknown
	cShapeData, _ := unpackArgSSUUint32(ShapeData)
	cShapeNdim, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ShapeNdim)).Data)), cgoAllocsUnknown
	__ret := C.MXPredGetOutputShape(cHandle, cIndex, cShapeData, cShapeNdim)
	packSSUUint32(ShapeData, cShapeData)
	__v := (int32)(__ret)
	return __v
}

// PredSetInput function as declared in mxnet/c_predict_api.h:121
func PredSetInput(Handle unsafe.Pointer, Key string, Data []float32, Size uint32) int32 {
	cHandle, _ := (C.PredictorHandle)(Handle), cgoAllocsUnknown
	Key = safeString(Key)
	cKey, _ := unpackPCharString(Key)
	cData, _ := (*C.mx_float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Data)).Data)), cgoAllocsUnknown
	cSize, _ := (C.mx_uint)(Size), cgoAllocsUnknown
	__ret := C.MXPredSetInput(cHandle, cKey, cData, cSize)
	runtime.KeepAlive(Key)
	__v := (int32)(__ret)
	return __v
}

// PredForward function as declared in mxnet/c_predict_api.h:130
func PredForward(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.PredictorHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXPredForward(cHandle)
	__v := (int32)(__ret)
	return __v
}

// PredPartialForward function as declared in mxnet/c_predict_api.h:147
func PredPartialForward(Handle unsafe.Pointer, Step int32, StepLeft []int32) int32 {
	cHandle, _ := (C.PredictorHandle)(Handle), cgoAllocsUnknown
	cStep, _ := (C.int)(Step), cgoAllocsUnknown
	cStepLeft, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&StepLeft)).Data)), cgoAllocsUnknown
	__ret := C.MXPredPartialForward(cHandle, cStep, cStepLeft)
	__v := (int32)(__ret)
	return __v
}

// PredGetOutput function as declared in mxnet/c_predict_api.h:156
func PredGetOutput(Handle unsafe.Pointer, Index uint32, Data []float32, Size uint32) int32 {
	cHandle, _ := (C.PredictorHandle)(Handle), cgoAllocsUnknown
	cIndex, _ := (C.mx_uint)(Index), cgoAllocsUnknown
	cData, _ := (*C.mx_float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Data)).Data)), cgoAllocsUnknown
	cSize, _ := (C.mx_uint)(Size), cgoAllocsUnknown
	__ret := C.MXPredGetOutput(cHandle, cIndex, cData, cSize)
	__v := (int32)(__ret)
	return __v
}

// PredFree function as declared in mxnet/c_predict_api.h:165
func PredFree(Handle unsafe.Pointer) int32 {
	cHandle, _ := (C.PredictorHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXPredFree(cHandle)
	__v := (int32)(__ret)
	return __v
}

// NDListCreate function as declared in mxnet/c_predict_api.h:175
func NDListCreate(NdFileBytes string, NdFileSize int32, Out []NDListHandle, OutLength []uint32) int32 {
	NdFileBytes = safeString(NdFileBytes)
	cNdFileBytes, _ := unpackPCharString(NdFileBytes)
	cNdFileSize, _ := (C.int)(NdFileSize), cgoAllocsUnknown
	cOut, _ := (*C.NDListHandle)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&Out)).Data)), cgoAllocsUnknown
	cOutLength, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutLength)).Data)), cgoAllocsUnknown
	__ret := C.MXNDListCreate(cNdFileBytes, cNdFileSize, cOut, cOutLength)
	runtime.KeepAlive(NdFileBytes)
	__v := (int32)(__ret)
	return __v
}

// NDListGet function as declared in mxnet/c_predict_api.h:189
func NDListGet(Handle NDListHandle, Index uint32, OutKey []string, OutData [][]float32, OutShape [][]uint32, OutNdim []uint32) int32 {
	cHandle, _ := (C.NDListHandle)(Handle), cgoAllocsUnknown
	cIndex, _ := (C.mx_uint)(Index), cgoAllocsUnknown
	cOutKey, _ := unpackArgSString(OutKey)
	cOutData, _ := unpackArgSSFloat32(OutData)
	cOutShape, _ := unpackArgSSUUint32(OutShape)
	cOutNdim, _ := (*C.mx_uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&OutNdim)).Data)), cgoAllocsUnknown
	__ret := C.MXNDListGet(cHandle, cIndex, cOutKey, cOutData, cOutShape, cOutNdim)
	packSSUUint32(OutShape, cOutShape)
	packSSFloat32(OutData, cOutData)
	packSString(OutKey, cOutKey)
	__v := (int32)(__ret)
	return __v
}

// NDListFree function as declared in mxnet/c_predict_api.h:200
func NDListFree(Handle NDListHandle) int32 {
	cHandle, _ := (C.NDListHandle)(Handle), cgoAllocsUnknown
	__ret := C.MXNDListFree(cHandle)
	__v := (int32)(__ret)
	return __v
}
