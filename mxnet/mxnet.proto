syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

option go_package = "mxnet";

package carml.org.mxnet;

message ErrorStatus {
  bool ok = 1 [ (gogoproto.moretags) = "yaml:\"ok,omitempty\"" ];
  string message = 2 [ (gogoproto.moretags) = "yaml:\"message,omitempty\"" ];
}

message ContainerArchicture {
  string gpu = 1 [ (gogoproto.moretags) = "yaml:\"gpu,omitempty\"" ];
  string cpu = 2 [ (gogoproto.moretags) = "yaml:\"cpu,omitempty\"" ];
}

message Model {
  message Input {
    string type = 1 [ (gogoproto.moretags) = "yaml:\"type,omitempty\"" ];
    repeated int64 dimensions = 2
        [ (gogoproto.moretags) = "yaml:\"dimensions,omitempty\"" ];
  }

  message Output { repeated string labels = 1; }

  message Information {
    string name = 1 [ (gogoproto.moretags) = "yaml:\"name,omitempty\"" ];
    string description = 2
        [ (gogoproto.moretags) = "yaml:\"description,omitempty\"" ];
    map<string, ContainerArchicture> container = 3
        [ (gogoproto.moretags) = "yaml:\"container,omitempty\"" ];
    string framework = 4
        [ (gogoproto.moretags) = "yaml:\"framework,omitempty\"" ];
    string version = 5 [ (gogoproto.moretags) = "yaml:\"version,omitempty\"" ];
    string type = 6 [ (gogoproto.moretags) = "yaml:\"type,omitempty\"" ];
    string dataset_name = 7
        [ (gogoproto.moretags) = "yaml:\"dataset_name,omitempty\"" ];
    string graph_url = 8
        [ (gogoproto.moretags) = "yaml:\"graph_url,omitempty\"" ];
    string weights_url = 9
        [ (gogoproto.moretags) = "yaml:\"weights_url,omitempty\"" ];
    string features_url = 10
        [ (gogoproto.moretags) = "yaml:\"features_url,omitempty\"" ];
    Input input = 11 [ (gogoproto.moretags) = "yaml:\"input,omitempty\"" ];
    repeated float mean_image = 12
        [ (gogoproto.moretags) = "yaml:\"mean_image,omitempty\"" ];
    repeated string references = 13
        [ (gogoproto.moretags) = "yaml:\"references,omitempty\"" ];
  }
  message Graph {
    message NodeEntry {
      int64 node_id = 1 [ (gogoproto.moretags) = "yaml:\"node_id,omitempty\"" ];
      int64 index = 2 [ (gogoproto.moretags) = "yaml:\"input,omitempty\"" ];
      int64 version = 3 [ (gogoproto.moretags) = "yaml:\"version,omitempty\"" ];
    }

    message Node {
      string op = 1 [ (gogoproto.moretags) = "yaml:\"op,omitempty\"" ];
      map<string, string> param = 2
          [ (gogoproto.moretags) = "yaml:\"params,omitempty\"" ];
      string name = 3 [ (gogoproto.moretags) = "yaml:\"name,omitempty\"" ];
      repeated NodeEntry inputs = 4
          [ (gogoproto.moretags) = "yaml:\"inputs,omitempty\"" ];
      int64 backward_source_id = 5
          [ (gogoproto.moretags) = "yaml:\"backward_source_id,omitempty\"" ];
      repeated int64 control_deps = 6
          [ (gogoproto.moretags) = "yaml:\"control_deps,omitempty\"" ];
    }

    message Attributes { map<string, string> attrs = 1; }

    repeated Node nodes = 1
        [ (gogoproto.moretags) = "yaml:\"nodes,omitempty\"" ];
    repeated int64 arg_nodes = 2
        [ (gogoproto.moretags) = "yaml:\"arg_nodes,omitempty\"" ];
    repeated int64 node_row_ptr = 3
        [ (gogoproto.moretags) = "yaml:\"node_row_ptr,omitempty\"" ];
    repeated NodeEntry heads = 4
        [ (gogoproto.moretags) = "yaml:\"heads,omitempty\"" ];
    Attributes attrs = 5 [ (gogoproto.moretags) = "yaml:\"attrs,omitempty\"" ];
  }
}

message ModelInformations {
  repeated Model.Information info = 1
      [ (gogoproto.moretags) = "yaml:\"info,omitempty\"" ];
}

message MXNetInferenceRequest {
  string id = 1 [ (gogoproto.moretags) = "yaml:\"id,omitempty\"" ];
  string model_name = 2
      [ (gogoproto.moretags) = "yaml:\"model_name,omitempty\"" ];
  string url = 3 [ (gogoproto.moretags) = "yaml:\"url,omitempty\"" ];
  bytes data = 4 [ (gogoproto.moretags) = "yaml:\"data,omitempty\"" ];
}

message Feature {
  int64 index = 1 [ (gogoproto.moretags) = "yaml:\"index,omitempty\"" ];
  string name = 2 [ (gogoproto.moretags) = "yaml:\"name,omitempty\"" ];
  float probability = 3
      [ (gogoproto.moretags) = "yaml:\"probability,omitempty\"" ];
}

message MXNetInferenceResponse {
  string id = 1 [ (gogoproto.moretags) = "yaml:\"id,omitempty\"" ];
  repeated Feature features = 2
      [ (gogoproto.moretags) = "yaml:\"features,omitempty\"" ];
  ErrorStatus error = 3 [ (gogoproto.moretags) = "yaml:\"error,omitempty\"" ];
}

message MXNetModelInformationRequest {
  string model_name = 1
      [ (gogoproto.moretags) = "yaml:\"model_name,omitempty\"" ];
}

message Null {}

service MXNet {
  rpc InferURL(MXNetInferenceRequest) returns (stream MXNetInferenceResponse) {}
  rpc InferBytes(MXNetInferenceRequest)
      returns (stream MXNetInferenceResponse) {}
  rpc GetModelInformations(Null) returns (ModelInformations) {}
  rpc GetModelInformation(MXNetModelInformationRequest)
      returns (Model.Information) {}
  rpc GetModelGraph(MXNetModelInformationRequest) returns (Model.Graph) {}
}
