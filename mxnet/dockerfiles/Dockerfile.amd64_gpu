FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04
MAINTAINER Carl Pearson <pearson@illinois.edu>

# Install the core library
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
    && apt-get install -y \
    build-essential \
    curl \
    git \
    libopenblas-dev \
    libopencv-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

#Install Glide
RUN apt-get update \
    && apt-get install -y \
    software-properties-common \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
RUN add-apt-repository ppa:masterminds/glide \
    && apt-get update \
    && apt-get install glide \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

#Install Go
WORKDIR /
RUN VERSION=1.8.3 \
    && OS=linux \
    && ARCH=amd64 \
    && NAME=go$VERSION.${OS}-$ARCH.tar.gz \
    && curl -fsSL https://storage.googleapis.com/golang/$NAME -O \
    && tar -C /usr/local -xf $NAME \
    && rm $NAME
ENV GOROOT "/usr/local/go"
ENV PATH "$GOROOT/bin:$PATH"
ENV GOPATH "/go"
RUN mkdir -p $GOPATH

# Install mxnet
RUN git clone --recursive https://github.com/dmlc/mxnet && cd mxnet && \ 
    cp make/config.mk . && \
    echo "USE_CUDA=1" >>config.mk && \
    echo "USE_CUDA_PATH=/usr/local/cuda" >>config.mk && \
    echo "USE_CUDNN=1" >>config.mk && \
    echo "USE_BLAS=openblas" >>config.mk && \
    make -j$(nproc) ADD_LDFLAGS=-L/usr/local/cuda/lib64/stubs
RUN ln -s /mxnet/lib/libmxnet.so /usr/lib/libmxnet.so

ENV LD_LIBRARY_PATH /usr/local/cuda/lib64:$LD_LIBRARY_PATH

# Get Go mxnet bindings
RUN go get -u -v github.com/songtianyi/go-mxnet-predictor
RUN sed -i "/prefix=/c prefix=\/mxnet" $GOPATH/src/github.com/songtianyi/go-mxnet-predictor/travis/mxnet.pc
RUN cp $GOPATH/src/github.com/songtianyi/go-mxnet-predictor/travis/mxnet.pc /usr/lib/pkgconfig
RUN pkg-config --libs mxnet
RUN cd $GOPATH/src/github.com/songtianyi/go-mxnet-predictor && go get -v .../.

# Get the rai-project mxnet agent
WORKDIR $GOPATH/src/github.com/rai-project
RUN git clone https://github.com/rai-project/dlframework.git
WORKDIR dlframework
RUN glide install
WORKDIR mxnet/docker-agent
#RUN go get -v .../.
RUN go build
ENTRYPOINT ["./docker-agent"]

## Data needed for $GOPATH/src/github.com/songtiyani/examples/flower
#RUN mkdir /data
#RUN cd /data && wget https://www.dropbox.com/s/7l8zye9jpv2bywu/102flowers-0260.params
#RUN cd /data && wget https://www.dropbox.com/s/507hikz8561hwxg/102flowers-symbol.json
#RUN cd /data && wget https://www.dropbox.com/s/rg45ma97x886i53/mean.bin
#RUN cd /data && wget https://www.dropbox.com/s/9ej43gpkcdw3q32/flowertest.jpg

